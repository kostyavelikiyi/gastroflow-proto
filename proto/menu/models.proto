syntax = "proto3";

package com.gastroflow.menu;

import "google/protobuf/timestamp.proto";
import "common/types.proto";
import "common/enums.proto";
import "validate/validate.proto";

option go_package = "github.com/gastroflow/proto-go/menu";

// Menu - меню ресторана
message Menu {
  // Уникальный идентификатор меню
  com.gastroflow.common.UUID id = 1 [(validate.rules).message.required = true];
  
  // Название меню
  string name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 200
  }];
  
  // Описание меню
  string description = 3 [(validate.rules).string.max_len = 1000];
  
  // Идентификатор ресторана
  com.gastroflow.common.UUID restaurant_id = 4 [(validate.rules).message.required = true];
  
  // Категории в меню
  repeated Category categories = 5 [(validate.rules).repeated.max_items = 100];
  
  // Активность меню
  bool is_active = 6;
  
  // Время действия меню (например, завтрак, обед, ужин)
  TimeSlot time_slot = 7;
  
  // Дни недели, когда меню активно
  repeated com.gastroflow.common.WeekDay active_days = 8 [(validate.rules).repeated.max_items = 7];
  
  // Локализация меню
  com.gastroflow.common.Language language = 9 [(validate.rules).enum = {
    not_in: [0]
  }];
  
  // Информация об аудите
  com.gastroflow.common.AuditInfo audit_info = 10 [(validate.rules).message.required = true];
}

// Category - категория блюд в меню
message Category {
  // Уникальный идентификатор категории
  com.gastroflow.common.UUID id = 1 [(validate.rules).message.required = true];
  
  // Название категории
  string name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 100
  }];
  
  // Описание категории
  string description = 3 [(validate.rules).string.max_len = 500];
  
  // Позиции в категории
  repeated MenuItem items = 4 [(validate.rules).repeated.max_items = 200];
  
  // Порядок сортировки категории
  int32 sort_order = 5 [(validate.rules).int32.gte = 0];
  
  // URL изображения категории
  string image_url = 6 [(validate.rules).string.max_len = 500];
  
  // Активность категории
  bool is_active = 7;
  
  // Родительская категория (для подкатегорий)
  com.gastroflow.common.UUID parent_id = 8;
  
  // Информация об аудите
  com.gastroflow.common.AuditInfo audit_info = 9 [(validate.rules).message.required = true];
}

// MenuItem - позиция меню (блюдо)
message MenuItem {
  // Уникальный идентификатор позиции
  com.gastroflow.common.UUID id = 1 [(validate.rules).message.required = true];
  
  // Название блюда
  string name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 200
  }];
  
  // Описание блюда
  string description = 3 [(validate.rules).string.max_len = 1000];
  
  // Базовая цена
  com.gastroflow.common.Money price = 4 [(validate.rules).message.required = true];
  
  // Статус позиции
  com.gastroflow.common.MenuItemStatus status = 5 [(validate.rules).enum = {
    not_in: [0]
  }];
  
  // Доступные варианты (размеры, добавки и т.д.)
  repeated MenuItemVariant variants = 6 [(validate.rules).repeated.max_items = 100];
  
  // Время приготовления в минутах
  int32 cooking_time = 7 [(validate.rules).int32 = {
    gte: 1,
    lte: 120
  }];
  
  // Пищевая ценность
  NutritionInfo nutrition_info = 8;
  
  // Информация об аллергенах
  repeated Allergen allergens = 9 [(validate.rules).repeated.max_items = 50];
  
  // URL изображения блюда
  string image_url = 10 [(validate.rules).string.max_len = 500];
  
  // Дополнительные изображения
  repeated string additional_images = 11 [(validate.rules).repeated = {
    max_items: 10,
    items: {string: {max_len: 500}}
  }];
  
  // Порядок сортировки в категории
  int32 sort_order = 12 [(validate.rules).int32.gte = 0];
  
  // Вес/объем порции
  string portion_size = 13 [(validate.rules).string.max_len = 50];
  
  // Особенности блюда (острое, вегетарианское и т.д.)
  repeated DietaryProperty dietary_properties = 14 [(validate.rules).repeated.max_items = 20];
  
  // Ингредиенты
  repeated string ingredients = 15 [(validate.rules).repeated = {
    max_items: 100,
    items: {string: {max_len: 100}}
  }];
  
  // Идентификатор категории
  com.gastroflow.common.UUID category_id = 16 [(validate.rules).message.required = true];
  
  // Популярность блюда (для рекомендаций)
  int32 popularity_score = 17 [(validate.rules).int32.gte = 0];
  
  // Информация об аудите
  com.gastroflow.common.AuditInfo audit_info = 18 [(validate.rules).message.required = true];
}

// MenuItemVariant - вариант позиции меню
message MenuItemVariant {
  // Уникальный идентификатор варианта
  com.gastroflow.common.UUID id = 1 [(validate.rules).message.required = true];
  
  // Название варианта
  string name = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 100
  }];
  
  // Дополнительная цена (может быть отрицательной)
  com.gastroflow.common.Money price_modifier = 3 [(validate.rules).message.required = true];
  
  // Тип варианта
  VariantType type = 4 [(validate.rules).enum = {
    not_in: [0]
  }];
  
  // Группа вариантов (для группировки связанных вариантов)
  string group_name = 5 [(validate.rules).string.max_len = 50];
  
  // Обязательность выбора варианта
  bool is_required = 6;
  
  // Максимальное количество выборов в группе
  int32 max_selections = 7 [(validate.rules).int32 = {
    gte: 1,
    lte: 20
  }];
  
  // Порядок сортировки варианта
  int32 sort_order = 8 [(validate.rules).int32.gte = 0];
  
  // Доступность варианта
  bool is_available = 9;
}

// NutritionInfo - информация о пищевой ценности
message NutritionInfo {
  // Калорийность на 100г
  double calories_per_100g = 1 [(validate.rules).double.gte = 0];
  
  // Белки в граммах на 100г
  double protein_per_100g = 2 [(validate.rules).double.gte = 0];
  
  // Жиры в граммах на 100г
  double fats_per_100g = 3 [(validate.rules).double.gte = 0];
  
  // Углеводы в граммах на 100г
  double carbs_per_100g = 4 [(validate.rules).double.gte = 0];
  
  // Общий вес порции в граммах
  double portion_weight = 5 [(validate.rules).double.gte = 0];
}

// TimeSlot - временной слот для меню
message TimeSlot {
  // Время начала действия меню
  string start_time = 1 [(validate.rules).string = {
    pattern: "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
  }];
  
  // Время окончания действия меню
  string end_time = 2 [(validate.rules).string = {
    pattern: "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
  }];
  
  // Название временного слота
  string name = 3 [(validate.rules).string.max_len = 50];
}

// Енумы для домена Menu

// VariantType - тип варианта позиции меню
enum VariantType {
  VARIANT_TYPE_UNSPECIFIED = 0;
  VARIANT_TYPE_SIZE = 1;          // Размер (маленький, большой)
  VARIANT_TYPE_EXTRA = 2;         // Добавка (сыр, бекон)
  VARIANT_TYPE_EXCLUDE = 3;       // Исключение (без лука, без соуса)
  VARIANT_TYPE_COOKING = 4;       // Способ приготовления (слабо прожаренное)
  VARIANT_TYPE_SIDE = 5;          // Гарнир
  VARIANT_TYPE_SAUCE = 6;         // Соус
  VARIANT_TYPE_DRINK = 7;         // Напиток
}

// Allergen - аллергены
enum Allergen {
  ALLERGEN_UNSPECIFIED = 0;
  ALLERGEN_GLUTEN = 1;            // Глютен
  ALLERGEN_DAIRY = 2;             // Молочные продукты
  ALLERGEN_EGGS = 3;              // Яйца
  ALLERGEN_NUTS = 4;              // Орехи
  ALLERGEN_PEANUTS = 5;           // Арахис
  ALLERGEN_SHELLFISH = 6;         // Моллюски
  ALLERGEN_FISH = 7;              // Рыба
  ALLERGEN_SOY = 8;               // Соя
  ALLERGEN_SESAME = 9;            // Кунжут
}

// DietaryProperty - особенности питания
enum DietaryProperty {
  DIETARY_PROPERTY_UNSPECIFIED = 0;
  DIETARY_PROPERTY_VEGETARIAN = 1;    // Вегетарианское
  DIETARY_PROPERTY_VEGAN = 2;         // Веганское
  DIETARY_PROPERTY_HALAL = 3;         // Халяль
  DIETARY_PROPERTY_KOSHER = 4;        // Кошер
  DIETARY_PROPERTY_SPICY = 5;         // Острое
  DIETARY_PROPERTY_HOT = 6;           // Горячее
  DIETARY_PROPERTY_COLD = 7;          // Холодное
  DIETARY_PROPERTY_GLUTEN_FREE = 8;   // Без глютена
  DIETARY_PROPERTY_DAIRY_FREE = 9;    // Без молочных продуктов
  DIETARY_PROPERTY_LOW_FAT = 10;      // Низкожирное
  DIETARY_PROPERTY_LOW_CALORIE = 11;  // Низкокалорийное
}