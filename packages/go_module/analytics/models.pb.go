// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: analytics/models.proto

package analytics

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/gastroflow/proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PeriodType - тип периода для аналитики
type PeriodType int32

const (
	PeriodType_PERIOD_TYPE_UNSPECIFIED PeriodType = 0
	PeriodType_PERIOD_TYPE_DAY         PeriodType = 1 // День
	PeriodType_PERIOD_TYPE_WEEK        PeriodType = 2 // Неделя
	PeriodType_PERIOD_TYPE_MONTH       PeriodType = 3 // Месяц
	PeriodType_PERIOD_TYPE_QUARTER     PeriodType = 4 // Квартал
	PeriodType_PERIOD_TYPE_YEAR        PeriodType = 5 // Год
	PeriodType_PERIOD_TYPE_CUSTOM      PeriodType = 6 // Произвольный период
)

// Enum value maps for PeriodType.
var (
	PeriodType_name = map[int32]string{
		0: "PERIOD_TYPE_UNSPECIFIED",
		1: "PERIOD_TYPE_DAY",
		2: "PERIOD_TYPE_WEEK",
		3: "PERIOD_TYPE_MONTH",
		4: "PERIOD_TYPE_QUARTER",
		5: "PERIOD_TYPE_YEAR",
		6: "PERIOD_TYPE_CUSTOM",
	}
	PeriodType_value = map[string]int32{
		"PERIOD_TYPE_UNSPECIFIED": 0,
		"PERIOD_TYPE_DAY":         1,
		"PERIOD_TYPE_WEEK":        2,
		"PERIOD_TYPE_MONTH":       3,
		"PERIOD_TYPE_QUARTER":     4,
		"PERIOD_TYPE_YEAR":        5,
		"PERIOD_TYPE_CUSTOM":      6,
	}
)

func (x PeriodType) Enum() *PeriodType {
	p := new(PeriodType)
	*p = x
	return p
}

func (x PeriodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeriodType) Descriptor() protoreflect.EnumDescriptor {
	return file_analytics_models_proto_enumTypes[0].Descriptor()
}

func (PeriodType) Type() protoreflect.EnumType {
	return &file_analytics_models_proto_enumTypes[0]
}

func (x PeriodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeriodType.Descriptor instead.
func (PeriodType) EnumDescriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{0}
}

// AnalyticsEvent - событие для аналитики
type AnalyticsEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор события
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Тип события
	EventType common.AnalyticsEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=com.gastroflow.common.AnalyticsEventType" json:"event_type,omitempty"`
	// Время события
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,4,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Идентификатор пользователя (если применимо)
	UserId *common.UUID `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Идентификатор заказа (если применимо)
	OrderId *common.UUID `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Идентификатор позиции меню (если применимо)
	MenuItemId *common.UUID `protobuf:"bytes,7,opt,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"`
	// Дополнительные свойства события
	Properties map[string]string `protobuf:"bytes,8,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Сессия пользователя
	SessionId string `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Информация об устройстве
	DeviceType string `protobuf:"bytes,10,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	// IP адрес
	IpAddress string `protobuf:"bytes,11,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// User Agent
	UserAgent     string `protobuf:"bytes,12,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyticsEvent) Reset() {
	*x = AnalyticsEvent{}
	mi := &file_analytics_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyticsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsEvent) ProtoMessage() {}

func (x *AnalyticsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsEvent.ProtoReflect.Descriptor instead.
func (*AnalyticsEvent) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyticsEvent) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AnalyticsEvent) GetEventType() common.AnalyticsEventType {
	if x != nil {
		return x.EventType
	}
	return common.AnalyticsEventType(0)
}

func (x *AnalyticsEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AnalyticsEvent) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *AnalyticsEvent) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *AnalyticsEvent) GetOrderId() *common.UUID {
	if x != nil {
		return x.OrderId
	}
	return nil
}

func (x *AnalyticsEvent) GetMenuItemId() *common.UUID {
	if x != nil {
		return x.MenuItemId
	}
	return nil
}

func (x *AnalyticsEvent) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *AnalyticsEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AnalyticsEvent) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *AnalyticsEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AnalyticsEvent) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

// OrderAnalytics - аналитика по заказам
type OrderAnalytics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Период анализа
	Period *AnalyticsPeriod `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Общая статистика
	OverallStats *OrderStats `protobuf:"bytes,3,opt,name=overall_stats,json=overallStats,proto3" json:"overall_stats,omitempty"`
	// Статистика по дням
	DailyStats []*DailyOrderStats `protobuf:"bytes,4,rep,name=daily_stats,json=dailyStats,proto3" json:"daily_stats,omitempty"`
	// Статистика по часам
	HourlyStats []*HourlyOrderStats `protobuf:"bytes,5,rep,name=hourly_stats,json=hourlyStats,proto3" json:"hourly_stats,omitempty"`
	// Популярные позиции меню
	PopularItems []*PopularMenuItem `protobuf:"bytes,6,rep,name=popular_items,json=popularItems,proto3" json:"popular_items,omitempty"`
	// Статистика по способам получения
	PackingModeStats []*PackingModeStats `protobuf:"bytes,7,rep,name=packing_mode_stats,json=packingModeStats,proto3" json:"packing_mode_stats,omitempty"`
	// Статистика по способам оплаты
	PaymentMethodStats []*PaymentMethodStats `protobuf:"bytes,8,rep,name=payment_method_stats,json=paymentMethodStats,proto3" json:"payment_method_stats,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OrderAnalytics) Reset() {
	*x = OrderAnalytics{}
	mi := &file_analytics_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAnalytics) ProtoMessage() {}

func (x *OrderAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAnalytics.ProtoReflect.Descriptor instead.
func (*OrderAnalytics) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{1}
}

func (x *OrderAnalytics) GetPeriod() *AnalyticsPeriod {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *OrderAnalytics) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *OrderAnalytics) GetOverallStats() *OrderStats {
	if x != nil {
		return x.OverallStats
	}
	return nil
}

func (x *OrderAnalytics) GetDailyStats() []*DailyOrderStats {
	if x != nil {
		return x.DailyStats
	}
	return nil
}

func (x *OrderAnalytics) GetHourlyStats() []*HourlyOrderStats {
	if x != nil {
		return x.HourlyStats
	}
	return nil
}

func (x *OrderAnalytics) GetPopularItems() []*PopularMenuItem {
	if x != nil {
		return x.PopularItems
	}
	return nil
}

func (x *OrderAnalytics) GetPackingModeStats() []*PackingModeStats {
	if x != nil {
		return x.PackingModeStats
	}
	return nil
}

func (x *OrderAnalytics) GetPaymentMethodStats() []*PaymentMethodStats {
	if x != nil {
		return x.PaymentMethodStats
	}
	return nil
}

// AnalyticsPeriod - период для аналитики
type AnalyticsPeriod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Начало периода
	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// Конец периода
	EndDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// Тип периода
	Type          PeriodType `protobuf:"varint,3,opt,name=type,proto3,enum=com.gastroflow.analytics.PeriodType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyticsPeriod) Reset() {
	*x = AnalyticsPeriod{}
	mi := &file_analytics_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyticsPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsPeriod) ProtoMessage() {}

func (x *AnalyticsPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsPeriod.ProtoReflect.Descriptor instead.
func (*AnalyticsPeriod) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{2}
}

func (x *AnalyticsPeriod) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *AnalyticsPeriod) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *AnalyticsPeriod) GetType() PeriodType {
	if x != nil {
		return x.Type
	}
	return PeriodType_PERIOD_TYPE_UNSPECIFIED
}

// OrderStats - общая статистика по заказам
type OrderStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Общее количество заказов
	TotalOrders int64 `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	// Общая выручка
	TotalRevenue *common.Money `protobuf:"bytes,2,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
	// Средний чек
	AverageOrderValue *common.Money `protobuf:"bytes,3,opt,name=average_order_value,json=averageOrderValue,proto3" json:"average_order_value,omitempty"`
	// Завершенные заказы
	CompletedOrders int64 `protobuf:"varint,4,opt,name=completed_orders,json=completedOrders,proto3" json:"completed_orders,omitempty"`
	// Отмененные заказы
	CancelledOrders int64 `protobuf:"varint,5,opt,name=cancelled_orders,json=cancelledOrders,proto3" json:"cancelled_orders,omitempty"`
	// Процент отмен
	CancellationRate float64 `protobuf:"fixed64,6,opt,name=cancellation_rate,json=cancellationRate,proto3" json:"cancellation_rate,omitempty"`
	// Среднее время приготовления (минуты)
	AveragePreparationTime float64 `protobuf:"fixed64,7,opt,name=average_preparation_time,json=averagePreparationTime,proto3" json:"average_preparation_time,omitempty"`
	// Общее количество позиций
	TotalItemsOrdered int64 `protobuf:"varint,8,opt,name=total_items_ordered,json=totalItemsOrdered,proto3" json:"total_items_ordered,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *OrderStats) Reset() {
	*x = OrderStats{}
	mi := &file_analytics_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderStats) ProtoMessage() {}

func (x *OrderStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderStats.ProtoReflect.Descriptor instead.
func (*OrderStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{3}
}

func (x *OrderStats) GetTotalOrders() int64 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *OrderStats) GetTotalRevenue() *common.Money {
	if x != nil {
		return x.TotalRevenue
	}
	return nil
}

func (x *OrderStats) GetAverageOrderValue() *common.Money {
	if x != nil {
		return x.AverageOrderValue
	}
	return nil
}

func (x *OrderStats) GetCompletedOrders() int64 {
	if x != nil {
		return x.CompletedOrders
	}
	return 0
}

func (x *OrderStats) GetCancelledOrders() int64 {
	if x != nil {
		return x.CancelledOrders
	}
	return 0
}

func (x *OrderStats) GetCancellationRate() float64 {
	if x != nil {
		return x.CancellationRate
	}
	return 0
}

func (x *OrderStats) GetAveragePreparationTime() float64 {
	if x != nil {
		return x.AveragePreparationTime
	}
	return 0
}

func (x *OrderStats) GetTotalItemsOrdered() int64 {
	if x != nil {
		return x.TotalItemsOrdered
	}
	return 0
}

// DailyOrderStats - статистика по дням
type DailyOrderStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Дата
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// Статистика за день
	Stats *OrderStats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	// День недели
	DayOfWeek     common.WeekDay `protobuf:"varint,3,opt,name=day_of_week,json=dayOfWeek,proto3,enum=com.gastroflow.common.WeekDay" json:"day_of_week,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailyOrderStats) Reset() {
	*x = DailyOrderStats{}
	mi := &file_analytics_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyOrderStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyOrderStats) ProtoMessage() {}

func (x *DailyOrderStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyOrderStats.ProtoReflect.Descriptor instead.
func (*DailyOrderStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{4}
}

func (x *DailyOrderStats) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyOrderStats) GetStats() *OrderStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *DailyOrderStats) GetDayOfWeek() common.WeekDay {
	if x != nil {
		return x.DayOfWeek
	}
	return common.WeekDay(0)
}

// HourlyOrderStats - статистика по часам
type HourlyOrderStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Час (0-23)
	Hour int32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	// Статистика за час
	Stats         *OrderStats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HourlyOrderStats) Reset() {
	*x = HourlyOrderStats{}
	mi := &file_analytics_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HourlyOrderStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourlyOrderStats) ProtoMessage() {}

func (x *HourlyOrderStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourlyOrderStats.ProtoReflect.Descriptor instead.
func (*HourlyOrderStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{5}
}

func (x *HourlyOrderStats) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *HourlyOrderStats) GetStats() *OrderStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// PopularMenuItem - популярная позиция меню
type PopularMenuItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор позиции меню
	MenuItemId *common.UUID `protobuf:"bytes,1,opt,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"`
	// Название позиции
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Количество заказов
	OrderCount int64 `protobuf:"varint,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	// Общая выручка от позиции
	TotalRevenue *common.Money `protobuf:"bytes,4,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
	// Процент от общих заказов
	PercentageOfOrders float64 `protobuf:"fixed64,5,opt,name=percentage_of_orders,json=percentageOfOrders,proto3" json:"percentage_of_orders,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PopularMenuItem) Reset() {
	*x = PopularMenuItem{}
	mi := &file_analytics_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopularMenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopularMenuItem) ProtoMessage() {}

func (x *PopularMenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopularMenuItem.ProtoReflect.Descriptor instead.
func (*PopularMenuItem) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{6}
}

func (x *PopularMenuItem) GetMenuItemId() *common.UUID {
	if x != nil {
		return x.MenuItemId
	}
	return nil
}

func (x *PopularMenuItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PopularMenuItem) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *PopularMenuItem) GetTotalRevenue() *common.Money {
	if x != nil {
		return x.TotalRevenue
	}
	return nil
}

func (x *PopularMenuItem) GetPercentageOfOrders() float64 {
	if x != nil {
		return x.PercentageOfOrders
	}
	return 0
}

// PackingModeStats - статистика по способам получения
type PackingModeStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Способ получения
	PackingMode common.PackingMode `protobuf:"varint,1,opt,name=packing_mode,json=packingMode,proto3,enum=com.gastroflow.common.PackingMode" json:"packing_mode,omitempty"`
	// Количество заказов
	OrderCount int64 `protobuf:"varint,2,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	// Выручка
	Revenue *common.Money `protobuf:"bytes,3,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Процент от общих заказов
	Percentage    float64 `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackingModeStats) Reset() {
	*x = PackingModeStats{}
	mi := &file_analytics_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackingModeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackingModeStats) ProtoMessage() {}

func (x *PackingModeStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackingModeStats.ProtoReflect.Descriptor instead.
func (*PackingModeStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{7}
}

func (x *PackingModeStats) GetPackingMode() common.PackingMode {
	if x != nil {
		return x.PackingMode
	}
	return common.PackingMode(0)
}

func (x *PackingModeStats) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *PackingModeStats) GetRevenue() *common.Money {
	if x != nil {
		return x.Revenue
	}
	return nil
}

func (x *PackingModeStats) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

// PaymentMethodStats - статистика по способам оплаты
type PaymentMethodStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Способ оплаты
	PaymentMethod common.PaymentMethod `protobuf:"varint,1,opt,name=payment_method,json=paymentMethod,proto3,enum=com.gastroflow.common.PaymentMethod" json:"payment_method,omitempty"`
	// Количество заказов
	OrderCount int64 `protobuf:"varint,2,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	// Выручка
	Revenue *common.Money `protobuf:"bytes,3,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Процент от общих заказов
	Percentage    float64 `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentMethodStats) Reset() {
	*x = PaymentMethodStats{}
	mi := &file_analytics_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentMethodStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodStats) ProtoMessage() {}

func (x *PaymentMethodStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodStats.ProtoReflect.Descriptor instead.
func (*PaymentMethodStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentMethodStats) GetPaymentMethod() common.PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return common.PaymentMethod(0)
}

func (x *PaymentMethodStats) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *PaymentMethodStats) GetRevenue() *common.Money {
	if x != nil {
		return x.Revenue
	}
	return nil
}

func (x *PaymentMethodStats) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

// CustomerAnalytics - аналитика по клиентам
type CustomerAnalytics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Период анализа
	Period *AnalyticsPeriod `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Общая статистика по клиентам
	OverallStats *CustomerStats `protobuf:"bytes,3,opt,name=overall_stats,json=overallStats,proto3" json:"overall_stats,omitempty"`
	// Новые клиенты по дням
	DailyStats []*DailyCustomerStats `protobuf:"bytes,4,rep,name=daily_stats,json=dailyStats,proto3" json:"daily_stats,omitempty"`
	// Топ клиенты
	TopCustomers  []*TopCustomer `protobuf:"bytes,5,rep,name=top_customers,json=topCustomers,proto3" json:"top_customers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomerAnalytics) Reset() {
	*x = CustomerAnalytics{}
	mi := &file_analytics_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAnalytics) ProtoMessage() {}

func (x *CustomerAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAnalytics.ProtoReflect.Descriptor instead.
func (*CustomerAnalytics) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{9}
}

func (x *CustomerAnalytics) GetPeriod() *AnalyticsPeriod {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *CustomerAnalytics) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *CustomerAnalytics) GetOverallStats() *CustomerStats {
	if x != nil {
		return x.OverallStats
	}
	return nil
}

func (x *CustomerAnalytics) GetDailyStats() []*DailyCustomerStats {
	if x != nil {
		return x.DailyStats
	}
	return nil
}

func (x *CustomerAnalytics) GetTopCustomers() []*TopCustomer {
	if x != nil {
		return x.TopCustomers
	}
	return nil
}

// CustomerStats - статистика по клиентам
type CustomerStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Общее количество клиентов
	TotalCustomers int64 `protobuf:"varint,1,opt,name=total_customers,json=totalCustomers,proto3" json:"total_customers,omitempty"`
	// Новые клиенты за период
	NewCustomers int64 `protobuf:"varint,2,opt,name=new_customers,json=newCustomers,proto3" json:"new_customers,omitempty"`
	// Возвратившиеся клиенты
	ReturningCustomers int64 `protobuf:"varint,3,opt,name=returning_customers,json=returningCustomers,proto3" json:"returning_customers,omitempty"`
	// Процент возврата
	RetentionRate float64 `protobuf:"fixed64,4,opt,name=retention_rate,json=retentionRate,proto3" json:"retention_rate,omitempty"`
	// Средняя сумма заказа на клиента
	AverageCustomerValue *common.Money `protobuf:"bytes,5,opt,name=average_customer_value,json=averageCustomerValue,proto3" json:"average_customer_value,omitempty"`
	// Средняя частота заказов
	AverageOrderFrequency float64 `protobuf:"fixed64,6,opt,name=average_order_frequency,json=averageOrderFrequency,proto3" json:"average_order_frequency,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CustomerStats) Reset() {
	*x = CustomerStats{}
	mi := &file_analytics_models_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerStats) ProtoMessage() {}

func (x *CustomerStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerStats.ProtoReflect.Descriptor instead.
func (*CustomerStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{10}
}

func (x *CustomerStats) GetTotalCustomers() int64 {
	if x != nil {
		return x.TotalCustomers
	}
	return 0
}

func (x *CustomerStats) GetNewCustomers() int64 {
	if x != nil {
		return x.NewCustomers
	}
	return 0
}

func (x *CustomerStats) GetReturningCustomers() int64 {
	if x != nil {
		return x.ReturningCustomers
	}
	return 0
}

func (x *CustomerStats) GetRetentionRate() float64 {
	if x != nil {
		return x.RetentionRate
	}
	return 0
}

func (x *CustomerStats) GetAverageCustomerValue() *common.Money {
	if x != nil {
		return x.AverageCustomerValue
	}
	return nil
}

func (x *CustomerStats) GetAverageOrderFrequency() float64 {
	if x != nil {
		return x.AverageOrderFrequency
	}
	return 0
}

// DailyCustomerStats - статистика по клиентам по дням
type DailyCustomerStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Дата
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// Новые клиенты за день
	NewCustomers int64 `protobuf:"varint,2,opt,name=new_customers,json=newCustomers,proto3" json:"new_customers,omitempty"`
	// Активные клиенты за день
	ActiveCustomers int64 `protobuf:"varint,3,opt,name=active_customers,json=activeCustomers,proto3" json:"active_customers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DailyCustomerStats) Reset() {
	*x = DailyCustomerStats{}
	mi := &file_analytics_models_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyCustomerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyCustomerStats) ProtoMessage() {}

func (x *DailyCustomerStats) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyCustomerStats.ProtoReflect.Descriptor instead.
func (*DailyCustomerStats) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{11}
}

func (x *DailyCustomerStats) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyCustomerStats) GetNewCustomers() int64 {
	if x != nil {
		return x.NewCustomers
	}
	return 0
}

func (x *DailyCustomerStats) GetActiveCustomers() int64 {
	if x != nil {
		return x.ActiveCustomers
	}
	return 0
}

// TopCustomer - топ клиент
type TopCustomer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор клиента
	CustomerId *common.UUID `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Имя клиента
	CustomerName string `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	// Количество заказов
	OrderCount int64 `protobuf:"varint,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	// Общая потраченная сумма
	TotalSpent *common.Money `protobuf:"bytes,4,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
	// Дата последнего заказа
	LastOrderDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_order_date,json=lastOrderDate,proto3" json:"last_order_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopCustomer) Reset() {
	*x = TopCustomer{}
	mi := &file_analytics_models_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCustomer) ProtoMessage() {}

func (x *TopCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCustomer.ProtoReflect.Descriptor instead.
func (*TopCustomer) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{12}
}

func (x *TopCustomer) GetCustomerId() *common.UUID {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

func (x *TopCustomer) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *TopCustomer) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *TopCustomer) GetTotalSpent() *common.Money {
	if x != nil {
		return x.TotalSpent
	}
	return nil
}

func (x *TopCustomer) GetLastOrderDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOrderDate
	}
	return nil
}

// RevenueAnalytics - аналитика по выручке
type RevenueAnalytics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Период анализа
	Period *AnalyticsPeriod `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Выручка по дням
	DailyRevenue []*DailyRevenue `protobuf:"bytes,3,rep,name=daily_revenue,json=dailyRevenue,proto3" json:"daily_revenue,omitempty"`
	// Выручка по часам
	HourlyRevenue []*HourlyRevenue `protobuf:"bytes,4,rep,name=hourly_revenue,json=hourlyRevenue,proto3" json:"hourly_revenue,omitempty"`
	// Прогноз выручки
	Forecast      []*RevenueForecast `protobuf:"bytes,5,rep,name=forecast,proto3" json:"forecast,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevenueAnalytics) Reset() {
	*x = RevenueAnalytics{}
	mi := &file_analytics_models_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevenueAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueAnalytics) ProtoMessage() {}

func (x *RevenueAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueAnalytics.ProtoReflect.Descriptor instead.
func (*RevenueAnalytics) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{13}
}

func (x *RevenueAnalytics) GetPeriod() *AnalyticsPeriod {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *RevenueAnalytics) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *RevenueAnalytics) GetDailyRevenue() []*DailyRevenue {
	if x != nil {
		return x.DailyRevenue
	}
	return nil
}

func (x *RevenueAnalytics) GetHourlyRevenue() []*HourlyRevenue {
	if x != nil {
		return x.HourlyRevenue
	}
	return nil
}

func (x *RevenueAnalytics) GetForecast() []*RevenueForecast {
	if x != nil {
		return x.Forecast
	}
	return nil
}

// DailyRevenue - выручка по дням
type DailyRevenue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Дата
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// Выручка за день
	Revenue *common.Money `protobuf:"bytes,2,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Количество заказов
	OrderCount int64 `protobuf:"varint,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	// Рост по сравнению с предыдущим днем
	GrowthPercentage float64 `protobuf:"fixed64,4,opt,name=growth_percentage,json=growthPercentage,proto3" json:"growth_percentage,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DailyRevenue) Reset() {
	*x = DailyRevenue{}
	mi := &file_analytics_models_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyRevenue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyRevenue) ProtoMessage() {}

func (x *DailyRevenue) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyRevenue.ProtoReflect.Descriptor instead.
func (*DailyRevenue) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{14}
}

func (x *DailyRevenue) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyRevenue) GetRevenue() *common.Money {
	if x != nil {
		return x.Revenue
	}
	return nil
}

func (x *DailyRevenue) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *DailyRevenue) GetGrowthPercentage() float64 {
	if x != nil {
		return x.GrowthPercentage
	}
	return 0
}

// HourlyRevenue - выручка по часам
type HourlyRevenue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Час (0-23)
	Hour int32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	// Выручка за час
	Revenue *common.Money `protobuf:"bytes,2,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// Количество заказов
	OrderCount    int64 `protobuf:"varint,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HourlyRevenue) Reset() {
	*x = HourlyRevenue{}
	mi := &file_analytics_models_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HourlyRevenue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourlyRevenue) ProtoMessage() {}

func (x *HourlyRevenue) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourlyRevenue.ProtoReflect.Descriptor instead.
func (*HourlyRevenue) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{15}
}

func (x *HourlyRevenue) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *HourlyRevenue) GetRevenue() *common.Money {
	if x != nil {
		return x.Revenue
	}
	return nil
}

func (x *HourlyRevenue) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

// RevenueForecast - прогноз выручки
type RevenueForecast struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Дата прогноза
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// Прогнозируемая выручка
	PredictedRevenue *common.Money `protobuf:"bytes,2,opt,name=predicted_revenue,json=predictedRevenue,proto3" json:"predicted_revenue,omitempty"`
	// Доверительный интервал (%)
	ConfidenceLevel float64 `protobuf:"fixed64,3,opt,name=confidence_level,json=confidenceLevel,proto3" json:"confidence_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RevenueForecast) Reset() {
	*x = RevenueForecast{}
	mi := &file_analytics_models_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevenueForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueForecast) ProtoMessage() {}

func (x *RevenueForecast) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_models_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueForecast.ProtoReflect.Descriptor instead.
func (*RevenueForecast) Descriptor() ([]byte, []int) {
	return file_analytics_models_proto_rawDescGZIP(), []int{16}
}

func (x *RevenueForecast) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *RevenueForecast) GetPredictedRevenue() *common.Money {
	if x != nil {
		return x.PredictedRevenue
	}
	return nil
}

func (x *RevenueForecast) GetConfidenceLevel() float64 {
	if x != nil {
		return x.ConfidenceLevel
	}
	return 0
}

var File_analytics_models_proto protoreflect.FileDescriptor

const file_analytics_models_proto_rawDesc = "" +
	"\n" +
	"\x16analytics/models.proto\x12\x18com.gastroflow.analytics\x1a\x1bbuf/validate/validate.proto\x1a\x12common/enums.proto\x1a\x12common/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8f\x06\n" +
	"\x0eAnalyticsEvent\x123\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\x02id\x12R\n" +
	"\n" +
	"event_type\x18\x02 \x01(\x0e2).com.gastroflow.common.AnalyticsEventTypeB\b\xbaH\x05\x82\x01\x02 \x00R\teventType\x12@\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\ttimestamp\x12H\n" +
	"\rrestaurant_id\x18\x04 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\frestaurantId\x124\n" +
	"\auser_id\x18\x05 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x06userId\x126\n" +
	"\border_id\x18\x06 \x01(\v2\x1b.com.gastroflow.common.UUIDR\aorderId\x12=\n" +
	"\fmenu_item_id\x18\a \x01(\v2\x1b.com.gastroflow.common.UUIDR\n" +
	"menuItemId\x12X\n" +
	"\n" +
	"properties\x18\b \x03(\v28.com.gastroflow.analytics.AnalyticsEvent.PropertiesEntryR\n" +
	"properties\x12'\n" +
	"\n" +
	"session_id\x18\t \x01(\tB\b\xbaH\x05r\x03\x18\x80\x01R\tsessionId\x12(\n" +
	"\vdevice_type\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x182R\n" +
	"deviceType\x12&\n" +
	"\n" +
	"ip_address\x18\v \x01(\tB\a\xbaH\x04r\x02\x18-R\tipAddress\x12'\n" +
	"\n" +
	"user_agent\x18\f \x01(\tB\b\xbaH\x05r\x03\x18\xf4\x03R\tuserAgent\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9d\x05\n" +
	"\x0eOrderAnalytics\x12I\n" +
	"\x06period\x18\x01 \x01(\v2).com.gastroflow.analytics.AnalyticsPeriodB\x06\xbaH\x03\xc8\x01\x01R\x06period\x12H\n" +
	"\rrestaurant_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\frestaurantId\x12Q\n" +
	"\roverall_stats\x18\x03 \x01(\v2$.com.gastroflow.analytics.OrderStatsB\x06\xbaH\x03\xc8\x01\x01R\foverallStats\x12J\n" +
	"\vdaily_stats\x18\x04 \x03(\v2).com.gastroflow.analytics.DailyOrderStatsR\n" +
	"dailyStats\x12M\n" +
	"\fhourly_stats\x18\x05 \x03(\v2*.com.gastroflow.analytics.HourlyOrderStatsR\vhourlyStats\x12N\n" +
	"\rpopular_items\x18\x06 \x03(\v2).com.gastroflow.analytics.PopularMenuItemR\fpopularItems\x12X\n" +
	"\x12packing_mode_stats\x18\a \x03(\v2*.com.gastroflow.analytics.PackingModeStatsR\x10packingModeStats\x12^\n" +
	"\x14payment_method_stats\x18\b \x03(\v2,.com.gastroflow.analytics.PaymentMethodStatsR\x12paymentMethodStats\"\xd7\x01\n" +
	"\x0fAnalyticsPeriod\x12A\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\tstartDate\x12=\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\aendDate\x12B\n" +
	"\x04type\x18\x03 \x01(\x0e2$.com.gastroflow.analytics.PeriodTypeB\b\xbaH\x05\x82\x01\x02 \x00R\x04type\"\xbd\x03\n" +
	"\n" +
	"OrderStats\x12!\n" +
	"\ftotal_orders\x18\x01 \x01(\x03R\vtotalOrders\x12I\n" +
	"\rtotal_revenue\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\ftotalRevenue\x12T\n" +
	"\x13average_order_value\x18\x03 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\x11averageOrderValue\x12)\n" +
	"\x10completed_orders\x18\x04 \x01(\x03R\x0fcompletedOrders\x12)\n" +
	"\x10cancelled_orders\x18\x05 \x01(\x03R\x0fcancelledOrders\x12+\n" +
	"\x11cancellation_rate\x18\x06 \x01(\x01R\x10cancellationRate\x128\n" +
	"\x18average_preparation_time\x18\a \x01(\x01R\x16averagePreparationTime\x12.\n" +
	"\x13total_items_ordered\x18\b \x01(\x03R\x11totalItemsOrdered\"\xc5\x01\n" +
	"\x0fDailyOrderStats\x12.\n" +
	"\x04date\x18\x01 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$R\x04date\x12B\n" +
	"\x05stats\x18\x02 \x01(\v2$.com.gastroflow.analytics.OrderStatsB\x06\xbaH\x03\xc8\x01\x01R\x05stats\x12>\n" +
	"\vday_of_week\x18\x03 \x01(\x0e2\x1e.com.gastroflow.common.WeekDayR\tdayOfWeek\"u\n" +
	"\x10HourlyOrderStats\x12\x1d\n" +
	"\x04hour\x18\x01 \x01(\x05B\t\xbaH\x06\x1a\x04\x18\x17(\x00R\x04hour\x12B\n" +
	"\x05stats\x18\x02 \x01(\v2$.com.gastroflow.analytics.OrderStatsB\x06\xbaH\x03\xc8\x01\x01R\x05stats\"\x94\x02\n" +
	"\x0fPopularMenuItem\x12E\n" +
	"\fmenu_item_id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"menuItemId\x12\x1c\n" +
	"\x04name\x18\x02 \x01(\tB\b\xbaH\x05r\x03\x18\xc8\x01R\x04name\x12\x1f\n" +
	"\vorder_count\x18\x03 \x01(\x03R\n" +
	"orderCount\x12I\n" +
	"\rtotal_revenue\x18\x04 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\ftotalRevenue\x120\n" +
	"\x14percentage_of_orders\x18\x05 \x01(\x01R\x12percentageOfOrders\"\xe4\x01\n" +
	"\x10PackingModeStats\x12O\n" +
	"\fpacking_mode\x18\x01 \x01(\x0e2\".com.gastroflow.common.PackingModeB\b\xbaH\x05\x82\x01\x02 \x00R\vpackingMode\x12\x1f\n" +
	"\vorder_count\x18\x02 \x01(\x03R\n" +
	"orderCount\x12>\n" +
	"\arevenue\x18\x03 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\arevenue\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x01R\n" +
	"percentage\"\xec\x01\n" +
	"\x12PaymentMethodStats\x12U\n" +
	"\x0epayment_method\x18\x01 \x01(\x0e2$.com.gastroflow.common.PaymentMethodB\b\xbaH\x05\x82\x01\x02 \x00R\rpaymentMethod\x12\x1f\n" +
	"\vorder_count\x18\x02 \x01(\x03R\n" +
	"orderCount\x12>\n" +
	"\arevenue\x18\x03 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\arevenue\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x01R\n" +
	"percentage\"\x99\x03\n" +
	"\x11CustomerAnalytics\x12I\n" +
	"\x06period\x18\x01 \x01(\v2).com.gastroflow.analytics.AnalyticsPeriodB\x06\xbaH\x03\xc8\x01\x01R\x06period\x12H\n" +
	"\rrestaurant_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\frestaurantId\x12T\n" +
	"\roverall_stats\x18\x03 \x01(\v2'.com.gastroflow.analytics.CustomerStatsB\x06\xbaH\x03\xc8\x01\x01R\foverallStats\x12M\n" +
	"\vdaily_stats\x18\x04 \x03(\v2,.com.gastroflow.analytics.DailyCustomerStatsR\n" +
	"dailyStats\x12J\n" +
	"\rtop_customers\x18\x05 \x03(\v2%.com.gastroflow.analytics.TopCustomerR\ftopCustomers\"\xc1\x02\n" +
	"\rCustomerStats\x12'\n" +
	"\x0ftotal_customers\x18\x01 \x01(\x03R\x0etotalCustomers\x12#\n" +
	"\rnew_customers\x18\x02 \x01(\x03R\fnewCustomers\x12/\n" +
	"\x13returning_customers\x18\x03 \x01(\x03R\x12returningCustomers\x12%\n" +
	"\x0eretention_rate\x18\x04 \x01(\x01R\rretentionRate\x12R\n" +
	"\x16average_customer_value\x18\x05 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x14averageCustomerValue\x126\n" +
	"\x17average_order_frequency\x18\x06 \x01(\x01R\x15averageOrderFrequency\"\x94\x01\n" +
	"\x12DailyCustomerStats\x12.\n" +
	"\x04date\x18\x01 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$R\x04date\x12#\n" +
	"\rnew_customers\x18\x02 \x01(\x03R\fnewCustomers\x12)\n" +
	"\x10active_customers\x18\x03 \x01(\x03R\x0factiveCustomers\"\xad\x02\n" +
	"\vTopCustomer\x12D\n" +
	"\vcustomer_id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"customerId\x12,\n" +
	"\rcustomer_name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x18dR\fcustomerName\x12\x1f\n" +
	"\vorder_count\x18\x03 \x01(\x03R\n" +
	"orderCount\x12E\n" +
	"\vtotal_spent\x18\x04 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"totalSpent\x12B\n" +
	"\x0flast_order_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\rlastOrderDate\"\x8b\x03\n" +
	"\x10RevenueAnalytics\x12I\n" +
	"\x06period\x18\x01 \x01(\v2).com.gastroflow.analytics.AnalyticsPeriodB\x06\xbaH\x03\xc8\x01\x01R\x06period\x12H\n" +
	"\rrestaurant_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\frestaurantId\x12K\n" +
	"\rdaily_revenue\x18\x03 \x03(\v2&.com.gastroflow.analytics.DailyRevenueR\fdailyRevenue\x12N\n" +
	"\x0ehourly_revenue\x18\x04 \x03(\v2'.com.gastroflow.analytics.HourlyRevenueR\rhourlyRevenue\x12E\n" +
	"\bforecast\x18\x05 \x03(\v2).com.gastroflow.analytics.RevenueForecastR\bforecast\"\xcc\x01\n" +
	"\fDailyRevenue\x12.\n" +
	"\x04date\x18\x01 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$R\x04date\x12>\n" +
	"\arevenue\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\arevenue\x12\x1f\n" +
	"\vorder_count\x18\x03 \x01(\x03R\n" +
	"orderCount\x12+\n" +
	"\x11growth_percentage\x18\x04 \x01(\x01R\x10growthPercentage\"\x8f\x01\n" +
	"\rHourlyRevenue\x12\x1d\n" +
	"\x04hour\x18\x01 \x01(\x05B\t\xbaH\x06\x1a\x04\x18\x17(\x00R\x04hour\x12>\n" +
	"\arevenue\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\arevenue\x12\x1f\n" +
	"\vorder_count\x18\x03 \x01(\x03R\n" +
	"orderCount\"\xbf\x01\n" +
	"\x0fRevenueForecast\x12.\n" +
	"\x04date\x18\x01 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$R\x04date\x12Q\n" +
	"\x11predicted_revenue\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyB\x06\xbaH\x03\xc8\x01\x01R\x10predictedRevenue\x12)\n" +
	"\x10confidence_level\x18\x03 \x01(\x01R\x0fconfidenceLevel*\xb2\x01\n" +
	"\n" +
	"PeriodType\x12\x1b\n" +
	"\x17PERIOD_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fPERIOD_TYPE_DAY\x10\x01\x12\x14\n" +
	"\x10PERIOD_TYPE_WEEK\x10\x02\x12\x15\n" +
	"\x11PERIOD_TYPE_MONTH\x10\x03\x12\x17\n" +
	"\x13PERIOD_TYPE_QUARTER\x10\x04\x12\x14\n" +
	"\x10PERIOD_TYPE_YEAR\x10\x05\x12\x16\n" +
	"\x12PERIOD_TYPE_CUSTOM\x10\x06B\xd7\x01\n" +
	"\x1ccom.com.gastroflow.analyticsB\vModelsProtoP\x01Z(github.com/gastroflow/proto-go/analytics\xa2\x02\x03CGA\xaa\x02\x18Com.Gastroflow.Analytics\xca\x02\x18Com\\Gastroflow\\Analytics\xe2\x02$Com\\Gastroflow\\Analytics\\GPBMetadata\xea\x02\x1aCom::Gastroflow::Analyticsb\x06proto3"

var (
	file_analytics_models_proto_rawDescOnce sync.Once
	file_analytics_models_proto_rawDescData []byte
)

func file_analytics_models_proto_rawDescGZIP() []byte {
	file_analytics_models_proto_rawDescOnce.Do(func() {
		file_analytics_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_analytics_models_proto_rawDesc), len(file_analytics_models_proto_rawDesc)))
	})
	return file_analytics_models_proto_rawDescData
}

var file_analytics_models_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_analytics_models_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_analytics_models_proto_goTypes = []any{
	(PeriodType)(0),                // 0: com.gastroflow.analytics.PeriodType
	(*AnalyticsEvent)(nil),         // 1: com.gastroflow.analytics.AnalyticsEvent
	(*OrderAnalytics)(nil),         // 2: com.gastroflow.analytics.OrderAnalytics
	(*AnalyticsPeriod)(nil),        // 3: com.gastroflow.analytics.AnalyticsPeriod
	(*OrderStats)(nil),             // 4: com.gastroflow.analytics.OrderStats
	(*DailyOrderStats)(nil),        // 5: com.gastroflow.analytics.DailyOrderStats
	(*HourlyOrderStats)(nil),       // 6: com.gastroflow.analytics.HourlyOrderStats
	(*PopularMenuItem)(nil),        // 7: com.gastroflow.analytics.PopularMenuItem
	(*PackingModeStats)(nil),       // 8: com.gastroflow.analytics.PackingModeStats
	(*PaymentMethodStats)(nil),     // 9: com.gastroflow.analytics.PaymentMethodStats
	(*CustomerAnalytics)(nil),      // 10: com.gastroflow.analytics.CustomerAnalytics
	(*CustomerStats)(nil),          // 11: com.gastroflow.analytics.CustomerStats
	(*DailyCustomerStats)(nil),     // 12: com.gastroflow.analytics.DailyCustomerStats
	(*TopCustomer)(nil),            // 13: com.gastroflow.analytics.TopCustomer
	(*RevenueAnalytics)(nil),       // 14: com.gastroflow.analytics.RevenueAnalytics
	(*DailyRevenue)(nil),           // 15: com.gastroflow.analytics.DailyRevenue
	(*HourlyRevenue)(nil),          // 16: com.gastroflow.analytics.HourlyRevenue
	(*RevenueForecast)(nil),        // 17: com.gastroflow.analytics.RevenueForecast
	nil,                            // 18: com.gastroflow.analytics.AnalyticsEvent.PropertiesEntry
	(*common.UUID)(nil),            // 19: com.gastroflow.common.UUID
	(common.AnalyticsEventType)(0), // 20: com.gastroflow.common.AnalyticsEventType
	(*timestamppb.Timestamp)(nil),  // 21: google.protobuf.Timestamp
	(*common.Money)(nil),           // 22: com.gastroflow.common.Money
	(common.WeekDay)(0),            // 23: com.gastroflow.common.WeekDay
	(common.PackingMode)(0),        // 24: com.gastroflow.common.PackingMode
	(common.PaymentMethod)(0),      // 25: com.gastroflow.common.PaymentMethod
}
var file_analytics_models_proto_depIdxs = []int32{
	19, // 0: com.gastroflow.analytics.AnalyticsEvent.id:type_name -> com.gastroflow.common.UUID
	20, // 1: com.gastroflow.analytics.AnalyticsEvent.event_type:type_name -> com.gastroflow.common.AnalyticsEventType
	21, // 2: com.gastroflow.analytics.AnalyticsEvent.timestamp:type_name -> google.protobuf.Timestamp
	19, // 3: com.gastroflow.analytics.AnalyticsEvent.restaurant_id:type_name -> com.gastroflow.common.UUID
	19, // 4: com.gastroflow.analytics.AnalyticsEvent.user_id:type_name -> com.gastroflow.common.UUID
	19, // 5: com.gastroflow.analytics.AnalyticsEvent.order_id:type_name -> com.gastroflow.common.UUID
	19, // 6: com.gastroflow.analytics.AnalyticsEvent.menu_item_id:type_name -> com.gastroflow.common.UUID
	18, // 7: com.gastroflow.analytics.AnalyticsEvent.properties:type_name -> com.gastroflow.analytics.AnalyticsEvent.PropertiesEntry
	3,  // 8: com.gastroflow.analytics.OrderAnalytics.period:type_name -> com.gastroflow.analytics.AnalyticsPeriod
	19, // 9: com.gastroflow.analytics.OrderAnalytics.restaurant_id:type_name -> com.gastroflow.common.UUID
	4,  // 10: com.gastroflow.analytics.OrderAnalytics.overall_stats:type_name -> com.gastroflow.analytics.OrderStats
	5,  // 11: com.gastroflow.analytics.OrderAnalytics.daily_stats:type_name -> com.gastroflow.analytics.DailyOrderStats
	6,  // 12: com.gastroflow.analytics.OrderAnalytics.hourly_stats:type_name -> com.gastroflow.analytics.HourlyOrderStats
	7,  // 13: com.gastroflow.analytics.OrderAnalytics.popular_items:type_name -> com.gastroflow.analytics.PopularMenuItem
	8,  // 14: com.gastroflow.analytics.OrderAnalytics.packing_mode_stats:type_name -> com.gastroflow.analytics.PackingModeStats
	9,  // 15: com.gastroflow.analytics.OrderAnalytics.payment_method_stats:type_name -> com.gastroflow.analytics.PaymentMethodStats
	21, // 16: com.gastroflow.analytics.AnalyticsPeriod.start_date:type_name -> google.protobuf.Timestamp
	21, // 17: com.gastroflow.analytics.AnalyticsPeriod.end_date:type_name -> google.protobuf.Timestamp
	0,  // 18: com.gastroflow.analytics.AnalyticsPeriod.type:type_name -> com.gastroflow.analytics.PeriodType
	22, // 19: com.gastroflow.analytics.OrderStats.total_revenue:type_name -> com.gastroflow.common.Money
	22, // 20: com.gastroflow.analytics.OrderStats.average_order_value:type_name -> com.gastroflow.common.Money
	4,  // 21: com.gastroflow.analytics.DailyOrderStats.stats:type_name -> com.gastroflow.analytics.OrderStats
	23, // 22: com.gastroflow.analytics.DailyOrderStats.day_of_week:type_name -> com.gastroflow.common.WeekDay
	4,  // 23: com.gastroflow.analytics.HourlyOrderStats.stats:type_name -> com.gastroflow.analytics.OrderStats
	19, // 24: com.gastroflow.analytics.PopularMenuItem.menu_item_id:type_name -> com.gastroflow.common.UUID
	22, // 25: com.gastroflow.analytics.PopularMenuItem.total_revenue:type_name -> com.gastroflow.common.Money
	24, // 26: com.gastroflow.analytics.PackingModeStats.packing_mode:type_name -> com.gastroflow.common.PackingMode
	22, // 27: com.gastroflow.analytics.PackingModeStats.revenue:type_name -> com.gastroflow.common.Money
	25, // 28: com.gastroflow.analytics.PaymentMethodStats.payment_method:type_name -> com.gastroflow.common.PaymentMethod
	22, // 29: com.gastroflow.analytics.PaymentMethodStats.revenue:type_name -> com.gastroflow.common.Money
	3,  // 30: com.gastroflow.analytics.CustomerAnalytics.period:type_name -> com.gastroflow.analytics.AnalyticsPeriod
	19, // 31: com.gastroflow.analytics.CustomerAnalytics.restaurant_id:type_name -> com.gastroflow.common.UUID
	11, // 32: com.gastroflow.analytics.CustomerAnalytics.overall_stats:type_name -> com.gastroflow.analytics.CustomerStats
	12, // 33: com.gastroflow.analytics.CustomerAnalytics.daily_stats:type_name -> com.gastroflow.analytics.DailyCustomerStats
	13, // 34: com.gastroflow.analytics.CustomerAnalytics.top_customers:type_name -> com.gastroflow.analytics.TopCustomer
	22, // 35: com.gastroflow.analytics.CustomerStats.average_customer_value:type_name -> com.gastroflow.common.Money
	19, // 36: com.gastroflow.analytics.TopCustomer.customer_id:type_name -> com.gastroflow.common.UUID
	22, // 37: com.gastroflow.analytics.TopCustomer.total_spent:type_name -> com.gastroflow.common.Money
	21, // 38: com.gastroflow.analytics.TopCustomer.last_order_date:type_name -> google.protobuf.Timestamp
	3,  // 39: com.gastroflow.analytics.RevenueAnalytics.period:type_name -> com.gastroflow.analytics.AnalyticsPeriod
	19, // 40: com.gastroflow.analytics.RevenueAnalytics.restaurant_id:type_name -> com.gastroflow.common.UUID
	15, // 41: com.gastroflow.analytics.RevenueAnalytics.daily_revenue:type_name -> com.gastroflow.analytics.DailyRevenue
	16, // 42: com.gastroflow.analytics.RevenueAnalytics.hourly_revenue:type_name -> com.gastroflow.analytics.HourlyRevenue
	17, // 43: com.gastroflow.analytics.RevenueAnalytics.forecast:type_name -> com.gastroflow.analytics.RevenueForecast
	22, // 44: com.gastroflow.analytics.DailyRevenue.revenue:type_name -> com.gastroflow.common.Money
	22, // 45: com.gastroflow.analytics.HourlyRevenue.revenue:type_name -> com.gastroflow.common.Money
	22, // 46: com.gastroflow.analytics.RevenueForecast.predicted_revenue:type_name -> com.gastroflow.common.Money
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_analytics_models_proto_init() }
func file_analytics_models_proto_init() {
	if File_analytics_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_analytics_models_proto_rawDesc), len(file_analytics_models_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_analytics_models_proto_goTypes,
		DependencyIndexes: file_analytics_models_proto_depIdxs,
		EnumInfos:         file_analytics_models_proto_enumTypes,
		MessageInfos:      file_analytics_models_proto_msgTypes,
	}.Build()
	File_analytics_models_proto = out.File
	file_analytics_models_proto_goTypes = nil
	file_analytics_models_proto_depIdxs = nil
}
