// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: users/models.proto

package users

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common "github.com/gastroflow/proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserStatus - статус пользователя
type UserStatus int32

const (
	UserStatus_USER_STATUS_UNSPECIFIED UserStatus = 0
	UserStatus_USER_STATUS_ACTIVE      UserStatus = 1 // Активный
	UserStatus_USER_STATUS_INACTIVE    UserStatus = 2 // Неактивный
	UserStatus_USER_STATUS_SUSPENDED   UserStatus = 3 // Заблокированный
	UserStatus_USER_STATUS_PENDING     UserStatus = 4 // Ожидает подтверждения
	UserStatus_USER_STATUS_DELETED     UserStatus = 5 // Удален
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "USER_STATUS_UNSPECIFIED",
		1: "USER_STATUS_ACTIVE",
		2: "USER_STATUS_INACTIVE",
		3: "USER_STATUS_SUSPENDED",
		4: "USER_STATUS_PENDING",
		5: "USER_STATUS_DELETED",
	}
	UserStatus_value = map[string]int32{
		"USER_STATUS_UNSPECIFIED": 0,
		"USER_STATUS_ACTIVE":      1,
		"USER_STATUS_INACTIVE":    2,
		"USER_STATUS_SUSPENDED":   3,
		"USER_STATUS_PENDING":     4,
		"USER_STATUS_DELETED":     5,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[0].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[0]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{0}
}

// AddressType - тип адреса
type AddressType int32

const (
	AddressType_ADDRESS_TYPE_UNSPECIFIED AddressType = 0
	AddressType_ADDRESS_TYPE_HOME        AddressType = 1 // Домашний
	AddressType_ADDRESS_TYPE_WORK        AddressType = 2 // Рабочий
	AddressType_ADDRESS_TYPE_OTHER       AddressType = 3 // Другой
)

// Enum value maps for AddressType.
var (
	AddressType_name = map[int32]string{
		0: "ADDRESS_TYPE_UNSPECIFIED",
		1: "ADDRESS_TYPE_HOME",
		2: "ADDRESS_TYPE_WORK",
		3: "ADDRESS_TYPE_OTHER",
	}
	AddressType_value = map[string]int32{
		"ADDRESS_TYPE_UNSPECIFIED": 0,
		"ADDRESS_TYPE_HOME":        1,
		"ADDRESS_TYPE_WORK":        2,
		"ADDRESS_TYPE_OTHER":       3,
	}
)

func (x AddressType) Enum() *AddressType {
	p := new(AddressType)
	*p = x
	return p
}

func (x AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[1].Descriptor()
}

func (AddressType) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[1]
}

func (x AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressType.Descriptor instead.
func (AddressType) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{1}
}

// Gender - пол пользователя
type Gender int32

const (
	Gender_GENDER_UNSPECIFIED       Gender = 0
	Gender_GENDER_MALE              Gender = 1 // Мужской
	Gender_GENDER_FEMALE            Gender = 2 // Женский
	Gender_GENDER_OTHER             Gender = 3 // Другой
	Gender_GENDER_PREFER_NOT_TO_SAY Gender = 4 // Предпочитаю не указывать
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "GENDER_UNSPECIFIED",
		1: "GENDER_MALE",
		2: "GENDER_FEMALE",
		3: "GENDER_OTHER",
		4: "GENDER_PREFER_NOT_TO_SAY",
	}
	Gender_value = map[string]int32{
		"GENDER_UNSPECIFIED":       0,
		"GENDER_MALE":              1,
		"GENDER_FEMALE":            2,
		"GENDER_OTHER":             3,
		"GENDER_PREFER_NOT_TO_SAY": 4,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[2].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[2]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{2}
}

// DietaryPreference - диетические предпочтения
type DietaryPreference int32

const (
	DietaryPreference_DIETARY_PREFERENCE_UNSPECIFIED DietaryPreference = 0
	DietaryPreference_DIETARY_PREFERENCE_VEGETARIAN  DietaryPreference = 1 // Вегетарианство
	DietaryPreference_DIETARY_PREFERENCE_VEGAN       DietaryPreference = 2 // Веганство
	DietaryPreference_DIETARY_PREFERENCE_HALAL       DietaryPreference = 3 // Халяль
	DietaryPreference_DIETARY_PREFERENCE_KOSHER      DietaryPreference = 4 // Кошер
	DietaryPreference_DIETARY_PREFERENCE_GLUTEN_FREE DietaryPreference = 5 // Без глютена
	DietaryPreference_DIETARY_PREFERENCE_DAIRY_FREE  DietaryPreference = 6 // Без молочных продуктов
	DietaryPreference_DIETARY_PREFERENCE_KETO        DietaryPreference = 7 // Кетогенная диета
	DietaryPreference_DIETARY_PREFERENCE_LOW_CARB    DietaryPreference = 8 // Низкоуглеводная диета
	DietaryPreference_DIETARY_PREFERENCE_NO_SPICY    DietaryPreference = 9 // Без острого
)

// Enum value maps for DietaryPreference.
var (
	DietaryPreference_name = map[int32]string{
		0: "DIETARY_PREFERENCE_UNSPECIFIED",
		1: "DIETARY_PREFERENCE_VEGETARIAN",
		2: "DIETARY_PREFERENCE_VEGAN",
		3: "DIETARY_PREFERENCE_HALAL",
		4: "DIETARY_PREFERENCE_KOSHER",
		5: "DIETARY_PREFERENCE_GLUTEN_FREE",
		6: "DIETARY_PREFERENCE_DAIRY_FREE",
		7: "DIETARY_PREFERENCE_KETO",
		8: "DIETARY_PREFERENCE_LOW_CARB",
		9: "DIETARY_PREFERENCE_NO_SPICY",
	}
	DietaryPreference_value = map[string]int32{
		"DIETARY_PREFERENCE_UNSPECIFIED": 0,
		"DIETARY_PREFERENCE_VEGETARIAN":  1,
		"DIETARY_PREFERENCE_VEGAN":       2,
		"DIETARY_PREFERENCE_HALAL":       3,
		"DIETARY_PREFERENCE_KOSHER":      4,
		"DIETARY_PREFERENCE_GLUTEN_FREE": 5,
		"DIETARY_PREFERENCE_DAIRY_FREE":  6,
		"DIETARY_PREFERENCE_KETO":        7,
		"DIETARY_PREFERENCE_LOW_CARB":    8,
		"DIETARY_PREFERENCE_NO_SPICY":    9,
	}
)

func (x DietaryPreference) Enum() *DietaryPreference {
	p := new(DietaryPreference)
	*p = x
	return p
}

func (x DietaryPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DietaryPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[3].Descriptor()
}

func (DietaryPreference) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[3]
}

func (x DietaryPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DietaryPreference.Descriptor instead.
func (DietaryPreference) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{3}
}

// LoyaltyLevel - уровень лояльности
type LoyaltyLevel int32

const (
	LoyaltyLevel_LOYALTY_LEVEL_UNSPECIFIED LoyaltyLevel = 0
	LoyaltyLevel_LOYALTY_LEVEL_BRONZE      LoyaltyLevel = 1 // Бронзовый
	LoyaltyLevel_LOYALTY_LEVEL_SILVER      LoyaltyLevel = 2 // Серебряный
	LoyaltyLevel_LOYALTY_LEVEL_GOLD        LoyaltyLevel = 3 // Золотой
	LoyaltyLevel_LOYALTY_LEVEL_PLATINUM    LoyaltyLevel = 4 // Платиновый
	LoyaltyLevel_LOYALTY_LEVEL_DIAMOND     LoyaltyLevel = 5 // Алмазный
)

// Enum value maps for LoyaltyLevel.
var (
	LoyaltyLevel_name = map[int32]string{
		0: "LOYALTY_LEVEL_UNSPECIFIED",
		1: "LOYALTY_LEVEL_BRONZE",
		2: "LOYALTY_LEVEL_SILVER",
		3: "LOYALTY_LEVEL_GOLD",
		4: "LOYALTY_LEVEL_PLATINUM",
		5: "LOYALTY_LEVEL_DIAMOND",
	}
	LoyaltyLevel_value = map[string]int32{
		"LOYALTY_LEVEL_UNSPECIFIED": 0,
		"LOYALTY_LEVEL_BRONZE":      1,
		"LOYALTY_LEVEL_SILVER":      2,
		"LOYALTY_LEVEL_GOLD":        3,
		"LOYALTY_LEVEL_PLATINUM":    4,
		"LOYALTY_LEVEL_DIAMOND":     5,
	}
)

func (x LoyaltyLevel) Enum() *LoyaltyLevel {
	p := new(LoyaltyLevel)
	*p = x
	return p
}

func (x LoyaltyLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoyaltyLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[4].Descriptor()
}

func (LoyaltyLevel) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[4]
}

func (x LoyaltyLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoyaltyLevel.Descriptor instead.
func (LoyaltyLevel) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{4}
}

// Permission - разрешения пользователя
type Permission int32

const (
	Permission_PERMISSION_UNSPECIFIED       Permission = 0
	Permission_PERMISSION_VIEW_ORDERS       Permission = 1  // Просмотр заказов
	Permission_PERMISSION_MANAGE_ORDERS     Permission = 2  // Управление заказами
	Permission_PERMISSION_VIEW_MENU         Permission = 3  // Просмотр меню
	Permission_PERMISSION_MANAGE_MENU       Permission = 4  // Управление меню
	Permission_PERMISSION_VIEW_USERS        Permission = 5  // Просмотр пользователей
	Permission_PERMISSION_MANAGE_USERS      Permission = 6  // Управление пользователями
	Permission_PERMISSION_VIEW_ANALYTICS    Permission = 7  // Просмотр аналитики
	Permission_PERMISSION_MANAGE_SETTINGS   Permission = 8  // Управление настройками
	Permission_PERMISSION_MANAGE_RESTAURANT Permission = 9  // Управление рестораном
	Permission_PERMISSION_VIEW_PAYMENTS     Permission = 10 // Просмотр платежей
	Permission_PERMISSION_MANAGE_INVENTORY  Permission = 11 // Управление складом
)

// Enum value maps for Permission.
var (
	Permission_name = map[int32]string{
		0:  "PERMISSION_UNSPECIFIED",
		1:  "PERMISSION_VIEW_ORDERS",
		2:  "PERMISSION_MANAGE_ORDERS",
		3:  "PERMISSION_VIEW_MENU",
		4:  "PERMISSION_MANAGE_MENU",
		5:  "PERMISSION_VIEW_USERS",
		6:  "PERMISSION_MANAGE_USERS",
		7:  "PERMISSION_VIEW_ANALYTICS",
		8:  "PERMISSION_MANAGE_SETTINGS",
		9:  "PERMISSION_MANAGE_RESTAURANT",
		10: "PERMISSION_VIEW_PAYMENTS",
		11: "PERMISSION_MANAGE_INVENTORY",
	}
	Permission_value = map[string]int32{
		"PERMISSION_UNSPECIFIED":       0,
		"PERMISSION_VIEW_ORDERS":       1,
		"PERMISSION_MANAGE_ORDERS":     2,
		"PERMISSION_VIEW_MENU":         3,
		"PERMISSION_MANAGE_MENU":       4,
		"PERMISSION_VIEW_USERS":        5,
		"PERMISSION_MANAGE_USERS":      6,
		"PERMISSION_VIEW_ANALYTICS":    7,
		"PERMISSION_MANAGE_SETTINGS":   8,
		"PERMISSION_MANAGE_RESTAURANT": 9,
		"PERMISSION_VIEW_PAYMENTS":     10,
		"PERMISSION_MANAGE_INVENTORY":  11,
	}
)

func (x Permission) Enum() *Permission {
	p := new(Permission)
	*p = x
	return p
}

func (x Permission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[5].Descriptor()
}

func (Permission) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[5]
}

func (x Permission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permission.Descriptor instead.
func (Permission) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{5}
}

// DeviceType - тип устройства
type DeviceType int32

const (
	DeviceType_DEVICE_TYPE_UNSPECIFIED    DeviceType = 0
	DeviceType_DEVICE_TYPE_WEB            DeviceType = 1 // Веб-браузер
	DeviceType_DEVICE_TYPE_MOBILE_IOS     DeviceType = 2 // iOS мобильное приложение
	DeviceType_DEVICE_TYPE_MOBILE_ANDROID DeviceType = 3 // Android мобильное приложение
	DeviceType_DEVICE_TYPE_TABLET_IOS     DeviceType = 4 // iOS планшет
	DeviceType_DEVICE_TYPE_TABLET_ANDROID DeviceType = 5 // Android планшет
	DeviceType_DEVICE_TYPE_DESKTOP        DeviceType = 6 // Десктопное приложение
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "DEVICE_TYPE_UNSPECIFIED",
		1: "DEVICE_TYPE_WEB",
		2: "DEVICE_TYPE_MOBILE_IOS",
		3: "DEVICE_TYPE_MOBILE_ANDROID",
		4: "DEVICE_TYPE_TABLET_IOS",
		5: "DEVICE_TYPE_TABLET_ANDROID",
		6: "DEVICE_TYPE_DESKTOP",
	}
	DeviceType_value = map[string]int32{
		"DEVICE_TYPE_UNSPECIFIED":    0,
		"DEVICE_TYPE_WEB":            1,
		"DEVICE_TYPE_MOBILE_IOS":     2,
		"DEVICE_TYPE_MOBILE_ANDROID": 3,
		"DEVICE_TYPE_TABLET_IOS":     4,
		"DEVICE_TYPE_TABLET_ANDROID": 5,
		"DEVICE_TYPE_DESKTOP":        6,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_users_models_proto_enumTypes[6].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_users_models_proto_enumTypes[6]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{6}
}

// User - основная сущность пользователя системы
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор пользователя
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Имя пользователя
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Фамилия пользователя
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// Контактная информация
	ContactInfo *common.ContactInfo `protobuf:"bytes,4,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	// Роль пользователя в системе
	Role common.UserRole `protobuf:"varint,5,opt,name=role,proto3,enum=com.gastroflow.common.UserRole" json:"role,omitempty"`
	// Статус пользователя
	Status UserStatus `protobuf:"varint,6,opt,name=status,proto3,enum=com.gastroflow.users.UserStatus" json:"status,omitempty"`
	// Предпочтительный язык
	PreferredLanguage common.Language `protobuf:"varint,7,opt,name=preferred_language,json=preferredLanguage,proto3,enum=com.gastroflow.common.Language" json:"preferred_language,omitempty"`
	// Адреса пользователя
	Addresses []*UserAddress `protobuf:"bytes,8,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Настройки пользователя
	Settings *UserSettings `protobuf:"bytes,9,opt,name=settings,proto3" json:"settings,omitempty"`
	// Информация о профиле
	Profile *UserProfile `protobuf:"bytes,10,opt,name=profile,proto3" json:"profile,omitempty"`
	// Привязки к ресторанам (для сотрудников)
	RestaurantBindings []*RestaurantBinding `protobuf:"bytes,11,rep,name=restaurant_bindings,json=restaurantBindings,proto3" json:"restaurant_bindings,omitempty"`
	// Дата последней активности
	LastActivityAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=last_activity_at,json=lastActivityAt,proto3" json:"last_activity_at,omitempty"`
	// Активен ли пользователь
	IsActive bool `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,14,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_users_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetContactInfo() *common.ContactInfo {
	if x != nil {
		return x.ContactInfo
	}
	return nil
}

func (x *User) GetRole() common.UserRole {
	if x != nil {
		return x.Role
	}
	return common.UserRole(0)
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_USER_STATUS_UNSPECIFIED
}

func (x *User) GetPreferredLanguage() common.Language {
	if x != nil {
		return x.PreferredLanguage
	}
	return common.Language(0)
}

func (x *User) GetAddresses() []*UserAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *User) GetSettings() *UserSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *User) GetProfile() *UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *User) GetRestaurantBindings() []*RestaurantBinding {
	if x != nil {
		return x.RestaurantBindings
	}
	return nil
}

func (x *User) GetLastActivityAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivityAt
	}
	return nil
}

func (x *User) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *User) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// UserAddress - адрес пользователя
type UserAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор адреса
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Адрес
	Address *common.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Тип адреса
	Type AddressType `protobuf:"varint,3,opt,name=type,proto3,enum=com.gastroflow.users.AddressType" json:"type,omitempty"`
	// Название адреса (например, "Дом", "Офис")
	Label string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// Адрес по умолчанию
	IsDefault bool `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	// Активность адреса
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,7,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	mi := &file_users_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{1}
}

func (x *UserAddress) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UserAddress) GetAddress() *common.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UserAddress) GetType() AddressType {
	if x != nil {
		return x.Type
	}
	return AddressType_ADDRESS_TYPE_UNSPECIFIED
}

func (x *UserAddress) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *UserAddress) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *UserAddress) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *UserAddress) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// UserSettings - настройки пользователя
type UserSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Получать уведомления о статусе заказа
	NotificationsOrderStatus bool `protobuf:"varint,1,opt,name=notifications_order_status,json=notificationsOrderStatus,proto3" json:"notifications_order_status,omitempty"`
	// Получать промо-уведомления
	NotificationsPromotions bool `protobuf:"varint,2,opt,name=notifications_promotions,json=notificationsPromotions,proto3" json:"notifications_promotions,omitempty"`
	// Получать уведомления о новых блюдах
	NotificationsNewItems bool `protobuf:"varint,3,opt,name=notifications_new_items,json=notificationsNewItems,proto3" json:"notifications_new_items,omitempty"`
	// Получать Email уведомления
	NotificationsEmail bool `protobuf:"varint,4,opt,name=notifications_email,json=notificationsEmail,proto3" json:"notifications_email,omitempty"`
	// Получать SMS уведомления
	NotificationsSms bool `protobuf:"varint,5,opt,name=notifications_sms,json=notificationsSms,proto3" json:"notifications_sms,omitempty"`
	// Получать Push уведомления
	NotificationsPush bool `protobuf:"varint,6,opt,name=notifications_push,json=notificationsPush,proto3" json:"notifications_push,omitempty"`
	// Темная тема интерфейса
	DarkTheme bool `protobuf:"varint,7,opt,name=dark_theme,json=darkTheme,proto3" json:"dark_theme,omitempty"`
	// Автоматически сохранять адреса доставки
	AutoSaveAddresses bool `protobuf:"varint,8,opt,name=auto_save_addresses,json=autoSaveAddresses,proto3" json:"auto_save_addresses,omitempty"`
	// Запомнить способ оплаты
	RememberPaymentMethod bool `protobuf:"varint,9,opt,name=remember_payment_method,json=rememberPaymentMethod,proto3" json:"remember_payment_method,omitempty"`
	// Способ оплаты по умолчанию
	DefaultPaymentMethod common.PaymentMethod `protobuf:"varint,10,opt,name=default_payment_method,json=defaultPaymentMethod,proto3,enum=com.gastroflow.common.PaymentMethod" json:"default_payment_method,omitempty"`
	// Временная зона пользователя
	Timezone      string `protobuf:"bytes,11,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserSettings) Reset() {
	*x = UserSettings{}
	mi := &file_users_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettings) ProtoMessage() {}

func (x *UserSettings) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettings.ProtoReflect.Descriptor instead.
func (*UserSettings) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{2}
}

func (x *UserSettings) GetNotificationsOrderStatus() bool {
	if x != nil {
		return x.NotificationsOrderStatus
	}
	return false
}

func (x *UserSettings) GetNotificationsPromotions() bool {
	if x != nil {
		return x.NotificationsPromotions
	}
	return false
}

func (x *UserSettings) GetNotificationsNewItems() bool {
	if x != nil {
		return x.NotificationsNewItems
	}
	return false
}

func (x *UserSettings) GetNotificationsEmail() bool {
	if x != nil {
		return x.NotificationsEmail
	}
	return false
}

func (x *UserSettings) GetNotificationsSms() bool {
	if x != nil {
		return x.NotificationsSms
	}
	return false
}

func (x *UserSettings) GetNotificationsPush() bool {
	if x != nil {
		return x.NotificationsPush
	}
	return false
}

func (x *UserSettings) GetDarkTheme() bool {
	if x != nil {
		return x.DarkTheme
	}
	return false
}

func (x *UserSettings) GetAutoSaveAddresses() bool {
	if x != nil {
		return x.AutoSaveAddresses
	}
	return false
}

func (x *UserSettings) GetRememberPaymentMethod() bool {
	if x != nil {
		return x.RememberPaymentMethod
	}
	return false
}

func (x *UserSettings) GetDefaultPaymentMethod() common.PaymentMethod {
	if x != nil {
		return x.DefaultPaymentMethod
	}
	return common.PaymentMethod(0)
}

func (x *UserSettings) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

// UserProfile - профиль пользователя
type UserProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL аватара пользователя
	AvatarUrl string `protobuf:"bytes,1,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// Дата рождения
	BirthDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// Пол пользователя
	Gender Gender `protobuf:"varint,3,opt,name=gender,proto3,enum=com.gastroflow.users.Gender" json:"gender,omitempty"`
	// О себе
	Bio string `protobuf:"bytes,4,opt,name=bio,proto3" json:"bio,omitempty"`
	// Диетические предпочтения
	DietaryPreferences []DietaryPreference `protobuf:"varint,5,rep,packed,name=dietary_preferences,json=dietaryPreferences,proto3,enum=com.gastroflow.users.DietaryPreference" json:"dietary_preferences,omitempty"`
	// Любимые рестораны
	FavoriteRestaurants []*common.UUID `protobuf:"bytes,6,rep,name=favorite_restaurants,json=favoriteRestaurants,proto3" json:"favorite_restaurants,omitempty"`
	// Любимые блюда
	FavoriteMenuItems []*common.UUID `protobuf:"bytes,7,rep,name=favorite_menu_items,json=favoriteMenuItems,proto3" json:"favorite_menu_items,omitempty"`
	// Программа лояльности
	LoyaltyInfo   *LoyaltyInfo `protobuf:"bytes,8,opt,name=loyalty_info,json=loyaltyInfo,proto3" json:"loyalty_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	mi := &file_users_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{3}
}

func (x *UserProfile) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserProfile) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *UserProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_GENDER_UNSPECIFIED
}

func (x *UserProfile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *UserProfile) GetDietaryPreferences() []DietaryPreference {
	if x != nil {
		return x.DietaryPreferences
	}
	return nil
}

func (x *UserProfile) GetFavoriteRestaurants() []*common.UUID {
	if x != nil {
		return x.FavoriteRestaurants
	}
	return nil
}

func (x *UserProfile) GetFavoriteMenuItems() []*common.UUID {
	if x != nil {
		return x.FavoriteMenuItems
	}
	return nil
}

func (x *UserProfile) GetLoyaltyInfo() *LoyaltyInfo {
	if x != nil {
		return x.LoyaltyInfo
	}
	return nil
}

// RestaurantBinding - привязка пользователя к ресторану
type RestaurantBinding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Роль в ресторане
	Role common.UserRole `protobuf:"varint,2,opt,name=role,proto3,enum=com.gastroflow.common.UserRole" json:"role,omitempty"`
	// Филиал (если привязка к конкретному филиалу)
	BranchId *common.UUID `protobuf:"bytes,3,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	// Активна ли привязка
	IsActive bool `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Дата начала работы
	StartDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// Дата окончания работы
	EndDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// Дополнительные разрешения
	Permissions   []Permission `protobuf:"varint,7,rep,packed,name=permissions,proto3,enum=com.gastroflow.users.Permission" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestaurantBinding) Reset() {
	*x = RestaurantBinding{}
	mi := &file_users_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantBinding) ProtoMessage() {}

func (x *RestaurantBinding) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantBinding.ProtoReflect.Descriptor instead.
func (*RestaurantBinding) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{4}
}

func (x *RestaurantBinding) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *RestaurantBinding) GetRole() common.UserRole {
	if x != nil {
		return x.Role
	}
	return common.UserRole(0)
}

func (x *RestaurantBinding) GetBranchId() *common.UUID {
	if x != nil {
		return x.BranchId
	}
	return nil
}

func (x *RestaurantBinding) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *RestaurantBinding) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *RestaurantBinding) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *RestaurantBinding) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// LoyaltyInfo - информация о программе лояльности
type LoyaltyInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уровень лояльности
	Level LoyaltyLevel `protobuf:"varint,1,opt,name=level,proto3,enum=com.gastroflow.users.LoyaltyLevel" json:"level,omitempty"`
	// Текущие баллы
	CurrentPoints int64 `protobuf:"varint,2,opt,name=current_points,json=currentPoints,proto3" json:"current_points,omitempty"`
	// Общее количество заработанных баллов
	TotalEarnedPoints int64 `protobuf:"varint,3,opt,name=total_earned_points,json=totalEarnedPoints,proto3" json:"total_earned_points,omitempty"`
	// Общее количество потраченных баллов
	TotalSpentPoints int64 `protobuf:"varint,4,opt,name=total_spent_points,json=totalSpentPoints,proto3" json:"total_spent_points,omitempty"`
	// Количество заказов
	TotalOrders int32 `protobuf:"varint,5,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	// Общая сумма заказов
	TotalSpent *common.Money `protobuf:"bytes,6,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
	// Дата регистрации в программе лояльности
	RegisteredAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoyaltyInfo) Reset() {
	*x = LoyaltyInfo{}
	mi := &file_users_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoyaltyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoyaltyInfo) ProtoMessage() {}

func (x *LoyaltyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoyaltyInfo.ProtoReflect.Descriptor instead.
func (*LoyaltyInfo) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{5}
}

func (x *LoyaltyInfo) GetLevel() LoyaltyLevel {
	if x != nil {
		return x.Level
	}
	return LoyaltyLevel_LOYALTY_LEVEL_UNSPECIFIED
}

func (x *LoyaltyInfo) GetCurrentPoints() int64 {
	if x != nil {
		return x.CurrentPoints
	}
	return 0
}

func (x *LoyaltyInfo) GetTotalEarnedPoints() int64 {
	if x != nil {
		return x.TotalEarnedPoints
	}
	return 0
}

func (x *LoyaltyInfo) GetTotalSpentPoints() int64 {
	if x != nil {
		return x.TotalSpentPoints
	}
	return 0
}

func (x *LoyaltyInfo) GetTotalOrders() int32 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *LoyaltyInfo) GetTotalSpent() *common.Money {
	if x != nil {
		return x.TotalSpent
	}
	return nil
}

func (x *LoyaltyInfo) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

// Session - пользовательская сессия
type Session struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор сессии
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Идентификатор пользователя
	UserId *common.UUID `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Время создания сессии
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Время истечения сессии
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Время последней активности
	LastActivityAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_activity_at,json=lastActivityAt,proto3" json:"last_activity_at,omitempty"`
	// IP адрес клиента
	ClientIp string `protobuf:"bytes,6,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	// User Agent клиента
	ClientUserAgent string `protobuf:"bytes,7,opt,name=client_user_agent,json=clientUserAgent,proto3" json:"client_user_agent,omitempty"`
	// Устройство клиента
	DeviceInfo *DeviceInfo `protobuf:"bytes,8,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// Активна ли сессия
	IsActive      bool `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_users_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{6}
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Session) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *Session) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Session) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Session) GetLastActivityAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivityAt
	}
	return nil
}

func (x *Session) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *Session) GetClientUserAgent() string {
	if x != nil {
		return x.ClientUserAgent
	}
	return ""
}

func (x *Session) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *Session) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// DeviceInfo - информация об устройстве
type DeviceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Тип устройства
	DeviceType DeviceType `protobuf:"varint,1,opt,name=device_type,json=deviceType,proto3,enum=com.gastroflow.users.DeviceType" json:"device_type,omitempty"`
	// Операционная система
	Os string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	// Версия ОС
	OsVersion string `protobuf:"bytes,3,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	// Браузер (для веб-клиентов)
	Browser string `protobuf:"bytes,4,opt,name=browser,proto3" json:"browser,omitempty"`
	// Версия браузера
	BrowserVersion string `protobuf:"bytes,5,opt,name=browser_version,json=browserVersion,proto3" json:"browser_version,omitempty"`
	// Версия приложения
	AppVersion string `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	// Токен для push уведомлений
	PushToken     string `protobuf:"bytes,7,opt,name=push_token,json=pushToken,proto3" json:"push_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_users_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_users_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_users_models_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceInfo) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_DEVICE_TYPE_UNSPECIFIED
}

func (x *DeviceInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DeviceInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *DeviceInfo) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *DeviceInfo) GetBrowserVersion() string {
	if x != nil {
		return x.BrowserVersion
	}
	return ""
}

func (x *DeviceInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *DeviceInfo) GetPushToken() string {
	if x != nil {
		return x.PushToken
	}
	return ""
}

var File_users_models_proto protoreflect.FileDescriptor

const file_users_models_proto_rawDesc = "" +
	"\n" +
	"\x12users/models.proto\x12\x14com.gastroflow.users\x1a\x12common/enums.proto\x1a\x12common/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\x95\a\n" +
	"\x04User\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12(\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tB\t\xfaB\x06r\x04\x10\x01\x182R\tfirstName\x12$\n" +
	"\tlast_name\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x182R\blastName\x12O\n" +
	"\fcontact_info\x18\x04 \x01(\v2\".com.gastroflow.common.ContactInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\vcontactInfo\x12=\n" +
	"\x04role\x18\x05 \x01(\x0e2\x1f.com.gastroflow.common.UserRoleB\b\xfaB\x05\x82\x01\x02 \x00R\x04role\x12B\n" +
	"\x06status\x18\x06 \x01(\x0e2 .com.gastroflow.users.UserStatusB\b\xfaB\x05\x82\x01\x02 \x00R\x06status\x12X\n" +
	"\x12preferred_language\x18\a \x01(\x0e2\x1f.com.gastroflow.common.LanguageB\b\xfaB\x05\x82\x01\x02 \x00R\x11preferredLanguage\x12I\n" +
	"\taddresses\x18\b \x03(\v2!.com.gastroflow.users.UserAddressB\b\xfaB\x05\x92\x01\x02\x10\n" +
	"R\taddresses\x12>\n" +
	"\bsettings\x18\t \x01(\v2\".com.gastroflow.users.UserSettingsR\bsettings\x12;\n" +
	"\aprofile\x18\n" +
	" \x01(\v2!.com.gastroflow.users.UserProfileR\aprofile\x12b\n" +
	"\x13restaurant_bindings\x18\v \x03(\v2'.com.gastroflow.users.RestaurantBindingB\b\xfaB\x05\x92\x01\x02\x102R\x12restaurantBindings\x12D\n" +
	"\x10last_activity_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\x0elastActivityAt\x12\x1b\n" +
	"\tis_active\x18\r \x01(\bR\bisActive\x12I\n" +
	"\n" +
	"audit_info\x18\x0e \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\xef\x02\n" +
	"\vUserAddress\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12B\n" +
	"\aaddress\x18\x02 \x01(\v2\x1e.com.gastroflow.common.AddressB\b\xfaB\x05\x8a\x01\x02\x10\x01R\aaddress\x12?\n" +
	"\x04type\x18\x03 \x01(\x0e2!.com.gastroflow.users.AddressTypeB\b\xfaB\x05\x82\x01\x02 \x00R\x04type\x12\x1d\n" +
	"\x05label\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x182R\x05label\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\x12I\n" +
	"\n" +
	"audit_info\x18\a \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\xd4\x04\n" +
	"\fUserSettings\x12<\n" +
	"\x1anotifications_order_status\x18\x01 \x01(\bR\x18notificationsOrderStatus\x129\n" +
	"\x18notifications_promotions\x18\x02 \x01(\bR\x17notificationsPromotions\x126\n" +
	"\x17notifications_new_items\x18\x03 \x01(\bR\x15notificationsNewItems\x12/\n" +
	"\x13notifications_email\x18\x04 \x01(\bR\x12notificationsEmail\x12+\n" +
	"\x11notifications_sms\x18\x05 \x01(\bR\x10notificationsSms\x12-\n" +
	"\x12notifications_push\x18\x06 \x01(\bR\x11notificationsPush\x12\x1d\n" +
	"\n" +
	"dark_theme\x18\a \x01(\bR\tdarkTheme\x12.\n" +
	"\x13auto_save_addresses\x18\b \x01(\bR\x11autoSaveAddresses\x126\n" +
	"\x17remember_payment_method\x18\t \x01(\bR\x15rememberPaymentMethod\x12Z\n" +
	"\x16default_payment_method\x18\n" +
	" \x01(\x0e2$.com.gastroflow.common.PaymentMethodR\x14defaultPaymentMethod\x12#\n" +
	"\btimezone\x18\v \x01(\tB\a\xfaB\x04r\x02\x182R\btimezone\"\x9f\x04\n" +
	"\vUserProfile\x12'\n" +
	"\n" +
	"avatar_url\x18\x01 \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\tavatarUrl\x129\n" +
	"\n" +
	"birth_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tbirthDate\x124\n" +
	"\x06gender\x18\x03 \x01(\x0e2\x1c.com.gastroflow.users.GenderR\x06gender\x12\x1a\n" +
	"\x03bio\x18\x04 \x01(\tB\b\xfaB\x05r\x03\x18\xe8\aR\x03bio\x12b\n" +
	"\x13dietary_preferences\x18\x05 \x03(\x0e2'.com.gastroflow.users.DietaryPreferenceB\b\xfaB\x05\x92\x01\x02\x10\x14R\x12dietaryPreferences\x12X\n" +
	"\x14favorite_restaurants\x18\x06 \x03(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x92\x01\x02\x10dR\x13favoriteRestaurants\x12V\n" +
	"\x13favorite_menu_items\x18\a \x03(\v2\x1b.com.gastroflow.common.UUIDB\t\xfaB\x06\x92\x01\x03\x10\xc8\x01R\x11favoriteMenuItems\x12D\n" +
	"\floyalty_info\x18\b \x01(\v2!.com.gastroflow.users.LoyaltyInfoR\vloyaltyInfo\"\xbf\x03\n" +
	"\x11RestaurantBinding\x12J\n" +
	"\rrestaurant_id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\frestaurantId\x12=\n" +
	"\x04role\x18\x02 \x01(\x0e2\x1f.com.gastroflow.common.UserRoleB\b\xfaB\x05\x82\x01\x02 \x00R\x04role\x128\n" +
	"\tbranch_id\x18\x03 \x01(\v2\x1b.com.gastroflow.common.UUIDR\bbranchId\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\x12C\n" +
	"\n" +
	"start_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\tstartDate\x125\n" +
	"\bend_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12L\n" +
	"\vpermissions\x18\a \x03(\x0e2 .com.gastroflow.users.PermissionB\b\xfaB\x05\x92\x01\x02\x102R\vpermissions\"\xa7\x03\n" +
	"\vLoyaltyInfo\x12B\n" +
	"\x05level\x18\x01 \x01(\x0e2\".com.gastroflow.users.LoyaltyLevelB\b\xfaB\x05\x82\x01\x02 \x00R\x05level\x12.\n" +
	"\x0ecurrent_points\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\rcurrentPoints\x127\n" +
	"\x13total_earned_points\x18\x03 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\x11totalEarnedPoints\x125\n" +
	"\x12total_spent_points\x18\x04 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\x10totalSpentPoints\x12*\n" +
	"\ftotal_orders\x18\x05 \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\vtotalOrders\x12=\n" +
	"\vtotal_spent\x18\x06 \x01(\v2\x1c.com.gastroflow.common.MoneyR\n" +
	"totalSpent\x12I\n" +
	"\rregistered_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\fregisteredAt\"\x8a\x04\n" +
	"\aSession\x12)\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x01R\tsessionId\x12>\n" +
	"\auser_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06userId\x12C\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\tcreatedAt\x12C\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\texpiresAt\x12N\n" +
	"\x10last_activity_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\x0elastActivityAt\x12$\n" +
	"\tclient_ip\x18\x06 \x01(\tB\a\xfaB\x04r\x02\x18-R\bclientIp\x124\n" +
	"\x11client_user_agent\x18\a \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\x0fclientUserAgent\x12A\n" +
	"\vdevice_info\x18\b \x01(\v2 .com.gastroflow.users.DeviceInfoR\n" +
	"deviceInfo\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\"\xc2\x02\n" +
	"\n" +
	"DeviceInfo\x12K\n" +
	"\vdevice_type\x18\x01 \x01(\x0e2 .com.gastroflow.users.DeviceTypeB\b\xfaB\x05\x82\x01\x02 \x00R\n" +
	"deviceType\x12\x17\n" +
	"\x02os\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x182R\x02os\x12&\n" +
	"\n" +
	"os_version\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x182R\tosVersion\x12!\n" +
	"\abrowser\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x182R\abrowser\x120\n" +
	"\x0fbrowser_version\x18\x05 \x01(\tB\a\xfaB\x04r\x02\x182R\x0ebrowserVersion\x12(\n" +
	"\vapp_version\x18\x06 \x01(\tB\a\xfaB\x04r\x02\x182R\n" +
	"appVersion\x12'\n" +
	"\n" +
	"push_token\x18\a \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\tpushToken*\xa8\x01\n" +
	"\n" +
	"UserStatus\x12\x1b\n" +
	"\x17USER_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12USER_STATUS_ACTIVE\x10\x01\x12\x18\n" +
	"\x14USER_STATUS_INACTIVE\x10\x02\x12\x19\n" +
	"\x15USER_STATUS_SUSPENDED\x10\x03\x12\x17\n" +
	"\x13USER_STATUS_PENDING\x10\x04\x12\x17\n" +
	"\x13USER_STATUS_DELETED\x10\x05*q\n" +
	"\vAddressType\x12\x1c\n" +
	"\x18ADDRESS_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11ADDRESS_TYPE_HOME\x10\x01\x12\x15\n" +
	"\x11ADDRESS_TYPE_WORK\x10\x02\x12\x16\n" +
	"\x12ADDRESS_TYPE_OTHER\x10\x03*t\n" +
	"\x06Gender\x12\x16\n" +
	"\x12GENDER_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vGENDER_MALE\x10\x01\x12\x11\n" +
	"\rGENDER_FEMALE\x10\x02\x12\x10\n" +
	"\fGENDER_OTHER\x10\x03\x12\x1c\n" +
	"\x18GENDER_PREFER_NOT_TO_SAY\x10\x04*\xdb\x02\n" +
	"\x11DietaryPreference\x12\"\n" +
	"\x1eDIETARY_PREFERENCE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dDIETARY_PREFERENCE_VEGETARIAN\x10\x01\x12\x1c\n" +
	"\x18DIETARY_PREFERENCE_VEGAN\x10\x02\x12\x1c\n" +
	"\x18DIETARY_PREFERENCE_HALAL\x10\x03\x12\x1d\n" +
	"\x19DIETARY_PREFERENCE_KOSHER\x10\x04\x12\"\n" +
	"\x1eDIETARY_PREFERENCE_GLUTEN_FREE\x10\x05\x12!\n" +
	"\x1dDIETARY_PREFERENCE_DAIRY_FREE\x10\x06\x12\x1b\n" +
	"\x17DIETARY_PREFERENCE_KETO\x10\a\x12\x1f\n" +
	"\x1bDIETARY_PREFERENCE_LOW_CARB\x10\b\x12\x1f\n" +
	"\x1bDIETARY_PREFERENCE_NO_SPICY\x10\t*\xb0\x01\n" +
	"\fLoyaltyLevel\x12\x1d\n" +
	"\x19LOYALTY_LEVEL_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14LOYALTY_LEVEL_BRONZE\x10\x01\x12\x18\n" +
	"\x14LOYALTY_LEVEL_SILVER\x10\x02\x12\x16\n" +
	"\x12LOYALTY_LEVEL_GOLD\x10\x03\x12\x1a\n" +
	"\x16LOYALTY_LEVEL_PLATINUM\x10\x04\x12\x19\n" +
	"\x15LOYALTY_LEVEL_DIAMOND\x10\x05*\xf0\x02\n" +
	"\n" +
	"Permission\x12\x1a\n" +
	"\x16PERMISSION_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PERMISSION_VIEW_ORDERS\x10\x01\x12\x1c\n" +
	"\x18PERMISSION_MANAGE_ORDERS\x10\x02\x12\x18\n" +
	"\x14PERMISSION_VIEW_MENU\x10\x03\x12\x1a\n" +
	"\x16PERMISSION_MANAGE_MENU\x10\x04\x12\x19\n" +
	"\x15PERMISSION_VIEW_USERS\x10\x05\x12\x1b\n" +
	"\x17PERMISSION_MANAGE_USERS\x10\x06\x12\x1d\n" +
	"\x19PERMISSION_VIEW_ANALYTICS\x10\a\x12\x1e\n" +
	"\x1aPERMISSION_MANAGE_SETTINGS\x10\b\x12 \n" +
	"\x1cPERMISSION_MANAGE_RESTAURANT\x10\t\x12\x1c\n" +
	"\x18PERMISSION_VIEW_PAYMENTS\x10\n" +
	"\x12\x1f\n" +
	"\x1bPERMISSION_MANAGE_INVENTORY\x10\v*\xcf\x01\n" +
	"\n" +
	"DeviceType\x12\x1b\n" +
	"\x17DEVICE_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fDEVICE_TYPE_WEB\x10\x01\x12\x1a\n" +
	"\x16DEVICE_TYPE_MOBILE_IOS\x10\x02\x12\x1e\n" +
	"\x1aDEVICE_TYPE_MOBILE_ANDROID\x10\x03\x12\x1a\n" +
	"\x16DEVICE_TYPE_TABLET_IOS\x10\x04\x12\x1e\n" +
	"\x1aDEVICE_TYPE_TABLET_ANDROID\x10\x05\x12\x17\n" +
	"\x13DEVICE_TYPE_DESKTOP\x10\x06B\xbf\x01\n" +
	"\x18com.com.gastroflow.usersB\vModelsProtoP\x01Z$github.com/gastroflow/proto-go/users\xa2\x02\x03CGU\xaa\x02\x14Com.Gastroflow.Users\xca\x02\x14Com\\Gastroflow\\Users\xe2\x02 Com\\Gastroflow\\Users\\GPBMetadata\xea\x02\x16Com::Gastroflow::Usersb\x06proto3"

var (
	file_users_models_proto_rawDescOnce sync.Once
	file_users_models_proto_rawDescData []byte
)

func file_users_models_proto_rawDescGZIP() []byte {
	file_users_models_proto_rawDescOnce.Do(func() {
		file_users_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_users_models_proto_rawDesc), len(file_users_models_proto_rawDesc)))
	})
	return file_users_models_proto_rawDescData
}

var file_users_models_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_users_models_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_users_models_proto_goTypes = []any{
	(UserStatus)(0),               // 0: com.gastroflow.users.UserStatus
	(AddressType)(0),              // 1: com.gastroflow.users.AddressType
	(Gender)(0),                   // 2: com.gastroflow.users.Gender
	(DietaryPreference)(0),        // 3: com.gastroflow.users.DietaryPreference
	(LoyaltyLevel)(0),             // 4: com.gastroflow.users.LoyaltyLevel
	(Permission)(0),               // 5: com.gastroflow.users.Permission
	(DeviceType)(0),               // 6: com.gastroflow.users.DeviceType
	(*User)(nil),                  // 7: com.gastroflow.users.User
	(*UserAddress)(nil),           // 8: com.gastroflow.users.UserAddress
	(*UserSettings)(nil),          // 9: com.gastroflow.users.UserSettings
	(*UserProfile)(nil),           // 10: com.gastroflow.users.UserProfile
	(*RestaurantBinding)(nil),     // 11: com.gastroflow.users.RestaurantBinding
	(*LoyaltyInfo)(nil),           // 12: com.gastroflow.users.LoyaltyInfo
	(*Session)(nil),               // 13: com.gastroflow.users.Session
	(*DeviceInfo)(nil),            // 14: com.gastroflow.users.DeviceInfo
	(*common.UUID)(nil),           // 15: com.gastroflow.common.UUID
	(*common.ContactInfo)(nil),    // 16: com.gastroflow.common.ContactInfo
	(common.UserRole)(0),          // 17: com.gastroflow.common.UserRole
	(common.Language)(0),          // 18: com.gastroflow.common.Language
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
	(*common.AuditInfo)(nil),      // 20: com.gastroflow.common.AuditInfo
	(*common.Address)(nil),        // 21: com.gastroflow.common.Address
	(common.PaymentMethod)(0),     // 22: com.gastroflow.common.PaymentMethod
	(*common.Money)(nil),          // 23: com.gastroflow.common.Money
}
var file_users_models_proto_depIdxs = []int32{
	15, // 0: com.gastroflow.users.User.id:type_name -> com.gastroflow.common.UUID
	16, // 1: com.gastroflow.users.User.contact_info:type_name -> com.gastroflow.common.ContactInfo
	17, // 2: com.gastroflow.users.User.role:type_name -> com.gastroflow.common.UserRole
	0,  // 3: com.gastroflow.users.User.status:type_name -> com.gastroflow.users.UserStatus
	18, // 4: com.gastroflow.users.User.preferred_language:type_name -> com.gastroflow.common.Language
	8,  // 5: com.gastroflow.users.User.addresses:type_name -> com.gastroflow.users.UserAddress
	9,  // 6: com.gastroflow.users.User.settings:type_name -> com.gastroflow.users.UserSettings
	10, // 7: com.gastroflow.users.User.profile:type_name -> com.gastroflow.users.UserProfile
	11, // 8: com.gastroflow.users.User.restaurant_bindings:type_name -> com.gastroflow.users.RestaurantBinding
	19, // 9: com.gastroflow.users.User.last_activity_at:type_name -> google.protobuf.Timestamp
	20, // 10: com.gastroflow.users.User.audit_info:type_name -> com.gastroflow.common.AuditInfo
	15, // 11: com.gastroflow.users.UserAddress.id:type_name -> com.gastroflow.common.UUID
	21, // 12: com.gastroflow.users.UserAddress.address:type_name -> com.gastroflow.common.Address
	1,  // 13: com.gastroflow.users.UserAddress.type:type_name -> com.gastroflow.users.AddressType
	20, // 14: com.gastroflow.users.UserAddress.audit_info:type_name -> com.gastroflow.common.AuditInfo
	22, // 15: com.gastroflow.users.UserSettings.default_payment_method:type_name -> com.gastroflow.common.PaymentMethod
	19, // 16: com.gastroflow.users.UserProfile.birth_date:type_name -> google.protobuf.Timestamp
	2,  // 17: com.gastroflow.users.UserProfile.gender:type_name -> com.gastroflow.users.Gender
	3,  // 18: com.gastroflow.users.UserProfile.dietary_preferences:type_name -> com.gastroflow.users.DietaryPreference
	15, // 19: com.gastroflow.users.UserProfile.favorite_restaurants:type_name -> com.gastroflow.common.UUID
	15, // 20: com.gastroflow.users.UserProfile.favorite_menu_items:type_name -> com.gastroflow.common.UUID
	12, // 21: com.gastroflow.users.UserProfile.loyalty_info:type_name -> com.gastroflow.users.LoyaltyInfo
	15, // 22: com.gastroflow.users.RestaurantBinding.restaurant_id:type_name -> com.gastroflow.common.UUID
	17, // 23: com.gastroflow.users.RestaurantBinding.role:type_name -> com.gastroflow.common.UserRole
	15, // 24: com.gastroflow.users.RestaurantBinding.branch_id:type_name -> com.gastroflow.common.UUID
	19, // 25: com.gastroflow.users.RestaurantBinding.start_date:type_name -> google.protobuf.Timestamp
	19, // 26: com.gastroflow.users.RestaurantBinding.end_date:type_name -> google.protobuf.Timestamp
	5,  // 27: com.gastroflow.users.RestaurantBinding.permissions:type_name -> com.gastroflow.users.Permission
	4,  // 28: com.gastroflow.users.LoyaltyInfo.level:type_name -> com.gastroflow.users.LoyaltyLevel
	23, // 29: com.gastroflow.users.LoyaltyInfo.total_spent:type_name -> com.gastroflow.common.Money
	19, // 30: com.gastroflow.users.LoyaltyInfo.registered_at:type_name -> google.protobuf.Timestamp
	15, // 31: com.gastroflow.users.Session.user_id:type_name -> com.gastroflow.common.UUID
	19, // 32: com.gastroflow.users.Session.created_at:type_name -> google.protobuf.Timestamp
	19, // 33: com.gastroflow.users.Session.expires_at:type_name -> google.protobuf.Timestamp
	19, // 34: com.gastroflow.users.Session.last_activity_at:type_name -> google.protobuf.Timestamp
	14, // 35: com.gastroflow.users.Session.device_info:type_name -> com.gastroflow.users.DeviceInfo
	6,  // 36: com.gastroflow.users.DeviceInfo.device_type:type_name -> com.gastroflow.users.DeviceType
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_users_models_proto_init() }
func file_users_models_proto_init() {
	if File_users_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_users_models_proto_rawDesc), len(file_users_models_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_users_models_proto_goTypes,
		DependencyIndexes: file_users_models_proto_depIdxs,
		EnumInfos:         file_users_models_proto_enumTypes,
		MessageInfos:      file_users_models_proto_msgTypes,
	}.Build()
	File_users_models_proto = out.File
	file_users_models_proto_goTypes = nil
	file_users_models_proto_depIdxs = nil
}
