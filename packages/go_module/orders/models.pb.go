// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: com/gastroflow/orders/models.proto

package orders

import (
	common "github.com/gastroflow/proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscountType - тип скидки
type DiscountType int32

const (
	DiscountType_DISCOUNT_TYPE_UNSPECIFIED  DiscountType = 0
	DiscountType_DISCOUNT_TYPE_FIXED_AMOUNT DiscountType = 1 // Фиксированная сумма
	DiscountType_DISCOUNT_TYPE_PERCENTAGE   DiscountType = 2 // Процент от суммы
	DiscountType_DISCOUNT_TYPE_PROMO_CODE   DiscountType = 3 // По промокоду
	DiscountType_DISCOUNT_TYPE_LOYALTY      DiscountType = 4 // Программа лояльности
	DiscountType_DISCOUNT_TYPE_FIRST_ORDER  DiscountType = 5 // Скидка на первый заказ
)

// Enum value maps for DiscountType.
var (
	DiscountType_name = map[int32]string{
		0: "DISCOUNT_TYPE_UNSPECIFIED",
		1: "DISCOUNT_TYPE_FIXED_AMOUNT",
		2: "DISCOUNT_TYPE_PERCENTAGE",
		3: "DISCOUNT_TYPE_PROMO_CODE",
		4: "DISCOUNT_TYPE_LOYALTY",
		5: "DISCOUNT_TYPE_FIRST_ORDER",
	}
	DiscountType_value = map[string]int32{
		"DISCOUNT_TYPE_UNSPECIFIED":  0,
		"DISCOUNT_TYPE_FIXED_AMOUNT": 1,
		"DISCOUNT_TYPE_PERCENTAGE":   2,
		"DISCOUNT_TYPE_PROMO_CODE":   3,
		"DISCOUNT_TYPE_LOYALTY":      4,
		"DISCOUNT_TYPE_FIRST_ORDER":  5,
	}
)

func (x DiscountType) Enum() *DiscountType {
	p := new(DiscountType)
	*p = x
	return p
}

func (x DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_orders_models_proto_enumTypes[0].Descriptor()
}

func (DiscountType) Type() protoreflect.EnumType {
	return &file_com_gastroflow_orders_models_proto_enumTypes[0]
}

func (x DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountType.Descriptor instead.
func (DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_orders_models_proto_rawDescGZIP(), []int{0}
}

// Order - основная сущность заказа в системе GastroFlow
type Order struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор заказа
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Имя клиента
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Дата и время создания заказа
	DateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// Способ получения заказа
	PackingMode common.PackingMode `protobuf:"varint,4,opt,name=packing_mode,json=packingMode,proto3,enum=com.gastroflow.common.PackingMode" json:"packing_mode,omitempty"`
	// Позиции в заказе
	Positions []*Position `protobuf:"bytes,5,rep,name=positions,proto3" json:"positions,omitempty"`
	// Общая сумма заказа
	Total *common.Money `protobuf:"bytes,6,opt,name=total,proto3" json:"total,omitempty"`
	// Готовность всего заказа
	IsReady bool `protobuf:"varint,7,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	// Контактная информация клиента
	ContactInfo *common.ContactInfo `protobuf:"bytes,8,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	// Время приготовления в минутах (расчетное)
	Duration int32 `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	// Адрес доставки (только для доставки)
	Address *common.Address `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	// Внешний номер заказа (для интеграций)
	ExternalOrderNumber string `protobuf:"bytes,11,opt,name=external_order_number,json=externalOrderNumber,proto3" json:"external_order_number,omitempty"`
	// Идентификатор примененного промокода
	PromoCodeId *common.UUID `protobuf:"bytes,12,opt,name=promo_code_id,json=promoCodeId,proto3" json:"promo_code_id,omitempty"`
	// Способ оплаты
	PaymentMethod common.PaymentMethod `protobuf:"varint,13,opt,name=payment_method,json=paymentMethod,proto3,enum=com.gastroflow.common.PaymentMethod" json:"payment_method,omitempty"`
	// Текущий статус заказа
	Status common.OrderStatus `protobuf:"varint,14,opt,name=status,proto3,enum=com.gastroflow.common.OrderStatus" json:"status,omitempty"`
	// Режим времени приготовления
	PreparingTimeMode common.PreparingTimeMode `protobuf:"varint,15,opt,name=preparing_time_mode,json=preparingTimeMode,proto3,enum=com.gastroflow.common.PreparingTimeMode" json:"preparing_time_mode,omitempty"`
	// Желаемое время готовности (для режима "К времени")
	DesiredReadyTime *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=desired_ready_time,json=desiredReadyTime,proto3" json:"desired_ready_time,omitempty"`
	// Идентификатор ресторана (мультитенантность)
	RestaurantId *common.UUID `protobuf:"bytes,17,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Комментарий к заказу
	Comment string `protobuf:"bytes,18,opt,name=comment,proto3" json:"comment,omitempty"`
	// Информация о скидке
	Discount *DiscountInfo `protobuf:"bytes,19,opt,name=discount,proto3" json:"discount,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,20,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_orders_models_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Order) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Order) GetDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *Order) GetPackingMode() common.PackingMode {
	if x != nil {
		return x.PackingMode
	}
	return common.PackingMode(0)
}

func (x *Order) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *Order) GetTotal() *common.Money {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *Order) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *Order) GetContactInfo() *common.ContactInfo {
	if x != nil {
		return x.ContactInfo
	}
	return nil
}

func (x *Order) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Order) GetAddress() *common.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Order) GetExternalOrderNumber() string {
	if x != nil {
		return x.ExternalOrderNumber
	}
	return ""
}

func (x *Order) GetPromoCodeId() *common.UUID {
	if x != nil {
		return x.PromoCodeId
	}
	return nil
}

func (x *Order) GetPaymentMethod() common.PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return common.PaymentMethod(0)
}

func (x *Order) GetStatus() common.OrderStatus {
	if x != nil {
		return x.Status
	}
	return common.OrderStatus(0)
}

func (x *Order) GetPreparingTimeMode() common.PreparingTimeMode {
	if x != nil {
		return x.PreparingTimeMode
	}
	return common.PreparingTimeMode(0)
}

func (x *Order) GetDesiredReadyTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DesiredReadyTime
	}
	return nil
}

func (x *Order) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *Order) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Order) GetDiscount() *DiscountInfo {
	if x != nil {
		return x.Discount
	}
	return nil
}

func (x *Order) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// Position - позиция в заказе
type Position struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор позиции
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название позиции
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Базовая цена позиции
	Price *common.Money `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	// Количество единиц данной позиции
	Quantity int32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Выбранные варианты для позиции
	SelectedVariants []*Variant `protobuf:"bytes,5,rep,name=selected_variants,json=selectedVariants,proto3" json:"selected_variants,omitempty"`
	// Комментарий к позиции от клиента
	Comment string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	// Готовность позиции
	IsReady bool `protobuf:"varint,7,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	// Идентификатор родительской категории меню
	ParentId *common.UUID `protobuf:"bytes,8,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Идентификатор позиции в меню (для связи с каталогом)
	MenuItemId *common.UUID `protobuf:"bytes,9,opt,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"`
	// Время приготовления позиции в минутах
	CookingTime int32 `protobuf:"varint,10,opt,name=cooking_time,json=cookingTime,proto3" json:"cooking_time,omitempty"`
	// Специальные инструкции для кухни
	CookingInstructions string `protobuf:"bytes,11,opt,name=cooking_instructions,json=cookingInstructions,proto3" json:"cooking_instructions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_orders_models_proto_rawDescGZIP(), []int{1}
}

func (x *Position) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Position) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Position) GetPrice() *common.Money {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *Position) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Position) GetSelectedVariants() []*Variant {
	if x != nil {
		return x.SelectedVariants
	}
	return nil
}

func (x *Position) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Position) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *Position) GetParentId() *common.UUID {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *Position) GetMenuItemId() *common.UUID {
	if x != nil {
		return x.MenuItemId
	}
	return nil
}

func (x *Position) GetCookingTime() int32 {
	if x != nil {
		return x.CookingTime
	}
	return 0
}

func (x *Position) GetCookingInstructions() string {
	if x != nil {
		return x.CookingInstructions
	}
	return ""
}

// Variant - вариант позиции (размер, добавка и т.д.)
type Variant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Название варианта (например, "Большая порция", "Без лука")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Дополнительная цена за вариант (может быть отрицательной для скидок)
	Price *common.Money `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	// Идентификатор варианта в меню
	VariantId *common.UUID `protobuf:"bytes,3,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	// Категория варианта (размер, добавка, исключение и т.д.)
	Category      string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variant) Reset() {
	*x = Variant{}
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_orders_models_proto_rawDescGZIP(), []int{2}
}

func (x *Variant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variant) GetPrice() *common.Money {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *Variant) GetVariantId() *common.UUID {
	if x != nil {
		return x.VariantId
	}
	return nil
}

func (x *Variant) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

// DiscountInfo - информация о скидке на заказ
type DiscountInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Размер скидки
	Amount *common.Money `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Процент скидки (если применимо)
	Percentage float64 `protobuf:"fixed64,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	// Тип скидки
	Type DiscountType `protobuf:"varint,3,opt,name=type,proto3,enum=com.gastroflow.orders.DiscountType" json:"type,omitempty"`
	// Описание скидки
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Код промокода (если скидка по промокоду)
	PromoCode     string `protobuf:"bytes,5,opt,name=promo_code,json=promoCode,proto3" json:"promo_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscountInfo) Reset() {
	*x = DiscountInfo{}
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountInfo) ProtoMessage() {}

func (x *DiscountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_orders_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountInfo.ProtoReflect.Descriptor instead.
func (*DiscountInfo) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_orders_models_proto_rawDescGZIP(), []int{3}
}

func (x *DiscountInfo) GetAmount() *common.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *DiscountInfo) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *DiscountInfo) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_DISCOUNT_TYPE_UNSPECIFIED
}

func (x *DiscountInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiscountInfo) GetPromoCode() string {
	if x != nil {
		return x.PromoCode
	}
	return ""
}

var File_com_gastroflow_orders_models_proto protoreflect.FileDescriptor

const file_com_gastroflow_orders_models_proto_rawDesc = "" +
	"\n" +
	"\"com/gastroflow/orders/models.proto\x12\x15com.gastroflow.orders\x1a!com/gastroflow/common/enums.proto\x1a!com/gastroflow/common/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf3\b\n" +
	"\x05Order\x12+\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x127\n" +
	"\tdate_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bdateTime\x12E\n" +
	"\fpacking_mode\x18\x04 \x01(\x0e2\".com.gastroflow.common.PackingModeR\vpackingMode\x12=\n" +
	"\tpositions\x18\x05 \x03(\v2\x1f.com.gastroflow.orders.PositionR\tpositions\x122\n" +
	"\x05total\x18\x06 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x05total\x12\x19\n" +
	"\bis_ready\x18\a \x01(\bR\aisReady\x12E\n" +
	"\fcontact_info\x18\b \x01(\v2\".com.gastroflow.common.ContactInfoR\vcontactInfo\x12\x1a\n" +
	"\bduration\x18\t \x01(\x05R\bduration\x128\n" +
	"\aaddress\x18\n" +
	" \x01(\v2\x1e.com.gastroflow.common.AddressR\aaddress\x122\n" +
	"\x15external_order_number\x18\v \x01(\tR\x13externalOrderNumber\x12?\n" +
	"\rpromo_code_id\x18\f \x01(\v2\x1b.com.gastroflow.common.UUIDR\vpromoCodeId\x12K\n" +
	"\x0epayment_method\x18\r \x01(\x0e2$.com.gastroflow.common.PaymentMethodR\rpaymentMethod\x12:\n" +
	"\x06status\x18\x0e \x01(\x0e2\".com.gastroflow.common.OrderStatusR\x06status\x12X\n" +
	"\x13preparing_time_mode\x18\x0f \x01(\x0e2(.com.gastroflow.common.PreparingTimeModeR\x11preparingTimeMode\x12H\n" +
	"\x12desired_ready_time\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\x10desiredReadyTime\x12@\n" +
	"\rrestaurant_id\x18\x11 \x01(\v2\x1b.com.gastroflow.common.UUIDR\frestaurantId\x12\x18\n" +
	"\acomment\x18\x12 \x01(\tR\acomment\x12?\n" +
	"\bdiscount\x18\x13 \x01(\v2#.com.gastroflow.orders.DiscountInfoR\bdiscount\x12?\n" +
	"\n" +
	"audit_info\x18\x14 \x01(\v2 .com.gastroflow.common.AuditInfoR\tauditInfo\"\xec\x03\n" +
	"\bPosition\x12+\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x122\n" +
	"\x05price\x18\x03 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x05price\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12K\n" +
	"\x11selected_variants\x18\x05 \x03(\v2\x1e.com.gastroflow.orders.VariantR\x10selectedVariants\x12\x18\n" +
	"\acomment\x18\x06 \x01(\tR\acomment\x12\x19\n" +
	"\bis_ready\x18\a \x01(\bR\aisReady\x128\n" +
	"\tparent_id\x18\b \x01(\v2\x1b.com.gastroflow.common.UUIDR\bparentId\x12=\n" +
	"\fmenu_item_id\x18\t \x01(\v2\x1b.com.gastroflow.common.UUIDR\n" +
	"menuItemId\x12!\n" +
	"\fcooking_time\x18\n" +
	" \x01(\x05R\vcookingTime\x121\n" +
	"\x14cooking_instructions\x18\v \x01(\tR\x13cookingInstructions\"\xa9\x01\n" +
	"\aVariant\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x05price\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x05price\x12:\n" +
	"\n" +
	"variant_id\x18\x03 \x01(\v2\x1b.com.gastroflow.common.UUIDR\tvariantId\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\"\xde\x01\n" +
	"\fDiscountInfo\x124\n" +
	"\x06amount\x18\x01 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x06amount\x12\x1e\n" +
	"\n" +
	"percentage\x18\x02 \x01(\x01R\n" +
	"percentage\x127\n" +
	"\x04type\x18\x03 \x01(\x0e2#.com.gastroflow.orders.DiscountTypeR\x04type\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"promo_code\x18\x05 \x01(\tR\tpromoCode*\xc3\x01\n" +
	"\fDiscountType\x12\x1d\n" +
	"\x19DISCOUNT_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aDISCOUNT_TYPE_FIXED_AMOUNT\x10\x01\x12\x1c\n" +
	"\x18DISCOUNT_TYPE_PERCENTAGE\x10\x02\x12\x1c\n" +
	"\x18DISCOUNT_TYPE_PROMO_CODE\x10\x03\x12\x19\n" +
	"\x15DISCOUNT_TYPE_LOYALTY\x10\x04\x12\x1d\n" +
	"\x19DISCOUNT_TYPE_FIRST_ORDER\x10\x05B\xc5\x01\n" +
	"\x19com.com.gastroflow.ordersB\vModelsProtoP\x01Z%github.com/gastroflow/proto-go/orders\xa2\x02\x03CGO\xaa\x02\x15Com.Gastroflow.Orders\xca\x02\x15Com\\Gastroflow\\Orders\xe2\x02!Com\\Gastroflow\\Orders\\GPBMetadata\xea\x02\x17Com::Gastroflow::Ordersb\x06proto3"

var (
	file_com_gastroflow_orders_models_proto_rawDescOnce sync.Once
	file_com_gastroflow_orders_models_proto_rawDescData []byte
)

func file_com_gastroflow_orders_models_proto_rawDescGZIP() []byte {
	file_com_gastroflow_orders_models_proto_rawDescOnce.Do(func() {
		file_com_gastroflow_orders_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_gastroflow_orders_models_proto_rawDesc), len(file_com_gastroflow_orders_models_proto_rawDesc)))
	})
	return file_com_gastroflow_orders_models_proto_rawDescData
}

var file_com_gastroflow_orders_models_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_gastroflow_orders_models_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_com_gastroflow_orders_models_proto_goTypes = []any{
	(DiscountType)(0),             // 0: com.gastroflow.orders.DiscountType
	(*Order)(nil),                 // 1: com.gastroflow.orders.Order
	(*Position)(nil),              // 2: com.gastroflow.orders.Position
	(*Variant)(nil),               // 3: com.gastroflow.orders.Variant
	(*DiscountInfo)(nil),          // 4: com.gastroflow.orders.DiscountInfo
	(*common.UUID)(nil),           // 5: com.gastroflow.common.UUID
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(common.PackingMode)(0),       // 7: com.gastroflow.common.PackingMode
	(*common.Money)(nil),          // 8: com.gastroflow.common.Money
	(*common.ContactInfo)(nil),    // 9: com.gastroflow.common.ContactInfo
	(*common.Address)(nil),        // 10: com.gastroflow.common.Address
	(common.PaymentMethod)(0),     // 11: com.gastroflow.common.PaymentMethod
	(common.OrderStatus)(0),       // 12: com.gastroflow.common.OrderStatus
	(common.PreparingTimeMode)(0), // 13: com.gastroflow.common.PreparingTimeMode
	(*common.AuditInfo)(nil),      // 14: com.gastroflow.common.AuditInfo
}
var file_com_gastroflow_orders_models_proto_depIdxs = []int32{
	5,  // 0: com.gastroflow.orders.Order.id:type_name -> com.gastroflow.common.UUID
	6,  // 1: com.gastroflow.orders.Order.date_time:type_name -> google.protobuf.Timestamp
	7,  // 2: com.gastroflow.orders.Order.packing_mode:type_name -> com.gastroflow.common.PackingMode
	2,  // 3: com.gastroflow.orders.Order.positions:type_name -> com.gastroflow.orders.Position
	8,  // 4: com.gastroflow.orders.Order.total:type_name -> com.gastroflow.common.Money
	9,  // 5: com.gastroflow.orders.Order.contact_info:type_name -> com.gastroflow.common.ContactInfo
	10, // 6: com.gastroflow.orders.Order.address:type_name -> com.gastroflow.common.Address
	5,  // 7: com.gastroflow.orders.Order.promo_code_id:type_name -> com.gastroflow.common.UUID
	11, // 8: com.gastroflow.orders.Order.payment_method:type_name -> com.gastroflow.common.PaymentMethod
	12, // 9: com.gastroflow.orders.Order.status:type_name -> com.gastroflow.common.OrderStatus
	13, // 10: com.gastroflow.orders.Order.preparing_time_mode:type_name -> com.gastroflow.common.PreparingTimeMode
	6,  // 11: com.gastroflow.orders.Order.desired_ready_time:type_name -> google.protobuf.Timestamp
	5,  // 12: com.gastroflow.orders.Order.restaurant_id:type_name -> com.gastroflow.common.UUID
	4,  // 13: com.gastroflow.orders.Order.discount:type_name -> com.gastroflow.orders.DiscountInfo
	14, // 14: com.gastroflow.orders.Order.audit_info:type_name -> com.gastroflow.common.AuditInfo
	5,  // 15: com.gastroflow.orders.Position.id:type_name -> com.gastroflow.common.UUID
	8,  // 16: com.gastroflow.orders.Position.price:type_name -> com.gastroflow.common.Money
	3,  // 17: com.gastroflow.orders.Position.selected_variants:type_name -> com.gastroflow.orders.Variant
	5,  // 18: com.gastroflow.orders.Position.parent_id:type_name -> com.gastroflow.common.UUID
	5,  // 19: com.gastroflow.orders.Position.menu_item_id:type_name -> com.gastroflow.common.UUID
	8,  // 20: com.gastroflow.orders.Variant.price:type_name -> com.gastroflow.common.Money
	5,  // 21: com.gastroflow.orders.Variant.variant_id:type_name -> com.gastroflow.common.UUID
	8,  // 22: com.gastroflow.orders.DiscountInfo.amount:type_name -> com.gastroflow.common.Money
	0,  // 23: com.gastroflow.orders.DiscountInfo.type:type_name -> com.gastroflow.orders.DiscountType
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_com_gastroflow_orders_models_proto_init() }
func file_com_gastroflow_orders_models_proto_init() {
	if File_com_gastroflow_orders_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_gastroflow_orders_models_proto_rawDesc), len(file_com_gastroflow_orders_models_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_gastroflow_orders_models_proto_goTypes,
		DependencyIndexes: file_com_gastroflow_orders_models_proto_depIdxs,
		EnumInfos:         file_com_gastroflow_orders_models_proto_enumTypes,
		MessageInfos:      file_com_gastroflow_orders_models_proto_msgTypes,
	}.Build()
	File_com_gastroflow_orders_models_proto = out.File
	file_com_gastroflow_orders_models_proto_goTypes = nil
	file_com_gastroflow_orders_models_proto_depIdxs = nil
}
