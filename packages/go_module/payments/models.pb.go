// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: com/gastroflow/payments/models.proto

package payments

import (
	common "github.com/gastroflow/proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PaymentStatus - статус платежа
type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_STATUS_UNSPECIFIED        PaymentStatus = 0
	PaymentStatus_PAYMENT_STATUS_PENDING            PaymentStatus = 1 // Ожидает обработки
	PaymentStatus_PAYMENT_STATUS_PROCESSING         PaymentStatus = 2 // Обрабатывается
	PaymentStatus_PAYMENT_STATUS_REQUIRES_ACTION    PaymentStatus = 3 // Требует действий (3D Secure и т.д.)
	PaymentStatus_PAYMENT_STATUS_SUCCEEDED          PaymentStatus = 4 // Успешно завершен
	PaymentStatus_PAYMENT_STATUS_FAILED             PaymentStatus = 5 // Не удался
	PaymentStatus_PAYMENT_STATUS_CANCELLED          PaymentStatus = 6 // Отменен
	PaymentStatus_PAYMENT_STATUS_EXPIRED            PaymentStatus = 7 // Истек срок
	PaymentStatus_PAYMENT_STATUS_REFUNDED           PaymentStatus = 8 // Возвращен
	PaymentStatus_PAYMENT_STATUS_PARTIALLY_REFUNDED PaymentStatus = 9 // Частично возвращен
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_STATUS_UNSPECIFIED",
		1: "PAYMENT_STATUS_PENDING",
		2: "PAYMENT_STATUS_PROCESSING",
		3: "PAYMENT_STATUS_REQUIRES_ACTION",
		4: "PAYMENT_STATUS_SUCCEEDED",
		5: "PAYMENT_STATUS_FAILED",
		6: "PAYMENT_STATUS_CANCELLED",
		7: "PAYMENT_STATUS_EXPIRED",
		8: "PAYMENT_STATUS_REFUNDED",
		9: "PAYMENT_STATUS_PARTIALLY_REFUNDED",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_STATUS_UNSPECIFIED":        0,
		"PAYMENT_STATUS_PENDING":            1,
		"PAYMENT_STATUS_PROCESSING":         2,
		"PAYMENT_STATUS_REQUIRES_ACTION":    3,
		"PAYMENT_STATUS_SUCCEEDED":          4,
		"PAYMENT_STATUS_FAILED":             5,
		"PAYMENT_STATUS_CANCELLED":          6,
		"PAYMENT_STATUS_EXPIRED":            7,
		"PAYMENT_STATUS_REFUNDED":           8,
		"PAYMENT_STATUS_PARTIALLY_REFUNDED": 9,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_payments_models_proto_enumTypes[0].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_com_gastroflow_payments_models_proto_enumTypes[0]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{0}
}

// PaymentProvider - поставщик платежных услуг
type PaymentProvider int32

const (
	PaymentProvider_PAYMENT_PROVIDER_UNSPECIFIED     PaymentProvider = 0
	PaymentProvider_PAYMENT_PROVIDER_STRIPE          PaymentProvider = 1 // Stripe
	PaymentProvider_PAYMENT_PROVIDER_YANDEX_CHECKOUT PaymentProvider = 2 // ЮKassa (Яндекс.Касса)
	PaymentProvider_PAYMENT_PROVIDER_TINKOFF         PaymentProvider = 3 // Тинькофф
	PaymentProvider_PAYMENT_PROVIDER_SBERBANK        PaymentProvider = 4 // Сбербанк
	PaymentProvider_PAYMENT_PROVIDER_PAYPAL          PaymentProvider = 5 // PayPal
	PaymentProvider_PAYMENT_PROVIDER_ROBOKASSA       PaymentProvider = 6 // Robokassa
	PaymentProvider_PAYMENT_PROVIDER_CLOUDPAYMENTS   PaymentProvider = 7 // CloudPayments
	PaymentProvider_PAYMENT_PROVIDER_ACQUIRING       PaymentProvider = 8 // Банковский эквайринг
	PaymentProvider_PAYMENT_PROVIDER_CASH            PaymentProvider = 9 // Наличные
)

// Enum value maps for PaymentProvider.
var (
	PaymentProvider_name = map[int32]string{
		0: "PAYMENT_PROVIDER_UNSPECIFIED",
		1: "PAYMENT_PROVIDER_STRIPE",
		2: "PAYMENT_PROVIDER_YANDEX_CHECKOUT",
		3: "PAYMENT_PROVIDER_TINKOFF",
		4: "PAYMENT_PROVIDER_SBERBANK",
		5: "PAYMENT_PROVIDER_PAYPAL",
		6: "PAYMENT_PROVIDER_ROBOKASSA",
		7: "PAYMENT_PROVIDER_CLOUDPAYMENTS",
		8: "PAYMENT_PROVIDER_ACQUIRING",
		9: "PAYMENT_PROVIDER_CASH",
	}
	PaymentProvider_value = map[string]int32{
		"PAYMENT_PROVIDER_UNSPECIFIED":     0,
		"PAYMENT_PROVIDER_STRIPE":          1,
		"PAYMENT_PROVIDER_YANDEX_CHECKOUT": 2,
		"PAYMENT_PROVIDER_TINKOFF":         3,
		"PAYMENT_PROVIDER_SBERBANK":        4,
		"PAYMENT_PROVIDER_PAYPAL":          5,
		"PAYMENT_PROVIDER_ROBOKASSA":       6,
		"PAYMENT_PROVIDER_CLOUDPAYMENTS":   7,
		"PAYMENT_PROVIDER_ACQUIRING":       8,
		"PAYMENT_PROVIDER_CASH":            9,
	}
)

func (x PaymentProvider) Enum() *PaymentProvider {
	p := new(PaymentProvider)
	*p = x
	return p
}

func (x PaymentProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_payments_models_proto_enumTypes[1].Descriptor()
}

func (PaymentProvider) Type() protoreflect.EnumType {
	return &file_com_gastroflow_payments_models_proto_enumTypes[1]
}

func (x PaymentProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentProvider.Descriptor instead.
func (PaymentProvider) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{1}
}

// CardType - тип банковской карты
type CardType int32

const (
	CardType_CARD_TYPE_UNSPECIFIED CardType = 0
	CardType_CARD_TYPE_VISA        CardType = 1 // Visa
	CardType_CARD_TYPE_MASTERCARD  CardType = 2 // Mastercard
	CardType_CARD_TYPE_MIR         CardType = 3 // МИР
	CardType_CARD_TYPE_AMEX        CardType = 4 // American Express
	CardType_CARD_TYPE_DISCOVER    CardType = 5 // Discover
	CardType_CARD_TYPE_UNIONPAY    CardType = 6 // UnionPay
	CardType_CARD_TYPE_JCB         CardType = 7 // JCB
	CardType_CARD_TYPE_DINERS      CardType = 8 // Diners Club
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0: "CARD_TYPE_UNSPECIFIED",
		1: "CARD_TYPE_VISA",
		2: "CARD_TYPE_MASTERCARD",
		3: "CARD_TYPE_MIR",
		4: "CARD_TYPE_AMEX",
		5: "CARD_TYPE_DISCOVER",
		6: "CARD_TYPE_UNIONPAY",
		7: "CARD_TYPE_JCB",
		8: "CARD_TYPE_DINERS",
	}
	CardType_value = map[string]int32{
		"CARD_TYPE_UNSPECIFIED": 0,
		"CARD_TYPE_VISA":        1,
		"CARD_TYPE_MASTERCARD":  2,
		"CARD_TYPE_MIR":         3,
		"CARD_TYPE_AMEX":        4,
		"CARD_TYPE_DISCOVER":    5,
		"CARD_TYPE_UNIONPAY":    6,
		"CARD_TYPE_JCB":         7,
		"CARD_TYPE_DINERS":      8,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_payments_models_proto_enumTypes[2].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_com_gastroflow_payments_models_proto_enumTypes[2]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{2}
}

// WalletType - тип электронного кошелька
type WalletType int32

const (
	WalletType_WALLET_TYPE_UNSPECIFIED  WalletType = 0
	WalletType_WALLET_TYPE_YANDEX_MONEY WalletType = 1 // Яндекс.Деньги
	WalletType_WALLET_TYPE_QIWI         WalletType = 2 // QIWI
	WalletType_WALLET_TYPE_WEBMONEY     WalletType = 3 // WebMoney
	WalletType_WALLET_TYPE_APPLE_PAY    WalletType = 4 // Apple Pay
	WalletType_WALLET_TYPE_GOOGLE_PAY   WalletType = 5 // Google Pay
	WalletType_WALLET_TYPE_SAMSUNG_PAY  WalletType = 6 // Samsung Pay
	WalletType_WALLET_TYPE_SBP          WalletType = 7 // Система быстрых платежей
)

// Enum value maps for WalletType.
var (
	WalletType_name = map[int32]string{
		0: "WALLET_TYPE_UNSPECIFIED",
		1: "WALLET_TYPE_YANDEX_MONEY",
		2: "WALLET_TYPE_QIWI",
		3: "WALLET_TYPE_WEBMONEY",
		4: "WALLET_TYPE_APPLE_PAY",
		5: "WALLET_TYPE_GOOGLE_PAY",
		6: "WALLET_TYPE_SAMSUNG_PAY",
		7: "WALLET_TYPE_SBP",
	}
	WalletType_value = map[string]int32{
		"WALLET_TYPE_UNSPECIFIED":  0,
		"WALLET_TYPE_YANDEX_MONEY": 1,
		"WALLET_TYPE_QIWI":         2,
		"WALLET_TYPE_WEBMONEY":     3,
		"WALLET_TYPE_APPLE_PAY":    4,
		"WALLET_TYPE_GOOGLE_PAY":   5,
		"WALLET_TYPE_SAMSUNG_PAY":  6,
		"WALLET_TYPE_SBP":          7,
	}
)

func (x WalletType) Enum() *WalletType {
	p := new(WalletType)
	*p = x
	return p
}

func (x WalletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_payments_models_proto_enumTypes[3].Descriptor()
}

func (WalletType) Type() protoreflect.EnumType {
	return &file_com_gastroflow_payments_models_proto_enumTypes[3]
}

func (x WalletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletType.Descriptor instead.
func (WalletType) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{3}
}

// RefundReason - причина возврата
type RefundReason int32

const (
	RefundReason_REFUND_REASON_UNSPECIFIED       RefundReason = 0
	RefundReason_REFUND_REASON_CUSTOMER_REQUEST  RefundReason = 1 // По запросу клиента
	RefundReason_REFUND_REASON_ORDER_CANCELLED   RefundReason = 2 // Заказ отменен
	RefundReason_REFUND_REASON_DUPLICATE_PAYMENT RefundReason = 3 // Дублирующий платеж
	RefundReason_REFUND_REASON_FRAUDULENT        RefundReason = 4 // Мошенничество
	RefundReason_REFUND_REASON_SYSTEM_ERROR      RefundReason = 5 // Системная ошибка
	RefundReason_REFUND_REASON_QUALITY_ISSUES    RefundReason = 6 // Проблемы с качеством
	RefundReason_REFUND_REASON_OTHER             RefundReason = 7 // Другая причина
)

// Enum value maps for RefundReason.
var (
	RefundReason_name = map[int32]string{
		0: "REFUND_REASON_UNSPECIFIED",
		1: "REFUND_REASON_CUSTOMER_REQUEST",
		2: "REFUND_REASON_ORDER_CANCELLED",
		3: "REFUND_REASON_DUPLICATE_PAYMENT",
		4: "REFUND_REASON_FRAUDULENT",
		5: "REFUND_REASON_SYSTEM_ERROR",
		6: "REFUND_REASON_QUALITY_ISSUES",
		7: "REFUND_REASON_OTHER",
	}
	RefundReason_value = map[string]int32{
		"REFUND_REASON_UNSPECIFIED":       0,
		"REFUND_REASON_CUSTOMER_REQUEST":  1,
		"REFUND_REASON_ORDER_CANCELLED":   2,
		"REFUND_REASON_DUPLICATE_PAYMENT": 3,
		"REFUND_REASON_FRAUDULENT":        4,
		"REFUND_REASON_SYSTEM_ERROR":      5,
		"REFUND_REASON_QUALITY_ISSUES":    6,
		"REFUND_REASON_OTHER":             7,
	}
)

func (x RefundReason) Enum() *RefundReason {
	p := new(RefundReason)
	*p = x
	return p
}

func (x RefundReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefundReason) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_payments_models_proto_enumTypes[4].Descriptor()
}

func (RefundReason) Type() protoreflect.EnumType {
	return &file_com_gastroflow_payments_models_proto_enumTypes[4]
}

func (x RefundReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefundReason.Descriptor instead.
func (RefundReason) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{4}
}

// RefundStatus - статус возврата
type RefundStatus int32

const (
	RefundStatus_REFUND_STATUS_UNSPECIFIED RefundStatus = 0
	RefundStatus_REFUND_STATUS_PENDING     RefundStatus = 1 // Ожидает обработки
	RefundStatus_REFUND_STATUS_PROCESSING  RefundStatus = 2 // Обрабатывается
	RefundStatus_REFUND_STATUS_SUCCEEDED   RefundStatus = 3 // Успешно завершен
	RefundStatus_REFUND_STATUS_FAILED      RefundStatus = 4 // Не удался
	RefundStatus_REFUND_STATUS_CANCELLED   RefundStatus = 5 // Отменен
)

// Enum value maps for RefundStatus.
var (
	RefundStatus_name = map[int32]string{
		0: "REFUND_STATUS_UNSPECIFIED",
		1: "REFUND_STATUS_PENDING",
		2: "REFUND_STATUS_PROCESSING",
		3: "REFUND_STATUS_SUCCEEDED",
		4: "REFUND_STATUS_FAILED",
		5: "REFUND_STATUS_CANCELLED",
	}
	RefundStatus_value = map[string]int32{
		"REFUND_STATUS_UNSPECIFIED": 0,
		"REFUND_STATUS_PENDING":     1,
		"REFUND_STATUS_PROCESSING":  2,
		"REFUND_STATUS_SUCCEEDED":   3,
		"REFUND_STATUS_FAILED":      4,
		"REFUND_STATUS_CANCELLED":   5,
	}
)

func (x RefundStatus) Enum() *RefundStatus {
	p := new(RefundStatus)
	*p = x
	return p
}

func (x RefundStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefundStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_com_gastroflow_payments_models_proto_enumTypes[5].Descriptor()
}

func (RefundStatus) Type() protoreflect.EnumType {
	return &file_com_gastroflow_payments_models_proto_enumTypes[5]
}

func (x RefundStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefundStatus.Descriptor instead.
func (RefundStatus) EnumDescriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{5}
}

// Payment - платеж в системе
type Payment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор платежа
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Идентификатор плательщика
	PayerId *common.UUID `protobuf:"bytes,3,opt,name=payer_id,json=payerId,proto3" json:"payer_id,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,4,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Сумма платежа
	Amount *common.Money `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	// Способ оплаты
	Method common.PaymentMethod `protobuf:"varint,6,opt,name=method,proto3,enum=com.gastroflow.common.PaymentMethod" json:"method,omitempty"`
	// Статус платежа
	Status PaymentStatus `protobuf:"varint,7,opt,name=status,proto3,enum=com.gastroflow.payments.PaymentStatus" json:"status,omitempty"`
	// Поставщик платежей
	Provider PaymentProvider `protobuf:"varint,8,opt,name=provider,proto3,enum=com.gastroflow.payments.PaymentProvider" json:"provider,omitempty"`
	// Внешний идентификатор платежа у поставщика
	ExternalPaymentId string `protobuf:"bytes,9,opt,name=external_payment_id,json=externalPaymentId,proto3" json:"external_payment_id,omitempty"`
	// Описание платежа
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// Время создания платежа
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Время обработки платежа
	ProcessedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	// Время истечения платежа
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Детали платежа
	Details *PaymentDetails `protobuf:"bytes,14,opt,name=details,proto3" json:"details,omitempty"`
	// История изменений статуса
	StatusHistory []*PaymentStatusHistory `protobuf:"bytes,15,rep,name=status_history,json=statusHistory,proto3" json:"status_history,omitempty"`
	// Комиссия за платеж
	Fee *common.Money `protobuf:"bytes,16,opt,name=fee,proto3" json:"fee,omitempty"`
	// Чистая сумма (после вычета комиссии)
	NetAmount *common.Money `protobuf:"bytes,17,opt,name=net_amount,json=netAmount,proto3" json:"net_amount,omitempty"`
	// Детали ошибки (если есть)
	Error *PaymentError `protobuf:"bytes,18,opt,name=error,proto3" json:"error,omitempty"`
	// IP адрес клиента
	ClientIp string `protobuf:"bytes,19,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	// Информация об устройстве клиента
	UserAgent string `protobuf:"bytes,20,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// Дополнительные метаданные
	Metadata map[string]string `protobuf:"bytes,21,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,22,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payment) Reset() {
	*x = Payment{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{0}
}

func (x *Payment) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Payment) GetPayerId() *common.UUID {
	if x != nil {
		return x.PayerId
	}
	return nil
}

func (x *Payment) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *Payment) GetAmount() *common.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Payment) GetMethod() common.PaymentMethod {
	if x != nil {
		return x.Method
	}
	return common.PaymentMethod(0)
}

func (x *Payment) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *Payment) GetProvider() PaymentProvider {
	if x != nil {
		return x.Provider
	}
	return PaymentProvider_PAYMENT_PROVIDER_UNSPECIFIED
}

func (x *Payment) GetExternalPaymentId() string {
	if x != nil {
		return x.ExternalPaymentId
	}
	return ""
}

func (x *Payment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Payment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Payment) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *Payment) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Payment) GetDetails() *PaymentDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Payment) GetStatusHistory() []*PaymentStatusHistory {
	if x != nil {
		return x.StatusHistory
	}
	return nil
}

func (x *Payment) GetFee() *common.Money {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Payment) GetNetAmount() *common.Money {
	if x != nil {
		return x.NetAmount
	}
	return nil
}

func (x *Payment) GetError() *PaymentError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Payment) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *Payment) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Payment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Payment) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// PaymentDetails - детали платежа
type PaymentDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Детали карточной оплаты
	CardDetails *CardDetails `protobuf:"bytes,1,opt,name=card_details,json=cardDetails,proto3" json:"card_details,omitempty"`
	// Детали банковского перевода
	BankTransferDetails *BankTransferDetails `protobuf:"bytes,2,opt,name=bank_transfer_details,json=bankTransferDetails,proto3" json:"bank_transfer_details,omitempty"`
	// Детали электронного кошелька
	WalletDetails *WalletDetails `protobuf:"bytes,3,opt,name=wallet_details,json=walletDetails,proto3" json:"wallet_details,omitempty"`
	// Детали наличной оплаты
	CashDetails *CashDetails `protobuf:"bytes,4,opt,name=cash_details,json=cashDetails,proto3" json:"cash_details,omitempty"`
	// URL для подтверждения платежа
	ConfirmationUrl string `protobuf:"bytes,5,opt,name=confirmation_url,json=confirmationUrl,proto3" json:"confirmation_url,omitempty"`
	// Токен для повторной оплаты
	RecurringToken string `protobuf:"bytes,6,opt,name=recurring_token,json=recurringToken,proto3" json:"recurring_token,omitempty"`
	// 3D Secure данные
	ThreeDSecure  *ThreeDSecureDetails `protobuf:"bytes,7,opt,name=three_d_secure,json=threeDSecure,proto3" json:"three_d_secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentDetails) Reset() {
	*x = PaymentDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentDetails) ProtoMessage() {}

func (x *PaymentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentDetails.ProtoReflect.Descriptor instead.
func (*PaymentDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentDetails) GetCardDetails() *CardDetails {
	if x != nil {
		return x.CardDetails
	}
	return nil
}

func (x *PaymentDetails) GetBankTransferDetails() *BankTransferDetails {
	if x != nil {
		return x.BankTransferDetails
	}
	return nil
}

func (x *PaymentDetails) GetWalletDetails() *WalletDetails {
	if x != nil {
		return x.WalletDetails
	}
	return nil
}

func (x *PaymentDetails) GetCashDetails() *CashDetails {
	if x != nil {
		return x.CashDetails
	}
	return nil
}

func (x *PaymentDetails) GetConfirmationUrl() string {
	if x != nil {
		return x.ConfirmationUrl
	}
	return ""
}

func (x *PaymentDetails) GetRecurringToken() string {
	if x != nil {
		return x.RecurringToken
	}
	return ""
}

func (x *PaymentDetails) GetThreeDSecure() *ThreeDSecureDetails {
	if x != nil {
		return x.ThreeDSecure
	}
	return nil
}

// CardDetails - детали карточной оплаты
type CardDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Замаскированный номер карты
	MaskedPan string `protobuf:"bytes,1,opt,name=masked_pan,json=maskedPan,proto3" json:"masked_pan,omitempty"`
	// Тип карты
	CardType CardType `protobuf:"varint,2,opt,name=card_type,json=cardType,proto3,enum=com.gastroflow.payments.CardType" json:"card_type,omitempty"`
	// Банк-эмитент
	IssuerBank string `protobuf:"bytes,3,opt,name=issuer_bank,json=issuerBank,proto3" json:"issuer_bank,omitempty"`
	// Страна эмиссии
	IssuerCountry string `protobuf:"bytes,4,opt,name=issuer_country,json=issuerCountry,proto3" json:"issuer_country,omitempty"`
	// Последние 4 цифры карты
	LastFourDigits string `protobuf:"bytes,5,opt,name=last_four_digits,json=lastFourDigits,proto3" json:"last_four_digits,omitempty"`
	// Месяц истечения
	ExpMonth int32 `protobuf:"varint,6,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	// Год истечения
	ExpYear int32 `protobuf:"varint,7,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	// Код авторизации
	AuthCode string `protobuf:"bytes,8,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
	// RRN (Reference Retrieval Number)
	Rrn           string `protobuf:"bytes,9,opt,name=rrn,proto3" json:"rrn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardDetails) Reset() {
	*x = CardDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDetails) ProtoMessage() {}

func (x *CardDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDetails.ProtoReflect.Descriptor instead.
func (*CardDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{2}
}

func (x *CardDetails) GetMaskedPan() string {
	if x != nil {
		return x.MaskedPan
	}
	return ""
}

func (x *CardDetails) GetCardType() CardType {
	if x != nil {
		return x.CardType
	}
	return CardType_CARD_TYPE_UNSPECIFIED
}

func (x *CardDetails) GetIssuerBank() string {
	if x != nil {
		return x.IssuerBank
	}
	return ""
}

func (x *CardDetails) GetIssuerCountry() string {
	if x != nil {
		return x.IssuerCountry
	}
	return ""
}

func (x *CardDetails) GetLastFourDigits() string {
	if x != nil {
		return x.LastFourDigits
	}
	return ""
}

func (x *CardDetails) GetExpMonth() int32 {
	if x != nil {
		return x.ExpMonth
	}
	return 0
}

func (x *CardDetails) GetExpYear() int32 {
	if x != nil {
		return x.ExpYear
	}
	return 0
}

func (x *CardDetails) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *CardDetails) GetRrn() string {
	if x != nil {
		return x.Rrn
	}
	return ""
}

// BankTransferDetails - детали банковского перевода
type BankTransferDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Название банка
	BankName string `protobuf:"bytes,1,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	// БИК банка
	Bik string `protobuf:"bytes,2,opt,name=bik,proto3" json:"bik,omitempty"`
	// Номер счета получателя
	AccountNumber string `protobuf:"bytes,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// Номер перевода
	TransferNumber string `protobuf:"bytes,4,opt,name=transfer_number,json=transferNumber,proto3" json:"transfer_number,omitempty"`
	// Назначение платежа
	Purpose       string `protobuf:"bytes,5,opt,name=purpose,proto3" json:"purpose,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BankTransferDetails) Reset() {
	*x = BankTransferDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankTransferDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankTransferDetails) ProtoMessage() {}

func (x *BankTransferDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankTransferDetails.ProtoReflect.Descriptor instead.
func (*BankTransferDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{3}
}

func (x *BankTransferDetails) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *BankTransferDetails) GetBik() string {
	if x != nil {
		return x.Bik
	}
	return ""
}

func (x *BankTransferDetails) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BankTransferDetails) GetTransferNumber() string {
	if x != nil {
		return x.TransferNumber
	}
	return ""
}

func (x *BankTransferDetails) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

// WalletDetails - детали электронного кошелька
type WalletDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Тип кошелька
	WalletType WalletType `protobuf:"varint,1,opt,name=wallet_type,json=walletType,proto3,enum=com.gastroflow.payments.WalletType" json:"wallet_type,omitempty"`
	// Идентификатор кошелька
	WalletId string `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	// Замаскированный номер телефона/email кошелька
	MaskedIdentifier string `protobuf:"bytes,3,opt,name=masked_identifier,json=maskedIdentifier,proto3" json:"masked_identifier,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WalletDetails) Reset() {
	*x = WalletDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletDetails) ProtoMessage() {}

func (x *WalletDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletDetails.ProtoReflect.Descriptor instead.
func (*WalletDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{4}
}

func (x *WalletDetails) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNSPECIFIED
}

func (x *WalletDetails) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *WalletDetails) GetMaskedIdentifier() string {
	if x != nil {
		return x.MaskedIdentifier
	}
	return ""
}

// CashDetails - детали наличной оплаты
type CashDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Сумма полученная наличными
	ReceivedAmount *common.Money `protobuf:"bytes,1,opt,name=received_amount,json=receivedAmount,proto3" json:"received_amount,omitempty"`
	// Сдача
	ChangeAmount *common.Money `protobuf:"bytes,2,opt,name=change_amount,json=changeAmount,proto3" json:"change_amount,omitempty"`
	// Идентификатор кассира
	CashierId *common.UUID `protobuf:"bytes,3,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	// Номер чека
	ReceiptNumber string `protobuf:"bytes,4,opt,name=receipt_number,json=receiptNumber,proto3" json:"receipt_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashDetails) Reset() {
	*x = CashDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashDetails) ProtoMessage() {}

func (x *CashDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashDetails.ProtoReflect.Descriptor instead.
func (*CashDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{5}
}

func (x *CashDetails) GetReceivedAmount() *common.Money {
	if x != nil {
		return x.ReceivedAmount
	}
	return nil
}

func (x *CashDetails) GetChangeAmount() *common.Money {
	if x != nil {
		return x.ChangeAmount
	}
	return nil
}

func (x *CashDetails) GetCashierId() *common.UUID {
	if x != nil {
		return x.CashierId
	}
	return nil
}

func (x *CashDetails) GetReceiptNumber() string {
	if x != nil {
		return x.ReceiptNumber
	}
	return ""
}

// ThreeDSecureDetails - детали 3D Secure
type ThreeDSecureDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Применялся ли 3D Secure
	Applied bool `protobuf:"varint,1,opt,name=applied,proto3" json:"applied,omitempty"`
	// Статус аутентификации
	AuthStatus string `protobuf:"bytes,2,opt,name=auth_status,json=authStatus,proto3" json:"auth_status,omitempty"`
	// ECI (Electronic Commerce Indicator)
	Eci string `protobuf:"bytes,3,opt,name=eci,proto3" json:"eci,omitempty"`
	// XID транзакции
	Xid           string `protobuf:"bytes,4,opt,name=xid,proto3" json:"xid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreeDSecureDetails) Reset() {
	*x = ThreeDSecureDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreeDSecureDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreeDSecureDetails) ProtoMessage() {}

func (x *ThreeDSecureDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreeDSecureDetails.ProtoReflect.Descriptor instead.
func (*ThreeDSecureDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{6}
}

func (x *ThreeDSecureDetails) GetApplied() bool {
	if x != nil {
		return x.Applied
	}
	return false
}

func (x *ThreeDSecureDetails) GetAuthStatus() string {
	if x != nil {
		return x.AuthStatus
	}
	return ""
}

func (x *ThreeDSecureDetails) GetEci() string {
	if x != nil {
		return x.Eci
	}
	return ""
}

func (x *ThreeDSecureDetails) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

// PaymentStatusHistory - история изменений статуса
type PaymentStatusHistory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Предыдущий статус
	FromStatus PaymentStatus `protobuf:"varint,1,opt,name=from_status,json=fromStatus,proto3,enum=com.gastroflow.payments.PaymentStatus" json:"from_status,omitempty"`
	// Новый статус
	ToStatus PaymentStatus `protobuf:"varint,2,opt,name=to_status,json=toStatus,proto3,enum=com.gastroflow.payments.PaymentStatus" json:"to_status,omitempty"`
	// Время изменения
	ChangedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=changed_at,json=changedAt,proto3" json:"changed_at,omitempty"`
	// Причина изменения
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	// Дополнительная информация
	Details       string `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentStatusHistory) Reset() {
	*x = PaymentStatusHistory{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentStatusHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentStatusHistory) ProtoMessage() {}

func (x *PaymentStatusHistory) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentStatusHistory.ProtoReflect.Descriptor instead.
func (*PaymentStatusHistory) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentStatusHistory) GetFromStatus() PaymentStatus {
	if x != nil {
		return x.FromStatus
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *PaymentStatusHistory) GetToStatus() PaymentStatus {
	if x != nil {
		return x.ToStatus
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *PaymentStatusHistory) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

func (x *PaymentStatusHistory) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PaymentStatusHistory) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// PaymentError - информация об ошибке платежа
type PaymentError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Код ошибки
	ErrorCode string `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// Описание ошибки
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Детали ошибки от поставщика
	ProviderErrorCode string `protobuf:"bytes,3,opt,name=provider_error_code,json=providerErrorCode,proto3" json:"provider_error_code,omitempty"`
	// Сообщение от поставщика
	ProviderErrorMessage string `protobuf:"bytes,4,opt,name=provider_error_message,json=providerErrorMessage,proto3" json:"provider_error_message,omitempty"`
	// Можно ли повторить попытку
	IsRetryable bool `protobuf:"varint,5,opt,name=is_retryable,json=isRetryable,proto3" json:"is_retryable,omitempty"`
	// Рекомендуемое время следующей попытки
	RetryAfter    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=retry_after,json=retryAfter,proto3" json:"retry_after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentError) Reset() {
	*x = PaymentError{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentError) ProtoMessage() {}

func (x *PaymentError) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentError.ProtoReflect.Descriptor instead.
func (*PaymentError) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentError) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *PaymentError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *PaymentError) GetProviderErrorCode() string {
	if x != nil {
		return x.ProviderErrorCode
	}
	return ""
}

func (x *PaymentError) GetProviderErrorMessage() string {
	if x != nil {
		return x.ProviderErrorMessage
	}
	return ""
}

func (x *PaymentError) GetIsRetryable() bool {
	if x != nil {
		return x.IsRetryable
	}
	return false
}

func (x *PaymentError) GetRetryAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.RetryAfter
	}
	return nil
}

// Refund - возврат средств
type Refund struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор возврата
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Идентификатор исходного платежа
	PaymentId *common.UUID `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Сумма возврата
	Amount *common.Money `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// Причина возврата
	Reason RefundReason `protobuf:"varint,4,opt,name=reason,proto3,enum=com.gastroflow.payments.RefundReason" json:"reason,omitempty"`
	// Статус возврата
	Status RefundStatus `protobuf:"varint,5,opt,name=status,proto3,enum=com.gastroflow.payments.RefundStatus" json:"status,omitempty"`
	// Описание возврата
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Внешний идентификатор возврата
	ExternalRefundId string `protobuf:"bytes,7,opt,name=external_refund_id,json=externalRefundId,proto3" json:"external_refund_id,omitempty"`
	// Время создания возврата
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Время обработки возврата
	ProcessedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	// Комиссия за возврат
	Fee *common.Money `protobuf:"bytes,10,opt,name=fee,proto3" json:"fee,omitempty"`
	// Детали ошибки (если есть)
	Error *PaymentError `protobuf:"bytes,11,opt,name=error,proto3" json:"error,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,12,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Refund) Reset() {
	*x = Refund{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{9}
}

func (x *Refund) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Refund) GetPaymentId() *common.UUID {
	if x != nil {
		return x.PaymentId
	}
	return nil
}

func (x *Refund) GetAmount() *common.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Refund) GetReason() RefundReason {
	if x != nil {
		return x.Reason
	}
	return RefundReason_REFUND_REASON_UNSPECIFIED
}

func (x *Refund) GetStatus() RefundStatus {
	if x != nil {
		return x.Status
	}
	return RefundStatus_REFUND_STATUS_UNSPECIFIED
}

func (x *Refund) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Refund) GetExternalRefundId() string {
	if x != nil {
		return x.ExternalRefundId
	}
	return ""
}

func (x *Refund) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Refund) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *Refund) GetFee() *common.Money {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Refund) GetError() *PaymentError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Refund) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// PaymentMethod - сохраненный способ оплаты
type PaymentMethodInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор способа оплаты
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Идентификатор пользователя
	UserId *common.UUID `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Тип способа оплаты
	Type common.PaymentMethod `protobuf:"varint,3,opt,name=type,proto3,enum=com.gastroflow.common.PaymentMethod" json:"type,omitempty"`
	// Токен для повторного использования
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// Детали способа оплаты (замаскированные)
	Details *PaymentMethodDetails `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	// Способ оплаты по умолчанию
	IsDefault bool `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	// Активность способа оплаты
	IsActive bool `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Время создания
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Время последнего использования
	LastUsedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_used_at,json=lastUsedAt,proto3" json:"last_used_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentMethodInfo) Reset() {
	*x = PaymentMethodInfo{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentMethodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodInfo) ProtoMessage() {}

func (x *PaymentMethodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodInfo.ProtoReflect.Descriptor instead.
func (*PaymentMethodInfo) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{10}
}

func (x *PaymentMethodInfo) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PaymentMethodInfo) GetUserId() *common.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *PaymentMethodInfo) GetType() common.PaymentMethod {
	if x != nil {
		return x.Type
	}
	return common.PaymentMethod(0)
}

func (x *PaymentMethodInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PaymentMethodInfo) GetDetails() *PaymentMethodDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *PaymentMethodInfo) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *PaymentMethodInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *PaymentMethodInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PaymentMethodInfo) GetLastUsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsedAt
	}
	return nil
}

// PaymentMethodDetails - детали сохраненного способа оплаты
type PaymentMethodDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Детали карты
	Card *SavedCardDetails `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// Детали кошелька
	Wallet        *SavedWalletDetails `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentMethodDetails) Reset() {
	*x = PaymentMethodDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentMethodDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodDetails) ProtoMessage() {}

func (x *PaymentMethodDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodDetails.ProtoReflect.Descriptor instead.
func (*PaymentMethodDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{11}
}

func (x *PaymentMethodDetails) GetCard() *SavedCardDetails {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *PaymentMethodDetails) GetWallet() *SavedWalletDetails {
	if x != nil {
		return x.Wallet
	}
	return nil
}

// SavedCardDetails - сохраненные детали карты
type SavedCardDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Замаскированный номер карты
	MaskedPan string `protobuf:"bytes,1,opt,name=masked_pan,json=maskedPan,proto3" json:"masked_pan,omitempty"`
	// Тип карты
	CardType CardType `protobuf:"varint,2,opt,name=card_type,json=cardType,proto3,enum=com.gastroflow.payments.CardType" json:"card_type,omitempty"`
	// Месяц истечения
	ExpMonth int32 `protobuf:"varint,3,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	// Год истечения
	ExpYear int32 `protobuf:"varint,4,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	// Банк-эмитент
	IssuerBank    string `protobuf:"bytes,5,opt,name=issuer_bank,json=issuerBank,proto3" json:"issuer_bank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SavedCardDetails) Reset() {
	*x = SavedCardDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedCardDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedCardDetails) ProtoMessage() {}

func (x *SavedCardDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedCardDetails.ProtoReflect.Descriptor instead.
func (*SavedCardDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{12}
}

func (x *SavedCardDetails) GetMaskedPan() string {
	if x != nil {
		return x.MaskedPan
	}
	return ""
}

func (x *SavedCardDetails) GetCardType() CardType {
	if x != nil {
		return x.CardType
	}
	return CardType_CARD_TYPE_UNSPECIFIED
}

func (x *SavedCardDetails) GetExpMonth() int32 {
	if x != nil {
		return x.ExpMonth
	}
	return 0
}

func (x *SavedCardDetails) GetExpYear() int32 {
	if x != nil {
		return x.ExpYear
	}
	return 0
}

func (x *SavedCardDetails) GetIssuerBank() string {
	if x != nil {
		return x.IssuerBank
	}
	return ""
}

// SavedWalletDetails - сохраненные детали кошелька
type SavedWalletDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Тип кошелька
	WalletType WalletType `protobuf:"varint,1,opt,name=wallet_type,json=walletType,proto3,enum=com.gastroflow.payments.WalletType" json:"wallet_type,omitempty"`
	// Замаскированный идентификатор
	MaskedIdentifier string `protobuf:"bytes,2,opt,name=masked_identifier,json=maskedIdentifier,proto3" json:"masked_identifier,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SavedWalletDetails) Reset() {
	*x = SavedWalletDetails{}
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedWalletDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedWalletDetails) ProtoMessage() {}

func (x *SavedWalletDetails) ProtoReflect() protoreflect.Message {
	mi := &file_com_gastroflow_payments_models_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedWalletDetails.ProtoReflect.Descriptor instead.
func (*SavedWalletDetails) Descriptor() ([]byte, []int) {
	return file_com_gastroflow_payments_models_proto_rawDescGZIP(), []int{13}
}

func (x *SavedWalletDetails) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNSPECIFIED
}

func (x *SavedWalletDetails) GetMaskedIdentifier() string {
	if x != nil {
		return x.MaskedIdentifier
	}
	return ""
}

var File_com_gastroflow_payments_models_proto protoreflect.FileDescriptor

const file_com_gastroflow_payments_models_proto_rawDesc = "" +
	"\n" +
	"$com/gastroflow/payments/models.proto\x12\x17com.gastroflow.payments\x1a!com/gastroflow/common/enums.proto\x1a!com/gastroflow/common/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfa\t\n" +
	"\aPayment\x12+\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x02id\x126\n" +
	"\bpayer_id\x18\x03 \x01(\v2\x1b.com.gastroflow.common.UUIDR\apayerId\x12@\n" +
	"\rrestaurant_id\x18\x04 \x01(\v2\x1b.com.gastroflow.common.UUIDR\frestaurantId\x124\n" +
	"\x06amount\x18\x05 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x06amount\x12<\n" +
	"\x06method\x18\x06 \x01(\x0e2$.com.gastroflow.common.PaymentMethodR\x06method\x12>\n" +
	"\x06status\x18\a \x01(\x0e2&.com.gastroflow.payments.PaymentStatusR\x06status\x12D\n" +
	"\bprovider\x18\b \x01(\x0e2(.com.gastroflow.payments.PaymentProviderR\bprovider\x12.\n" +
	"\x13external_payment_id\x18\t \x01(\tR\x11externalPaymentId\x12 \n" +
	"\vdescription\x18\n" +
	" \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fprocessed_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x129\n" +
	"\n" +
	"expires_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12A\n" +
	"\adetails\x18\x0e \x01(\v2'.com.gastroflow.payments.PaymentDetailsR\adetails\x12T\n" +
	"\x0estatus_history\x18\x0f \x03(\v2-.com.gastroflow.payments.PaymentStatusHistoryR\rstatusHistory\x12.\n" +
	"\x03fee\x18\x10 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x03fee\x12;\n" +
	"\n" +
	"net_amount\x18\x11 \x01(\v2\x1c.com.gastroflow.common.MoneyR\tnetAmount\x12;\n" +
	"\x05error\x18\x12 \x01(\v2%.com.gastroflow.payments.PaymentErrorR\x05error\x12\x1b\n" +
	"\tclient_ip\x18\x13 \x01(\tR\bclientIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x14 \x01(\tR\tuserAgent\x12J\n" +
	"\bmetadata\x18\x15 \x03(\v2..com.gastroflow.payments.Payment.MetadataEntryR\bmetadata\x12?\n" +
	"\n" +
	"audit_info\x18\x16 \x01(\v2 .com.gastroflow.common.AuditInfoR\tauditInfo\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfb\x03\n" +
	"\x0ePaymentDetails\x12G\n" +
	"\fcard_details\x18\x01 \x01(\v2$.com.gastroflow.payments.CardDetailsR\vcardDetails\x12`\n" +
	"\x15bank_transfer_details\x18\x02 \x01(\v2,.com.gastroflow.payments.BankTransferDetailsR\x13bankTransferDetails\x12M\n" +
	"\x0ewallet_details\x18\x03 \x01(\v2&.com.gastroflow.payments.WalletDetailsR\rwalletDetails\x12G\n" +
	"\fcash_details\x18\x04 \x01(\v2$.com.gastroflow.payments.CashDetailsR\vcashDetails\x12)\n" +
	"\x10confirmation_url\x18\x05 \x01(\tR\x0fconfirmationUrl\x12'\n" +
	"\x0frecurring_token\x18\x06 \x01(\tR\x0erecurringToken\x12R\n" +
	"\x0ethree_d_secure\x18\a \x01(\v2,.com.gastroflow.payments.ThreeDSecureDetailsR\fthreeDSecure\"\xc5\x02\n" +
	"\vCardDetails\x12\x1d\n" +
	"\n" +
	"masked_pan\x18\x01 \x01(\tR\tmaskedPan\x12>\n" +
	"\tcard_type\x18\x02 \x01(\x0e2!.com.gastroflow.payments.CardTypeR\bcardType\x12\x1f\n" +
	"\vissuer_bank\x18\x03 \x01(\tR\n" +
	"issuerBank\x12%\n" +
	"\x0eissuer_country\x18\x04 \x01(\tR\rissuerCountry\x12(\n" +
	"\x10last_four_digits\x18\x05 \x01(\tR\x0elastFourDigits\x12\x1b\n" +
	"\texp_month\x18\x06 \x01(\x05R\bexpMonth\x12\x19\n" +
	"\bexp_year\x18\a \x01(\x05R\aexpYear\x12\x1b\n" +
	"\tauth_code\x18\b \x01(\tR\bauthCode\x12\x10\n" +
	"\x03rrn\x18\t \x01(\tR\x03rrn\"\xae\x01\n" +
	"\x13BankTransferDetails\x12\x1b\n" +
	"\tbank_name\x18\x01 \x01(\tR\bbankName\x12\x10\n" +
	"\x03bik\x18\x02 \x01(\tR\x03bik\x12%\n" +
	"\x0eaccount_number\x18\x03 \x01(\tR\raccountNumber\x12'\n" +
	"\x0ftransfer_number\x18\x04 \x01(\tR\x0etransferNumber\x12\x18\n" +
	"\apurpose\x18\x05 \x01(\tR\apurpose\"\x9f\x01\n" +
	"\rWalletDetails\x12D\n" +
	"\vwallet_type\x18\x01 \x01(\x0e2#.com.gastroflow.payments.WalletTypeR\n" +
	"walletType\x12\x1b\n" +
	"\twallet_id\x18\x02 \x01(\tR\bwalletId\x12+\n" +
	"\x11masked_identifier\x18\x03 \x01(\tR\x10maskedIdentifier\"\xfa\x01\n" +
	"\vCashDetails\x12E\n" +
	"\x0freceived_amount\x18\x01 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x0ereceivedAmount\x12A\n" +
	"\rchange_amount\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyR\fchangeAmount\x12:\n" +
	"\n" +
	"cashier_id\x18\x03 \x01(\v2\x1b.com.gastroflow.common.UUIDR\tcashierId\x12%\n" +
	"\x0ereceipt_number\x18\x04 \x01(\tR\rreceiptNumber\"t\n" +
	"\x13ThreeDSecureDetails\x12\x18\n" +
	"\aapplied\x18\x01 \x01(\bR\aapplied\x12\x1f\n" +
	"\vauth_status\x18\x02 \x01(\tR\n" +
	"authStatus\x12\x10\n" +
	"\x03eci\x18\x03 \x01(\tR\x03eci\x12\x10\n" +
	"\x03xid\x18\x04 \x01(\tR\x03xid\"\x91\x02\n" +
	"\x14PaymentStatusHistory\x12G\n" +
	"\vfrom_status\x18\x01 \x01(\x0e2&.com.gastroflow.payments.PaymentStatusR\n" +
	"fromStatus\x12C\n" +
	"\tto_status\x18\x02 \x01(\x0e2&.com.gastroflow.payments.PaymentStatusR\btoStatus\x129\n" +
	"\n" +
	"changed_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tchangedAt\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x18\n" +
	"\adetails\x18\x05 \x01(\tR\adetails\"\x98\x02\n" +
	"\fPaymentError\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12.\n" +
	"\x13provider_error_code\x18\x03 \x01(\tR\x11providerErrorCode\x124\n" +
	"\x16provider_error_message\x18\x04 \x01(\tR\x14providerErrorMessage\x12!\n" +
	"\fis_retryable\x18\x05 \x01(\bR\visRetryable\x12;\n" +
	"\vretry_after\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"retryAfter\"\x9d\x05\n" +
	"\x06Refund\x12+\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x02id\x12:\n" +
	"\n" +
	"payment_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDR\tpaymentId\x124\n" +
	"\x06amount\x18\x03 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x06amount\x12=\n" +
	"\x06reason\x18\x04 \x01(\x0e2%.com.gastroflow.payments.RefundReasonR\x06reason\x12=\n" +
	"\x06status\x18\x05 \x01(\x0e2%.com.gastroflow.payments.RefundStatusR\x06status\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12,\n" +
	"\x12external_refund_id\x18\a \x01(\tR\x10externalRefundId\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fprocessed_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x12.\n" +
	"\x03fee\x18\n" +
	" \x01(\v2\x1c.com.gastroflow.common.MoneyR\x03fee\x12;\n" +
	"\x05error\x18\v \x01(\v2%.com.gastroflow.payments.PaymentErrorR\x05error\x12?\n" +
	"\n" +
	"audit_info\x18\f \x01(\v2 .com.gastroflow.common.AuditInfoR\tauditInfo\"\xc4\x03\n" +
	"\x11PaymentMethodInfo\x12+\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x02id\x124\n" +
	"\auser_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDR\x06userId\x128\n" +
	"\x04type\x18\x03 \x01(\x0e2$.com.gastroflow.common.PaymentMethodR\x04type\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12G\n" +
	"\adetails\x18\x05 \x01(\v2-.com.gastroflow.payments.PaymentMethodDetailsR\adetails\x12\x1d\n" +
	"\n" +
	"is_default\x18\x06 \x01(\bR\tisDefault\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12<\n" +
	"\flast_used_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUsedAt\"\x9a\x01\n" +
	"\x14PaymentMethodDetails\x12=\n" +
	"\x04card\x18\x01 \x01(\v2).com.gastroflow.payments.SavedCardDetailsR\x04card\x12C\n" +
	"\x06wallet\x18\x02 \x01(\v2+.com.gastroflow.payments.SavedWalletDetailsR\x06wallet\"\xca\x01\n" +
	"\x10SavedCardDetails\x12\x1d\n" +
	"\n" +
	"masked_pan\x18\x01 \x01(\tR\tmaskedPan\x12>\n" +
	"\tcard_type\x18\x02 \x01(\x0e2!.com.gastroflow.payments.CardTypeR\bcardType\x12\x1b\n" +
	"\texp_month\x18\x03 \x01(\x05R\bexpMonth\x12\x19\n" +
	"\bexp_year\x18\x04 \x01(\x05R\aexpYear\x12\x1f\n" +
	"\vissuer_bank\x18\x05 \x01(\tR\n" +
	"issuerBank\"\x87\x01\n" +
	"\x12SavedWalletDetails\x12D\n" +
	"\vwallet_type\x18\x01 \x01(\x0e2#.com.gastroflow.payments.WalletTypeR\n" +
	"walletType\x12+\n" +
	"\x11masked_identifier\x18\x02 \x01(\tR\x10maskedIdentifier*\xc5\x02\n" +
	"\rPaymentStatus\x12\x1e\n" +
	"\x1aPAYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PAYMENT_STATUS_PENDING\x10\x01\x12\x1d\n" +
	"\x19PAYMENT_STATUS_PROCESSING\x10\x02\x12\"\n" +
	"\x1ePAYMENT_STATUS_REQUIRES_ACTION\x10\x03\x12\x1c\n" +
	"\x18PAYMENT_STATUS_SUCCEEDED\x10\x04\x12\x19\n" +
	"\x15PAYMENT_STATUS_FAILED\x10\x05\x12\x1c\n" +
	"\x18PAYMENT_STATUS_CANCELLED\x10\x06\x12\x1a\n" +
	"\x16PAYMENT_STATUS_EXPIRED\x10\a\x12\x1b\n" +
	"\x17PAYMENT_STATUS_REFUNDED\x10\b\x12%\n" +
	"!PAYMENT_STATUS_PARTIALLY_REFUNDED\x10\t*\xcf\x02\n" +
	"\x0fPaymentProvider\x12 \n" +
	"\x1cPAYMENT_PROVIDER_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PAYMENT_PROVIDER_STRIPE\x10\x01\x12$\n" +
	" PAYMENT_PROVIDER_YANDEX_CHECKOUT\x10\x02\x12\x1c\n" +
	"\x18PAYMENT_PROVIDER_TINKOFF\x10\x03\x12\x1d\n" +
	"\x19PAYMENT_PROVIDER_SBERBANK\x10\x04\x12\x1b\n" +
	"\x17PAYMENT_PROVIDER_PAYPAL\x10\x05\x12\x1e\n" +
	"\x1aPAYMENT_PROVIDER_ROBOKASSA\x10\x06\x12\"\n" +
	"\x1ePAYMENT_PROVIDER_CLOUDPAYMENTS\x10\a\x12\x1e\n" +
	"\x1aPAYMENT_PROVIDER_ACQUIRING\x10\b\x12\x19\n" +
	"\x15PAYMENT_PROVIDER_CASH\x10\t*\xd3\x01\n" +
	"\bCardType\x12\x19\n" +
	"\x15CARD_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eCARD_TYPE_VISA\x10\x01\x12\x18\n" +
	"\x14CARD_TYPE_MASTERCARD\x10\x02\x12\x11\n" +
	"\rCARD_TYPE_MIR\x10\x03\x12\x12\n" +
	"\x0eCARD_TYPE_AMEX\x10\x04\x12\x16\n" +
	"\x12CARD_TYPE_DISCOVER\x10\x05\x12\x16\n" +
	"\x12CARD_TYPE_UNIONPAY\x10\x06\x12\x11\n" +
	"\rCARD_TYPE_JCB\x10\a\x12\x14\n" +
	"\x10CARD_TYPE_DINERS\x10\b*\xe0\x01\n" +
	"\n" +
	"WalletType\x12\x1b\n" +
	"\x17WALLET_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18WALLET_TYPE_YANDEX_MONEY\x10\x01\x12\x14\n" +
	"\x10WALLET_TYPE_QIWI\x10\x02\x12\x18\n" +
	"\x14WALLET_TYPE_WEBMONEY\x10\x03\x12\x19\n" +
	"\x15WALLET_TYPE_APPLE_PAY\x10\x04\x12\x1a\n" +
	"\x16WALLET_TYPE_GOOGLE_PAY\x10\x05\x12\x1b\n" +
	"\x17WALLET_TYPE_SAMSUNG_PAY\x10\x06\x12\x13\n" +
	"\x0fWALLET_TYPE_SBP\x10\a*\x92\x02\n" +
	"\fRefundReason\x12\x1d\n" +
	"\x19REFUND_REASON_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eREFUND_REASON_CUSTOMER_REQUEST\x10\x01\x12!\n" +
	"\x1dREFUND_REASON_ORDER_CANCELLED\x10\x02\x12#\n" +
	"\x1fREFUND_REASON_DUPLICATE_PAYMENT\x10\x03\x12\x1c\n" +
	"\x18REFUND_REASON_FRAUDULENT\x10\x04\x12\x1e\n" +
	"\x1aREFUND_REASON_SYSTEM_ERROR\x10\x05\x12 \n" +
	"\x1cREFUND_REASON_QUALITY_ISSUES\x10\x06\x12\x17\n" +
	"\x13REFUND_REASON_OTHER\x10\a*\xba\x01\n" +
	"\fRefundStatus\x12\x1d\n" +
	"\x19REFUND_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15REFUND_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18REFUND_STATUS_PROCESSING\x10\x02\x12\x1b\n" +
	"\x17REFUND_STATUS_SUCCEEDED\x10\x03\x12\x18\n" +
	"\x14REFUND_STATUS_FAILED\x10\x04\x12\x1b\n" +
	"\x17REFUND_STATUS_CANCELLED\x10\x05B\xd1\x01\n" +
	"\x1bcom.com.gastroflow.paymentsB\vModelsProtoP\x01Z'github.com/gastroflow/proto-go/payments\xa2\x02\x03CGP\xaa\x02\x17Com.Gastroflow.Payments\xca\x02\x17Com\\Gastroflow\\Payments\xe2\x02#Com\\Gastroflow\\Payments\\GPBMetadata\xea\x02\x19Com::Gastroflow::Paymentsb\x06proto3"

var (
	file_com_gastroflow_payments_models_proto_rawDescOnce sync.Once
	file_com_gastroflow_payments_models_proto_rawDescData []byte
)

func file_com_gastroflow_payments_models_proto_rawDescGZIP() []byte {
	file_com_gastroflow_payments_models_proto_rawDescOnce.Do(func() {
		file_com_gastroflow_payments_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_gastroflow_payments_models_proto_rawDesc), len(file_com_gastroflow_payments_models_proto_rawDesc)))
	})
	return file_com_gastroflow_payments_models_proto_rawDescData
}

var file_com_gastroflow_payments_models_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_com_gastroflow_payments_models_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_com_gastroflow_payments_models_proto_goTypes = []any{
	(PaymentStatus)(0),            // 0: com.gastroflow.payments.PaymentStatus
	(PaymentProvider)(0),          // 1: com.gastroflow.payments.PaymentProvider
	(CardType)(0),                 // 2: com.gastroflow.payments.CardType
	(WalletType)(0),               // 3: com.gastroflow.payments.WalletType
	(RefundReason)(0),             // 4: com.gastroflow.payments.RefundReason
	(RefundStatus)(0),             // 5: com.gastroflow.payments.RefundStatus
	(*Payment)(nil),               // 6: com.gastroflow.payments.Payment
	(*PaymentDetails)(nil),        // 7: com.gastroflow.payments.PaymentDetails
	(*CardDetails)(nil),           // 8: com.gastroflow.payments.CardDetails
	(*BankTransferDetails)(nil),   // 9: com.gastroflow.payments.BankTransferDetails
	(*WalletDetails)(nil),         // 10: com.gastroflow.payments.WalletDetails
	(*CashDetails)(nil),           // 11: com.gastroflow.payments.CashDetails
	(*ThreeDSecureDetails)(nil),   // 12: com.gastroflow.payments.ThreeDSecureDetails
	(*PaymentStatusHistory)(nil),  // 13: com.gastroflow.payments.PaymentStatusHistory
	(*PaymentError)(nil),          // 14: com.gastroflow.payments.PaymentError
	(*Refund)(nil),                // 15: com.gastroflow.payments.Refund
	(*PaymentMethodInfo)(nil),     // 16: com.gastroflow.payments.PaymentMethodInfo
	(*PaymentMethodDetails)(nil),  // 17: com.gastroflow.payments.PaymentMethodDetails
	(*SavedCardDetails)(nil),      // 18: com.gastroflow.payments.SavedCardDetails
	(*SavedWalletDetails)(nil),    // 19: com.gastroflow.payments.SavedWalletDetails
	nil,                           // 20: com.gastroflow.payments.Payment.MetadataEntry
	(*common.UUID)(nil),           // 21: com.gastroflow.common.UUID
	(*common.Money)(nil),          // 22: com.gastroflow.common.Money
	(common.PaymentMethod)(0),     // 23: com.gastroflow.common.PaymentMethod
	(*timestamppb.Timestamp)(nil), // 24: google.protobuf.Timestamp
	(*common.AuditInfo)(nil),      // 25: com.gastroflow.common.AuditInfo
}
var file_com_gastroflow_payments_models_proto_depIdxs = []int32{
	21, // 0: com.gastroflow.payments.Payment.id:type_name -> com.gastroflow.common.UUID
	21, // 1: com.gastroflow.payments.Payment.payer_id:type_name -> com.gastroflow.common.UUID
	21, // 2: com.gastroflow.payments.Payment.restaurant_id:type_name -> com.gastroflow.common.UUID
	22, // 3: com.gastroflow.payments.Payment.amount:type_name -> com.gastroflow.common.Money
	23, // 4: com.gastroflow.payments.Payment.method:type_name -> com.gastroflow.common.PaymentMethod
	0,  // 5: com.gastroflow.payments.Payment.status:type_name -> com.gastroflow.payments.PaymentStatus
	1,  // 6: com.gastroflow.payments.Payment.provider:type_name -> com.gastroflow.payments.PaymentProvider
	24, // 7: com.gastroflow.payments.Payment.created_at:type_name -> google.protobuf.Timestamp
	24, // 8: com.gastroflow.payments.Payment.processed_at:type_name -> google.protobuf.Timestamp
	24, // 9: com.gastroflow.payments.Payment.expires_at:type_name -> google.protobuf.Timestamp
	7,  // 10: com.gastroflow.payments.Payment.details:type_name -> com.gastroflow.payments.PaymentDetails
	13, // 11: com.gastroflow.payments.Payment.status_history:type_name -> com.gastroflow.payments.PaymentStatusHistory
	22, // 12: com.gastroflow.payments.Payment.fee:type_name -> com.gastroflow.common.Money
	22, // 13: com.gastroflow.payments.Payment.net_amount:type_name -> com.gastroflow.common.Money
	14, // 14: com.gastroflow.payments.Payment.error:type_name -> com.gastroflow.payments.PaymentError
	20, // 15: com.gastroflow.payments.Payment.metadata:type_name -> com.gastroflow.payments.Payment.MetadataEntry
	25, // 16: com.gastroflow.payments.Payment.audit_info:type_name -> com.gastroflow.common.AuditInfo
	8,  // 17: com.gastroflow.payments.PaymentDetails.card_details:type_name -> com.gastroflow.payments.CardDetails
	9,  // 18: com.gastroflow.payments.PaymentDetails.bank_transfer_details:type_name -> com.gastroflow.payments.BankTransferDetails
	10, // 19: com.gastroflow.payments.PaymentDetails.wallet_details:type_name -> com.gastroflow.payments.WalletDetails
	11, // 20: com.gastroflow.payments.PaymentDetails.cash_details:type_name -> com.gastroflow.payments.CashDetails
	12, // 21: com.gastroflow.payments.PaymentDetails.three_d_secure:type_name -> com.gastroflow.payments.ThreeDSecureDetails
	2,  // 22: com.gastroflow.payments.CardDetails.card_type:type_name -> com.gastroflow.payments.CardType
	3,  // 23: com.gastroflow.payments.WalletDetails.wallet_type:type_name -> com.gastroflow.payments.WalletType
	22, // 24: com.gastroflow.payments.CashDetails.received_amount:type_name -> com.gastroflow.common.Money
	22, // 25: com.gastroflow.payments.CashDetails.change_amount:type_name -> com.gastroflow.common.Money
	21, // 26: com.gastroflow.payments.CashDetails.cashier_id:type_name -> com.gastroflow.common.UUID
	0,  // 27: com.gastroflow.payments.PaymentStatusHistory.from_status:type_name -> com.gastroflow.payments.PaymentStatus
	0,  // 28: com.gastroflow.payments.PaymentStatusHistory.to_status:type_name -> com.gastroflow.payments.PaymentStatus
	24, // 29: com.gastroflow.payments.PaymentStatusHistory.changed_at:type_name -> google.protobuf.Timestamp
	24, // 30: com.gastroflow.payments.PaymentError.retry_after:type_name -> google.protobuf.Timestamp
	21, // 31: com.gastroflow.payments.Refund.id:type_name -> com.gastroflow.common.UUID
	21, // 32: com.gastroflow.payments.Refund.payment_id:type_name -> com.gastroflow.common.UUID
	22, // 33: com.gastroflow.payments.Refund.amount:type_name -> com.gastroflow.common.Money
	4,  // 34: com.gastroflow.payments.Refund.reason:type_name -> com.gastroflow.payments.RefundReason
	5,  // 35: com.gastroflow.payments.Refund.status:type_name -> com.gastroflow.payments.RefundStatus
	24, // 36: com.gastroflow.payments.Refund.created_at:type_name -> google.protobuf.Timestamp
	24, // 37: com.gastroflow.payments.Refund.processed_at:type_name -> google.protobuf.Timestamp
	22, // 38: com.gastroflow.payments.Refund.fee:type_name -> com.gastroflow.common.Money
	14, // 39: com.gastroflow.payments.Refund.error:type_name -> com.gastroflow.payments.PaymentError
	25, // 40: com.gastroflow.payments.Refund.audit_info:type_name -> com.gastroflow.common.AuditInfo
	21, // 41: com.gastroflow.payments.PaymentMethodInfo.id:type_name -> com.gastroflow.common.UUID
	21, // 42: com.gastroflow.payments.PaymentMethodInfo.user_id:type_name -> com.gastroflow.common.UUID
	23, // 43: com.gastroflow.payments.PaymentMethodInfo.type:type_name -> com.gastroflow.common.PaymentMethod
	17, // 44: com.gastroflow.payments.PaymentMethodInfo.details:type_name -> com.gastroflow.payments.PaymentMethodDetails
	24, // 45: com.gastroflow.payments.PaymentMethodInfo.created_at:type_name -> google.protobuf.Timestamp
	24, // 46: com.gastroflow.payments.PaymentMethodInfo.last_used_at:type_name -> google.protobuf.Timestamp
	18, // 47: com.gastroflow.payments.PaymentMethodDetails.card:type_name -> com.gastroflow.payments.SavedCardDetails
	19, // 48: com.gastroflow.payments.PaymentMethodDetails.wallet:type_name -> com.gastroflow.payments.SavedWalletDetails
	2,  // 49: com.gastroflow.payments.SavedCardDetails.card_type:type_name -> com.gastroflow.payments.CardType
	3,  // 50: com.gastroflow.payments.SavedWalletDetails.wallet_type:type_name -> com.gastroflow.payments.WalletType
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_com_gastroflow_payments_models_proto_init() }
func file_com_gastroflow_payments_models_proto_init() {
	if File_com_gastroflow_payments_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_gastroflow_payments_models_proto_rawDesc), len(file_com_gastroflow_payments_models_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_gastroflow_payments_models_proto_goTypes,
		DependencyIndexes: file_com_gastroflow_payments_models_proto_depIdxs,
		EnumInfos:         file_com_gastroflow_payments_models_proto_enumTypes,
		MessageInfos:      file_com_gastroflow_payments_models_proto_msgTypes,
	}.Build()
	File_com_gastroflow_payments_models_proto = out.File
	file_com_gastroflow_payments_models_proto_goTypes = nil
	file_com_gastroflow_payments_models_proto_depIdxs = nil
}
