// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: inventory/models.proto

package inventory

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common "github.com/gastroflow/proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ItemCategory - категория товара
type ItemCategory int32

const (
	ItemCategory_ITEM_CATEGORY_UNSPECIFIED ItemCategory = 0
	ItemCategory_ITEM_CATEGORY_INGREDIENTS ItemCategory = 1  // Ингредиенты
	ItemCategory_ITEM_CATEGORY_MEAT        ItemCategory = 2  // Мясо
	ItemCategory_ITEM_CATEGORY_VEGETABLES  ItemCategory = 3  // Овощи
	ItemCategory_ITEM_CATEGORY_FRUITS      ItemCategory = 4  // Фрукты
	ItemCategory_ITEM_CATEGORY_DAIRY       ItemCategory = 5  // Молочные продукты
	ItemCategory_ITEM_CATEGORY_BEVERAGES   ItemCategory = 6  // Напитки
	ItemCategory_ITEM_CATEGORY_SPICES      ItemCategory = 7  // Специи и приправы
	ItemCategory_ITEM_CATEGORY_BAKERY      ItemCategory = 8  // Хлебобулочные изделия
	ItemCategory_ITEM_CATEGORY_FROZEN      ItemCategory = 9  // Замороженные продукты
	ItemCategory_ITEM_CATEGORY_CLEANING    ItemCategory = 10 // Средства для уборки
	ItemCategory_ITEM_CATEGORY_PACKAGING   ItemCategory = 11 // Упаковочные материалы
	ItemCategory_ITEM_CATEGORY_EQUIPMENT   ItemCategory = 12 // Оборудование
	ItemCategory_ITEM_CATEGORY_OTHER       ItemCategory = 13 // Прочее
)

// Enum value maps for ItemCategory.
var (
	ItemCategory_name = map[int32]string{
		0:  "ITEM_CATEGORY_UNSPECIFIED",
		1:  "ITEM_CATEGORY_INGREDIENTS",
		2:  "ITEM_CATEGORY_MEAT",
		3:  "ITEM_CATEGORY_VEGETABLES",
		4:  "ITEM_CATEGORY_FRUITS",
		5:  "ITEM_CATEGORY_DAIRY",
		6:  "ITEM_CATEGORY_BEVERAGES",
		7:  "ITEM_CATEGORY_SPICES",
		8:  "ITEM_CATEGORY_BAKERY",
		9:  "ITEM_CATEGORY_FROZEN",
		10: "ITEM_CATEGORY_CLEANING",
		11: "ITEM_CATEGORY_PACKAGING",
		12: "ITEM_CATEGORY_EQUIPMENT",
		13: "ITEM_CATEGORY_OTHER",
	}
	ItemCategory_value = map[string]int32{
		"ITEM_CATEGORY_UNSPECIFIED": 0,
		"ITEM_CATEGORY_INGREDIENTS": 1,
		"ITEM_CATEGORY_MEAT":        2,
		"ITEM_CATEGORY_VEGETABLES":  3,
		"ITEM_CATEGORY_FRUITS":      4,
		"ITEM_CATEGORY_DAIRY":       5,
		"ITEM_CATEGORY_BEVERAGES":   6,
		"ITEM_CATEGORY_SPICES":      7,
		"ITEM_CATEGORY_BAKERY":      8,
		"ITEM_CATEGORY_FROZEN":      9,
		"ITEM_CATEGORY_CLEANING":    10,
		"ITEM_CATEGORY_PACKAGING":   11,
		"ITEM_CATEGORY_EQUIPMENT":   12,
		"ITEM_CATEGORY_OTHER":       13,
	}
)

func (x ItemCategory) Enum() *ItemCategory {
	p := new(ItemCategory)
	*p = x
	return p
}

func (x ItemCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[0].Descriptor()
}

func (ItemCategory) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[0]
}

func (x ItemCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemCategory.Descriptor instead.
func (ItemCategory) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{0}
}

// MeasurementUnit - единица измерения
type MeasurementUnit int32

const (
	MeasurementUnit_MEASUREMENT_UNIT_UNSPECIFIED MeasurementUnit = 0
	MeasurementUnit_MEASUREMENT_UNIT_PIECE       MeasurementUnit = 1 // Штука
	MeasurementUnit_MEASUREMENT_UNIT_KILOGRAM    MeasurementUnit = 2 // Килограмм
	MeasurementUnit_MEASUREMENT_UNIT_GRAM        MeasurementUnit = 3 // Грамм
	MeasurementUnit_MEASUREMENT_UNIT_LITER       MeasurementUnit = 4 // Литр
	MeasurementUnit_MEASUREMENT_UNIT_MILLILITER  MeasurementUnit = 5 // Миллилитр
	MeasurementUnit_MEASUREMENT_UNIT_PACKAGE     MeasurementUnit = 6 // Упаковка
	MeasurementUnit_MEASUREMENT_UNIT_BOX         MeasurementUnit = 7 // Коробка
	MeasurementUnit_MEASUREMENT_UNIT_BOTTLE      MeasurementUnit = 8 // Бутылка
	MeasurementUnit_MEASUREMENT_UNIT_CAN         MeasurementUnit = 9 // Банка
)

// Enum value maps for MeasurementUnit.
var (
	MeasurementUnit_name = map[int32]string{
		0: "MEASUREMENT_UNIT_UNSPECIFIED",
		1: "MEASUREMENT_UNIT_PIECE",
		2: "MEASUREMENT_UNIT_KILOGRAM",
		3: "MEASUREMENT_UNIT_GRAM",
		4: "MEASUREMENT_UNIT_LITER",
		5: "MEASUREMENT_UNIT_MILLILITER",
		6: "MEASUREMENT_UNIT_PACKAGE",
		7: "MEASUREMENT_UNIT_BOX",
		8: "MEASUREMENT_UNIT_BOTTLE",
		9: "MEASUREMENT_UNIT_CAN",
	}
	MeasurementUnit_value = map[string]int32{
		"MEASUREMENT_UNIT_UNSPECIFIED": 0,
		"MEASUREMENT_UNIT_PIECE":       1,
		"MEASUREMENT_UNIT_KILOGRAM":    2,
		"MEASUREMENT_UNIT_GRAM":        3,
		"MEASUREMENT_UNIT_LITER":       4,
		"MEASUREMENT_UNIT_MILLILITER":  5,
		"MEASUREMENT_UNIT_PACKAGE":     6,
		"MEASUREMENT_UNIT_BOX":         7,
		"MEASUREMENT_UNIT_BOTTLE":      8,
		"MEASUREMENT_UNIT_CAN":         9,
	}
)

func (x MeasurementUnit) Enum() *MeasurementUnit {
	p := new(MeasurementUnit)
	*p = x
	return p
}

func (x MeasurementUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeasurementUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[1].Descriptor()
}

func (MeasurementUnit) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[1]
}

func (x MeasurementUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeasurementUnit.Descriptor instead.
func (MeasurementUnit) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{1}
}

// ItemStatus - статус товара
type ItemStatus int32

const (
	ItemStatus_ITEM_STATUS_UNSPECIFIED  ItemStatus = 0
	ItemStatus_ITEM_STATUS_AVAILABLE    ItemStatus = 1 // Доступен
	ItemStatus_ITEM_STATUS_LOW_STOCK    ItemStatus = 2 // Низкий остаток
	ItemStatus_ITEM_STATUS_OUT_OF_STOCK ItemStatus = 3 // Нет в наличии
	ItemStatus_ITEM_STATUS_DISCONTINUED ItemStatus = 4 // Снят с производства
	ItemStatus_ITEM_STATUS_EXPIRED      ItemStatus = 5 // Просрочен
)

// Enum value maps for ItemStatus.
var (
	ItemStatus_name = map[int32]string{
		0: "ITEM_STATUS_UNSPECIFIED",
		1: "ITEM_STATUS_AVAILABLE",
		2: "ITEM_STATUS_LOW_STOCK",
		3: "ITEM_STATUS_OUT_OF_STOCK",
		4: "ITEM_STATUS_DISCONTINUED",
		5: "ITEM_STATUS_EXPIRED",
	}
	ItemStatus_value = map[string]int32{
		"ITEM_STATUS_UNSPECIFIED":  0,
		"ITEM_STATUS_AVAILABLE":    1,
		"ITEM_STATUS_LOW_STOCK":    2,
		"ITEM_STATUS_OUT_OF_STOCK": 3,
		"ITEM_STATUS_DISCONTINUED": 4,
		"ITEM_STATUS_EXPIRED":      5,
	}
)

func (x ItemStatus) Enum() *ItemStatus {
	p := new(ItemStatus)
	*p = x
	return p
}

func (x ItemStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[2].Descriptor()
}

func (ItemStatus) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[2]
}

func (x ItemStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemStatus.Descriptor instead.
func (ItemStatus) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{2}
}

// MovementType - тип движения товара
type MovementType int32

const (
	MovementType_MOVEMENT_TYPE_UNSPECIFIED MovementType = 0
	MovementType_MOVEMENT_TYPE_IN          MovementType = 1 // Поступление
	MovementType_MOVEMENT_TYPE_OUT         MovementType = 2 // Расход
	MovementType_MOVEMENT_TYPE_ADJUSTMENT  MovementType = 3 // Корректировка
	MovementType_MOVEMENT_TYPE_TRANSFER    MovementType = 4 // Перемещение
	MovementType_MOVEMENT_TYPE_RETURN      MovementType = 5 // Возврат
	MovementType_MOVEMENT_TYPE_WRITE_OFF   MovementType = 6 // Списание
)

// Enum value maps for MovementType.
var (
	MovementType_name = map[int32]string{
		0: "MOVEMENT_TYPE_UNSPECIFIED",
		1: "MOVEMENT_TYPE_IN",
		2: "MOVEMENT_TYPE_OUT",
		3: "MOVEMENT_TYPE_ADJUSTMENT",
		4: "MOVEMENT_TYPE_TRANSFER",
		5: "MOVEMENT_TYPE_RETURN",
		6: "MOVEMENT_TYPE_WRITE_OFF",
	}
	MovementType_value = map[string]int32{
		"MOVEMENT_TYPE_UNSPECIFIED": 0,
		"MOVEMENT_TYPE_IN":          1,
		"MOVEMENT_TYPE_OUT":         2,
		"MOVEMENT_TYPE_ADJUSTMENT":  3,
		"MOVEMENT_TYPE_TRANSFER":    4,
		"MOVEMENT_TYPE_RETURN":      5,
		"MOVEMENT_TYPE_WRITE_OFF":   6,
	}
)

func (x MovementType) Enum() *MovementType {
	p := new(MovementType)
	*p = x
	return p
}

func (x MovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[3].Descriptor()
}

func (MovementType) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[3]
}

func (x MovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementType.Descriptor instead.
func (MovementType) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{3}
}

// MovementReason - причина движения
type MovementReason int32

const (
	MovementReason_MOVEMENT_REASON_UNSPECIFIED        MovementReason = 0
	MovementReason_MOVEMENT_REASON_PURCHASE           MovementReason = 1  // Закупка
	MovementReason_MOVEMENT_REASON_SALE               MovementReason = 2  // Продажа
	MovementReason_MOVEMENT_REASON_PRODUCTION         MovementReason = 3  // Производство
	MovementReason_MOVEMENT_REASON_INVENTORY          MovementReason = 4  // Инвентаризация
	MovementReason_MOVEMENT_REASON_DAMAGED            MovementReason = 5  // Порча
	MovementReason_MOVEMENT_REASON_EXPIRED            MovementReason = 6  // Истечение срока
	MovementReason_MOVEMENT_REASON_THEFT              MovementReason = 7  // Кража
	MovementReason_MOVEMENT_REASON_LOSS               MovementReason = 8  // Потеря
	MovementReason_MOVEMENT_REASON_RETURN_TO_SUPPLIER MovementReason = 9  // Возврат поставщику
	MovementReason_MOVEMENT_REASON_PROMOTION          MovementReason = 10 // Промо-акция
	MovementReason_MOVEMENT_REASON_SAMPLE             MovementReason = 11 // Образец
	MovementReason_MOVEMENT_REASON_OTHER              MovementReason = 12 // Другое
)

// Enum value maps for MovementReason.
var (
	MovementReason_name = map[int32]string{
		0:  "MOVEMENT_REASON_UNSPECIFIED",
		1:  "MOVEMENT_REASON_PURCHASE",
		2:  "MOVEMENT_REASON_SALE",
		3:  "MOVEMENT_REASON_PRODUCTION",
		4:  "MOVEMENT_REASON_INVENTORY",
		5:  "MOVEMENT_REASON_DAMAGED",
		6:  "MOVEMENT_REASON_EXPIRED",
		7:  "MOVEMENT_REASON_THEFT",
		8:  "MOVEMENT_REASON_LOSS",
		9:  "MOVEMENT_REASON_RETURN_TO_SUPPLIER",
		10: "MOVEMENT_REASON_PROMOTION",
		11: "MOVEMENT_REASON_SAMPLE",
		12: "MOVEMENT_REASON_OTHER",
	}
	MovementReason_value = map[string]int32{
		"MOVEMENT_REASON_UNSPECIFIED":        0,
		"MOVEMENT_REASON_PURCHASE":           1,
		"MOVEMENT_REASON_SALE":               2,
		"MOVEMENT_REASON_PRODUCTION":         3,
		"MOVEMENT_REASON_INVENTORY":          4,
		"MOVEMENT_REASON_DAMAGED":            5,
		"MOVEMENT_REASON_EXPIRED":            6,
		"MOVEMENT_REASON_THEFT":              7,
		"MOVEMENT_REASON_LOSS":               8,
		"MOVEMENT_REASON_RETURN_TO_SUPPLIER": 9,
		"MOVEMENT_REASON_PROMOTION":          10,
		"MOVEMENT_REASON_SAMPLE":             11,
		"MOVEMENT_REASON_OTHER":              12,
	}
)

func (x MovementReason) Enum() *MovementReason {
	p := new(MovementReason)
	*p = x
	return p
}

func (x MovementReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementReason) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[4].Descriptor()
}

func (MovementReason) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[4]
}

func (x MovementReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementReason.Descriptor instead.
func (MovementReason) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{4}
}

// PurchaseOrderStatus - статус заказа поставщику
type PurchaseOrderStatus int32

const (
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_UNSPECIFIED        PurchaseOrderStatus = 0
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_DRAFT              PurchaseOrderStatus = 1 // Черновик
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_SENT               PurchaseOrderStatus = 2 // Отправлен
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_CONFIRMED          PurchaseOrderStatus = 3 // Подтвержден
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_PARTIALLY_RECEIVED PurchaseOrderStatus = 4 // Частично получен
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_RECEIVED           PurchaseOrderStatus = 5 // Получен
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_CANCELLED          PurchaseOrderStatus = 6 // Отменен
	PurchaseOrderStatus_PURCHASE_ORDER_STATUS_CLOSED             PurchaseOrderStatus = 7 // Закрыт
)

// Enum value maps for PurchaseOrderStatus.
var (
	PurchaseOrderStatus_name = map[int32]string{
		0: "PURCHASE_ORDER_STATUS_UNSPECIFIED",
		1: "PURCHASE_ORDER_STATUS_DRAFT",
		2: "PURCHASE_ORDER_STATUS_SENT",
		3: "PURCHASE_ORDER_STATUS_CONFIRMED",
		4: "PURCHASE_ORDER_STATUS_PARTIALLY_RECEIVED",
		5: "PURCHASE_ORDER_STATUS_RECEIVED",
		6: "PURCHASE_ORDER_STATUS_CANCELLED",
		7: "PURCHASE_ORDER_STATUS_CLOSED",
	}
	PurchaseOrderStatus_value = map[string]int32{
		"PURCHASE_ORDER_STATUS_UNSPECIFIED":        0,
		"PURCHASE_ORDER_STATUS_DRAFT":              1,
		"PURCHASE_ORDER_STATUS_SENT":               2,
		"PURCHASE_ORDER_STATUS_CONFIRMED":          3,
		"PURCHASE_ORDER_STATUS_PARTIALLY_RECEIVED": 4,
		"PURCHASE_ORDER_STATUS_RECEIVED":           5,
		"PURCHASE_ORDER_STATUS_CANCELLED":          6,
		"PURCHASE_ORDER_STATUS_CLOSED":             7,
	}
)

func (x PurchaseOrderStatus) Enum() *PurchaseOrderStatus {
	p := new(PurchaseOrderStatus)
	*p = x
	return p
}

func (x PurchaseOrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PurchaseOrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[5].Descriptor()
}

func (PurchaseOrderStatus) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[5]
}

func (x PurchaseOrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PurchaseOrderStatus.Descriptor instead.
func (PurchaseOrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{5}
}

// AdjustmentType - тип корректировки
type AdjustmentType int32

const (
	AdjustmentType_ADJUSTMENT_TYPE_UNSPECIFIED AdjustmentType = 0
	AdjustmentType_ADJUSTMENT_TYPE_INVENTORY   AdjustmentType = 1 // Инвентаризация
	AdjustmentType_ADJUSTMENT_TYPE_WRITE_OFF   AdjustmentType = 2 // Списание
	AdjustmentType_ADJUSTMENT_TYPE_FOUND       AdjustmentType = 3 // Оприходование излишков
	AdjustmentType_ADJUSTMENT_TYPE_CORRECTION  AdjustmentType = 4 // Исправление ошибок
)

// Enum value maps for AdjustmentType.
var (
	AdjustmentType_name = map[int32]string{
		0: "ADJUSTMENT_TYPE_UNSPECIFIED",
		1: "ADJUSTMENT_TYPE_INVENTORY",
		2: "ADJUSTMENT_TYPE_WRITE_OFF",
		3: "ADJUSTMENT_TYPE_FOUND",
		4: "ADJUSTMENT_TYPE_CORRECTION",
	}
	AdjustmentType_value = map[string]int32{
		"ADJUSTMENT_TYPE_UNSPECIFIED": 0,
		"ADJUSTMENT_TYPE_INVENTORY":   1,
		"ADJUSTMENT_TYPE_WRITE_OFF":   2,
		"ADJUSTMENT_TYPE_FOUND":       3,
		"ADJUSTMENT_TYPE_CORRECTION":  4,
	}
)

func (x AdjustmentType) Enum() *AdjustmentType {
	p := new(AdjustmentType)
	*p = x
	return p
}

func (x AdjustmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_models_proto_enumTypes[6].Descriptor()
}

func (AdjustmentType) Type() protoreflect.EnumType {
	return &file_inventory_models_proto_enumTypes[6]
}

func (x AdjustmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustmentType.Descriptor instead.
func (AdjustmentType) EnumDescriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{6}
}

// InventoryItem - товар на складе
type InventoryItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор товара
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название товара
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Описание товара
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Артикул/SKU
	Sku string `protobuf:"bytes,4,opt,name=sku,proto3" json:"sku,omitempty"`
	// Штрихкод
	Barcode string `protobuf:"bytes,5,opt,name=barcode,proto3" json:"barcode,omitempty"`
	// Категория товара
	Category ItemCategory `protobuf:"varint,6,opt,name=category,proto3,enum=com.gastroflow.inventory.ItemCategory" json:"category,omitempty"`
	// Единица измерения
	MeasurementUnit MeasurementUnit `protobuf:"varint,7,opt,name=measurement_unit,json=measurementUnit,proto3,enum=com.gastroflow.inventory.MeasurementUnit" json:"measurement_unit,omitempty"`
	// Текущий остаток
	CurrentStock float64 `protobuf:"fixed64,8,opt,name=current_stock,json=currentStock,proto3" json:"current_stock,omitempty"`
	// Минимальный остаток (для уведомлений)
	MinStockLevel float64 `protobuf:"fixed64,9,opt,name=min_stock_level,json=minStockLevel,proto3" json:"min_stock_level,omitempty"`
	// Максимальный остаток
	MaxStockLevel float64 `protobuf:"fixed64,10,opt,name=max_stock_level,json=maxStockLevel,proto3" json:"max_stock_level,omitempty"`
	// Себестоимость единицы товара
	CostPerUnit *common.Money `protobuf:"bytes,11,opt,name=cost_per_unit,json=costPerUnit,proto3" json:"cost_per_unit,omitempty"`
	// Продажная цена единицы товара
	PricePerUnit *common.Money `protobuf:"bytes,12,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	// Поставщик товара
	Supplier *Supplier `protobuf:"bytes,13,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,14,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Идентификатор филиала (если товар привязан к филиалу)
	BranchId *common.UUID `protobuf:"bytes,15,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	// Статус товара
	Status ItemStatus `protobuf:"varint,16,opt,name=status,proto3,enum=com.gastroflow.inventory.ItemStatus" json:"status,omitempty"`
	// Срок годности (дни)
	ShelfLifeDays int32 `protobuf:"varint,17,opt,name=shelf_life_days,json=shelfLifeDays,proto3" json:"shelf_life_days,omitempty"`
	// Условия хранения
	StorageConditions string `protobuf:"bytes,18,opt,name=storage_conditions,json=storageConditions,proto3" json:"storage_conditions,omitempty"`
	// Активен ли товар
	IsActive bool `protobuf:"varint,19,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,20,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	mi := &file_inventory_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{0}
}

func (x *InventoryItem) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *InventoryItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InventoryItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InventoryItem) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *InventoryItem) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *InventoryItem) GetCategory() ItemCategory {
	if x != nil {
		return x.Category
	}
	return ItemCategory_ITEM_CATEGORY_UNSPECIFIED
}

func (x *InventoryItem) GetMeasurementUnit() MeasurementUnit {
	if x != nil {
		return x.MeasurementUnit
	}
	return MeasurementUnit_MEASUREMENT_UNIT_UNSPECIFIED
}

func (x *InventoryItem) GetCurrentStock() float64 {
	if x != nil {
		return x.CurrentStock
	}
	return 0
}

func (x *InventoryItem) GetMinStockLevel() float64 {
	if x != nil {
		return x.MinStockLevel
	}
	return 0
}

func (x *InventoryItem) GetMaxStockLevel() float64 {
	if x != nil {
		return x.MaxStockLevel
	}
	return 0
}

func (x *InventoryItem) GetCostPerUnit() *common.Money {
	if x != nil {
		return x.CostPerUnit
	}
	return nil
}

func (x *InventoryItem) GetPricePerUnit() *common.Money {
	if x != nil {
		return x.PricePerUnit
	}
	return nil
}

func (x *InventoryItem) GetSupplier() *Supplier {
	if x != nil {
		return x.Supplier
	}
	return nil
}

func (x *InventoryItem) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *InventoryItem) GetBranchId() *common.UUID {
	if x != nil {
		return x.BranchId
	}
	return nil
}

func (x *InventoryItem) GetStatus() ItemStatus {
	if x != nil {
		return x.Status
	}
	return ItemStatus_ITEM_STATUS_UNSPECIFIED
}

func (x *InventoryItem) GetShelfLifeDays() int32 {
	if x != nil {
		return x.ShelfLifeDays
	}
	return 0
}

func (x *InventoryItem) GetStorageConditions() string {
	if x != nil {
		return x.StorageConditions
	}
	return ""
}

func (x *InventoryItem) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *InventoryItem) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// Supplier - поставщик
type Supplier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор поставщика
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название поставщика
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Контактная информация
	ContactInfo *common.ContactInfo `protobuf:"bytes,3,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	// Адрес поставщика
	Address *common.Address `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// ИНН/налоговый номер
	TaxNumber string `protobuf:"bytes,5,opt,name=tax_number,json=taxNumber,proto3" json:"tax_number,omitempty"`
	// Рейтинг поставщика (1-5)
	Rating float64 `protobuf:"fixed64,6,opt,name=rating,proto3" json:"rating,omitempty"`
	// Условия оплаты
	PaymentTerms string `protobuf:"bytes,7,opt,name=payment_terms,json=paymentTerms,proto3" json:"payment_terms,omitempty"`
	// Условия доставки
	DeliveryTerms string `protobuf:"bytes,8,opt,name=delivery_terms,json=deliveryTerms,proto3" json:"delivery_terms,omitempty"`
	// Активен ли поставщик
	IsActive bool `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,10,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Supplier) Reset() {
	*x = Supplier{}
	mi := &file_inventory_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Supplier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supplier) ProtoMessage() {}

func (x *Supplier) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supplier.ProtoReflect.Descriptor instead.
func (*Supplier) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{1}
}

func (x *Supplier) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Supplier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Supplier) GetContactInfo() *common.ContactInfo {
	if x != nil {
		return x.ContactInfo
	}
	return nil
}

func (x *Supplier) GetAddress() *common.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Supplier) GetTaxNumber() string {
	if x != nil {
		return x.TaxNumber
	}
	return ""
}

func (x *Supplier) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Supplier) GetPaymentTerms() string {
	if x != nil {
		return x.PaymentTerms
	}
	return ""
}

func (x *Supplier) GetDeliveryTerms() string {
	if x != nil {
		return x.DeliveryTerms
	}
	return ""
}

func (x *Supplier) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Supplier) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// StockMovement - движение товара на складе
type StockMovement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор движения
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Идентификатор товара
	ItemId *common.UUID `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Тип движения
	MovementType MovementType `protobuf:"varint,3,opt,name=movement_type,json=movementType,proto3,enum=com.gastroflow.inventory.MovementType" json:"movement_type,omitempty"`
	// Количество (положительное для поступления, отрицательное для расхода)
	Quantity float64 `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Остаток до движения
	StockBefore float64 `protobuf:"fixed64,5,opt,name=stock_before,json=stockBefore,proto3" json:"stock_before,omitempty"`
	// Остаток после движения
	StockAfter float64 `protobuf:"fixed64,6,opt,name=stock_after,json=stockAfter,proto3" json:"stock_after,omitempty"`
	// Причина движения
	Reason MovementReason `protobuf:"varint,7,opt,name=reason,proto3,enum=com.gastroflow.inventory.MovementReason" json:"reason,omitempty"`
	// Дополнительное описание
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// Стоимость движения
	Cost *common.Money `protobuf:"bytes,9,opt,name=cost,proto3" json:"cost,omitempty"`
	// Связанный документ (накладная, заказ и т.д.)
	ReferenceDocument string `protobuf:"bytes,10,opt,name=reference_document,json=referenceDocument,proto3" json:"reference_document,omitempty"`
	// Идентификатор связанного заказа
	OrderId *common.UUID `protobuf:"bytes,11,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,12,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Идентификатор филиала
	BranchId *common.UUID `protobuf:"bytes,13,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	// Время движения
	MovementDate *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=movement_date,json=movementDate,proto3" json:"movement_date,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,15,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockMovement) Reset() {
	*x = StockMovement{}
	mi := &file_inventory_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockMovement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockMovement) ProtoMessage() {}

func (x *StockMovement) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockMovement.ProtoReflect.Descriptor instead.
func (*StockMovement) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{2}
}

func (x *StockMovement) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StockMovement) GetItemId() *common.UUID {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *StockMovement) GetMovementType() MovementType {
	if x != nil {
		return x.MovementType
	}
	return MovementType_MOVEMENT_TYPE_UNSPECIFIED
}

func (x *StockMovement) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *StockMovement) GetStockBefore() float64 {
	if x != nil {
		return x.StockBefore
	}
	return 0
}

func (x *StockMovement) GetStockAfter() float64 {
	if x != nil {
		return x.StockAfter
	}
	return 0
}

func (x *StockMovement) GetReason() MovementReason {
	if x != nil {
		return x.Reason
	}
	return MovementReason_MOVEMENT_REASON_UNSPECIFIED
}

func (x *StockMovement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StockMovement) GetCost() *common.Money {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *StockMovement) GetReferenceDocument() string {
	if x != nil {
		return x.ReferenceDocument
	}
	return ""
}

func (x *StockMovement) GetOrderId() *common.UUID {
	if x != nil {
		return x.OrderId
	}
	return nil
}

func (x *StockMovement) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *StockMovement) GetBranchId() *common.UUID {
	if x != nil {
		return x.BranchId
	}
	return nil
}

func (x *StockMovement) GetMovementDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MovementDate
	}
	return nil
}

func (x *StockMovement) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// PurchaseOrder - заказ поставщику
type PurchaseOrder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор заказа
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Номер заказа
	OrderNumber string `protobuf:"bytes,2,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	// Идентификатор поставщика
	SupplierId *common.UUID `protobuf:"bytes,3,opt,name=supplier_id,json=supplierId,proto3" json:"supplier_id,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,4,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Идентификатор филиала
	BranchId *common.UUID `protobuf:"bytes,5,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	// Позиции заказа
	Items []*PurchaseOrderItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	// Статус заказа
	Status PurchaseOrderStatus `protobuf:"varint,7,opt,name=status,proto3,enum=com.gastroflow.inventory.PurchaseOrderStatus" json:"status,omitempty"`
	// Общая сумма заказа
	TotalAmount *common.Money `protobuf:"bytes,8,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	// Дата создания заказа
	OrderDate *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	// Ожидаемая дата доставки
	ExpectedDeliveryDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expected_delivery_date,json=expectedDeliveryDate,proto3" json:"expected_delivery_date,omitempty"`
	// Фактическая дата доставки
	ActualDeliveryDate *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=actual_delivery_date,json=actualDeliveryDate,proto3" json:"actual_delivery_date,omitempty"`
	// Комментарий к заказу
	Comment string `protobuf:"bytes,12,opt,name=comment,proto3" json:"comment,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,13,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseOrder) Reset() {
	*x = PurchaseOrder{}
	mi := &file_inventory_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseOrder) ProtoMessage() {}

func (x *PurchaseOrder) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseOrder.ProtoReflect.Descriptor instead.
func (*PurchaseOrder) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{3}
}

func (x *PurchaseOrder) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PurchaseOrder) GetOrderNumber() string {
	if x != nil {
		return x.OrderNumber
	}
	return ""
}

func (x *PurchaseOrder) GetSupplierId() *common.UUID {
	if x != nil {
		return x.SupplierId
	}
	return nil
}

func (x *PurchaseOrder) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *PurchaseOrder) GetBranchId() *common.UUID {
	if x != nil {
		return x.BranchId
	}
	return nil
}

func (x *PurchaseOrder) GetItems() []*PurchaseOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PurchaseOrder) GetStatus() PurchaseOrderStatus {
	if x != nil {
		return x.Status
	}
	return PurchaseOrderStatus_PURCHASE_ORDER_STATUS_UNSPECIFIED
}

func (x *PurchaseOrder) GetTotalAmount() *common.Money {
	if x != nil {
		return x.TotalAmount
	}
	return nil
}

func (x *PurchaseOrder) GetOrderDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderDate
	}
	return nil
}

func (x *PurchaseOrder) GetExpectedDeliveryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedDeliveryDate
	}
	return nil
}

func (x *PurchaseOrder) GetActualDeliveryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryDate
	}
	return nil
}

func (x *PurchaseOrder) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PurchaseOrder) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// PurchaseOrderItem - позиция в заказе поставщику
type PurchaseOrderItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор товара
	ItemId *common.UUID `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Количество
	Quantity float64 `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Цена за единицу
	UnitPrice *common.Money `protobuf:"bytes,3,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// Общая стоимость позиции
	TotalPrice *common.Money `protobuf:"bytes,4,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	// Полученное количество
	ReceivedQuantity float64 `protobuf:"fixed64,5,opt,name=received_quantity,json=receivedQuantity,proto3" json:"received_quantity,omitempty"`
	// Комментарий к позиции
	Comment       string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseOrderItem) Reset() {
	*x = PurchaseOrderItem{}
	mi := &file_inventory_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseOrderItem) ProtoMessage() {}

func (x *PurchaseOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseOrderItem.ProtoReflect.Descriptor instead.
func (*PurchaseOrderItem) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{4}
}

func (x *PurchaseOrderItem) GetItemId() *common.UUID {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *PurchaseOrderItem) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PurchaseOrderItem) GetUnitPrice() *common.Money {
	if x != nil {
		return x.UnitPrice
	}
	return nil
}

func (x *PurchaseOrderItem) GetTotalPrice() *common.Money {
	if x != nil {
		return x.TotalPrice
	}
	return nil
}

func (x *PurchaseOrderItem) GetReceivedQuantity() float64 {
	if x != nil {
		return x.ReceivedQuantity
	}
	return 0
}

func (x *PurchaseOrderItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// StockAdjustment - корректировка остатков
type StockAdjustment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор корректировки
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Номер корректировки
	AdjustmentNumber string `protobuf:"bytes,2,opt,name=adjustment_number,json=adjustmentNumber,proto3" json:"adjustment_number,omitempty"`
	// Идентификатор ресторана
	RestaurantId *common.UUID `protobuf:"bytes,3,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// Идентификатор филиала
	BranchId *common.UUID `protobuf:"bytes,4,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	// Тип корректировки
	AdjustmentType AdjustmentType `protobuf:"varint,5,opt,name=adjustment_type,json=adjustmentType,proto3,enum=com.gastroflow.inventory.AdjustmentType" json:"adjustment_type,omitempty"`
	// Позиции корректировки
	Items []*StockAdjustmentItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	// Причина корректировки
	Reason string `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	// Дата корректировки
	AdjustmentDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=adjustment_date,json=adjustmentDate,proto3" json:"adjustment_date,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,9,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAdjustment) Reset() {
	*x = StockAdjustment{}
	mi := &file_inventory_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAdjustment) ProtoMessage() {}

func (x *StockAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAdjustment.ProtoReflect.Descriptor instead.
func (*StockAdjustment) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{5}
}

func (x *StockAdjustment) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StockAdjustment) GetAdjustmentNumber() string {
	if x != nil {
		return x.AdjustmentNumber
	}
	return ""
}

func (x *StockAdjustment) GetRestaurantId() *common.UUID {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *StockAdjustment) GetBranchId() *common.UUID {
	if x != nil {
		return x.BranchId
	}
	return nil
}

func (x *StockAdjustment) GetAdjustmentType() AdjustmentType {
	if x != nil {
		return x.AdjustmentType
	}
	return AdjustmentType_ADJUSTMENT_TYPE_UNSPECIFIED
}

func (x *StockAdjustment) GetItems() []*StockAdjustmentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StockAdjustment) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *StockAdjustment) GetAdjustmentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AdjustmentDate
	}
	return nil
}

func (x *StockAdjustment) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// StockAdjustmentItem - позиция в корректировке
type StockAdjustmentItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор товара
	ItemId *common.UUID `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Остаток до корректировки
	OldQuantity float64 `protobuf:"fixed64,2,opt,name=old_quantity,json=oldQuantity,proto3" json:"old_quantity,omitempty"`
	// Остаток после корректировки
	NewQuantity float64 `protobuf:"fixed64,3,opt,name=new_quantity,json=newQuantity,proto3" json:"new_quantity,omitempty"`
	// Разница
	Difference float64 `protobuf:"fixed64,4,opt,name=difference,proto3" json:"difference,omitempty"`
	// Причина корректировки конкретной позиции
	Reason        string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAdjustmentItem) Reset() {
	*x = StockAdjustmentItem{}
	mi := &file_inventory_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAdjustmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAdjustmentItem) ProtoMessage() {}

func (x *StockAdjustmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAdjustmentItem.ProtoReflect.Descriptor instead.
func (*StockAdjustmentItem) Descriptor() ([]byte, []int) {
	return file_inventory_models_proto_rawDescGZIP(), []int{6}
}

func (x *StockAdjustmentItem) GetItemId() *common.UUID {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *StockAdjustmentItem) GetOldQuantity() float64 {
	if x != nil {
		return x.OldQuantity
	}
	return 0
}

func (x *StockAdjustmentItem) GetNewQuantity() float64 {
	if x != nil {
		return x.NewQuantity
	}
	return 0
}

func (x *StockAdjustmentItem) GetDifference() float64 {
	if x != nil {
		return x.Difference
	}
	return 0
}

func (x *StockAdjustmentItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_inventory_models_proto protoreflect.FileDescriptor

const file_inventory_models_proto_rawDesc = "" +
	"\n" +
	"\x16inventory/models.proto\x12\x18com.gastroflow.inventory\x1a\x12common/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\x8b\t\n" +
	"\rInventoryItem\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x04name\x12*\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xfaB\x05r\x03\x18\xe8\aR\vdescription\x12\x1b\n" +
	"\x03sku\x18\x04 \x01(\tB\t\xfaB\x06r\x04\x10\x01\x18dR\x03sku\x12!\n" +
	"\abarcode\x18\x05 \x01(\tB\a\xfaB\x04r\x02\x182R\abarcode\x12L\n" +
	"\bcategory\x18\x06 \x01(\x0e2&.com.gastroflow.inventory.ItemCategoryB\b\xfaB\x05\x82\x01\x02 \x00R\bcategory\x12^\n" +
	"\x10measurement_unit\x18\a \x01(\x0e2).com.gastroflow.inventory.MeasurementUnitB\b\xfaB\x05\x82\x01\x02 \x00R\x0fmeasurementUnit\x123\n" +
	"\rcurrent_stock\x18\b \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\fcurrentStock\x126\n" +
	"\x0fmin_stock_level\x18\t \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\rminStockLevel\x126\n" +
	"\x0fmax_stock_level\x18\n" +
	" \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\rmaxStockLevel\x12@\n" +
	"\rcost_per_unit\x18\v \x01(\v2\x1c.com.gastroflow.common.MoneyR\vcostPerUnit\x12B\n" +
	"\x0eprice_per_unit\x18\f \x01(\v2\x1c.com.gastroflow.common.MoneyR\fpricePerUnit\x12>\n" +
	"\bsupplier\x18\r \x01(\v2\".com.gastroflow.inventory.SupplierR\bsupplier\x12J\n" +
	"\rrestaurant_id\x18\x0e \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\frestaurantId\x128\n" +
	"\tbranch_id\x18\x0f \x01(\v2\x1b.com.gastroflow.common.UUIDR\bbranchId\x12F\n" +
	"\x06status\x18\x10 \x01(\x0e2$.com.gastroflow.inventory.ItemStatusB\b\xfaB\x05\x82\x01\x02 \x00R\x06status\x12/\n" +
	"\x0fshelf_life_days\x18\x11 \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\rshelfLifeDays\x127\n" +
	"\x12storage_conditions\x18\x12 \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\x11storageConditions\x12\x1b\n" +
	"\tis_active\x18\x13 \x01(\bR\bisActive\x12I\n" +
	"\n" +
	"audit_info\x18\x14 \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\x8d\x04\n" +
	"\bSupplier\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x04name\x12O\n" +
	"\fcontact_info\x18\x03 \x01(\v2\".com.gastroflow.common.ContactInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\vcontactInfo\x128\n" +
	"\aaddress\x18\x04 \x01(\v2\x1e.com.gastroflow.common.AddressR\aaddress\x12&\n" +
	"\n" +
	"tax_number\x18\x05 \x01(\tB\a\xfaB\x04r\x02\x18\x14R\ttaxNumber\x12/\n" +
	"\x06rating\x18\x06 \x01(\x01B\x17\xfaB\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\x14@)\x00\x00\x00\x00\x00\x00\xf0?R\x06rating\x12-\n" +
	"\rpayment_terms\x18\a \x01(\tB\b\xfaB\x05r\x03\x18\xc8\x01R\fpaymentTerms\x12/\n" +
	"\x0edelivery_terms\x18\b \x01(\tB\b\xfaB\x05r\x03\x18\xc8\x01R\rdeliveryTerms\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\x12I\n" +
	"\n" +
	"audit_info\x18\n" +
	" \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\x93\a\n" +
	"\rStockMovement\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12>\n" +
	"\aitem_id\x18\x02 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06itemId\x12U\n" +
	"\rmovement_type\x18\x03 \x01(\x0e2&.com.gastroflow.inventory.MovementTypeB\b\xfaB\x05\x82\x01\x02 \x00R\fmovementType\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x01R\bquantity\x121\n" +
	"\fstock_before\x18\x05 \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\vstockBefore\x12/\n" +
	"\vstock_after\x18\x06 \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\n" +
	"stockAfter\x12J\n" +
	"\x06reason\x18\a \x01(\x0e2(.com.gastroflow.inventory.MovementReasonB\b\xfaB\x05\x82\x01\x02 \x00R\x06reason\x12*\n" +
	"\vdescription\x18\b \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\vdescription\x120\n" +
	"\x04cost\x18\t \x01(\v2\x1c.com.gastroflow.common.MoneyR\x04cost\x126\n" +
	"\x12reference_document\x18\n" +
	" \x01(\tB\a\xfaB\x04r\x02\x18dR\x11referenceDocument\x126\n" +
	"\border_id\x18\v \x01(\v2\x1b.com.gastroflow.common.UUIDR\aorderId\x12J\n" +
	"\rrestaurant_id\x18\f \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\frestaurantId\x128\n" +
	"\tbranch_id\x18\r \x01(\v2\x1b.com.gastroflow.common.UUIDR\bbranchId\x12I\n" +
	"\rmovement_date\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\fmovementDate\x12I\n" +
	"\n" +
	"audit_info\x18\x0f \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\x82\a\n" +
	"\rPurchaseOrder\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12,\n" +
	"\forder_number\x18\x02 \x01(\tB\t\xfaB\x06r\x04\x10\x01\x182R\vorderNumber\x12F\n" +
	"\vsupplier_id\x18\x03 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\n" +
	"supplierId\x12J\n" +
	"\rrestaurant_id\x18\x04 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\frestaurantId\x128\n" +
	"\tbranch_id\x18\x05 \x01(\v2\x1b.com.gastroflow.common.UUIDR\bbranchId\x12N\n" +
	"\x05items\x18\x06 \x03(\v2+.com.gastroflow.inventory.PurchaseOrderItemB\v\xfaB\b\x92\x01\x05\b\x01\x10\xe8\aR\x05items\x12O\n" +
	"\x06status\x18\a \x01(\x0e2-.com.gastroflow.inventory.PurchaseOrderStatusB\b\xfaB\x05\x82\x01\x02 \x00R\x06status\x12I\n" +
	"\ftotal_amount\x18\b \x01(\v2\x1c.com.gastroflow.common.MoneyB\b\xfaB\x05\x8a\x01\x02\x10\x01R\vtotalAmount\x12C\n" +
	"\n" +
	"order_date\x18\t \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\torderDate\x12P\n" +
	"\x16expected_delivery_date\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x14expectedDeliveryDate\x12L\n" +
	"\x14actual_delivery_date\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\x12actualDeliveryDate\x12\"\n" +
	"\acomment\x18\f \x01(\tB\b\xfaB\x05r\x03\x18\xe8\aR\acomment\x12I\n" +
	"\n" +
	"audit_info\x18\r \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\xf0\x02\n" +
	"\x11PurchaseOrderItem\x12>\n" +
	"\aitem_id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06itemId\x12*\n" +
	"\bquantity\x18\x02 \x01(\x01B\x0e\xfaB\v\x12\t!\x00\x00\x00\x00\x00\x00\x00\x00R\bquantity\x12E\n" +
	"\n" +
	"unit_price\x18\x03 \x01(\v2\x1c.com.gastroflow.common.MoneyB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tunitPrice\x12G\n" +
	"\vtotal_price\x18\x04 \x01(\v2\x1c.com.gastroflow.common.MoneyB\b\xfaB\x05\x8a\x01\x02\x10\x01R\n" +
	"totalPrice\x12;\n" +
	"\x11received_quantity\x18\x05 \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\x10receivedQuantity\x12\"\n" +
	"\acomment\x18\x06 \x01(\tB\b\xfaB\x05r\x03\x18\xc8\x01R\acomment\"\xf3\x04\n" +
	"\x0fStockAdjustment\x125\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x126\n" +
	"\x11adjustment_number\x18\x02 \x01(\tB\t\xfaB\x06r\x04\x10\x01\x182R\x10adjustmentNumber\x12J\n" +
	"\rrestaurant_id\x18\x03 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\frestaurantId\x128\n" +
	"\tbranch_id\x18\x04 \x01(\v2\x1b.com.gastroflow.common.UUIDR\bbranchId\x12[\n" +
	"\x0fadjustment_type\x18\x05 \x01(\x0e2(.com.gastroflow.inventory.AdjustmentTypeB\b\xfaB\x05\x82\x01\x02 \x00R\x0eadjustmentType\x12P\n" +
	"\x05items\x18\x06 \x03(\v2-.com.gastroflow.inventory.StockAdjustmentItemB\v\xfaB\b\x92\x01\x05\b\x01\x10\xe8\aR\x05items\x12\"\n" +
	"\x06reason\x18\a \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xf4\x03R\x06reason\x12M\n" +
	"\x0fadjustment_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\x0eadjustmentDate\x12I\n" +
	"\n" +
	"audit_info\x18\t \x01(\v2 .com.gastroflow.common.AuditInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tauditInfo\"\xfd\x01\n" +
	"\x13StockAdjustmentItem\x12>\n" +
	"\aitem_id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06itemId\x121\n" +
	"\fold_quantity\x18\x02 \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\voldQuantity\x121\n" +
	"\fnew_quantity\x18\x03 \x01(\x01B\x0e\xfaB\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\vnewQuantity\x12\x1e\n" +
	"\n" +
	"difference\x18\x04 \x01(\x01R\n" +
	"difference\x12 \n" +
	"\x06reason\x18\x05 \x01(\tB\b\xfaB\x05r\x03\x18\xc8\x01R\x06reason*\x8f\x03\n" +
	"\fItemCategory\x12\x1d\n" +
	"\x19ITEM_CATEGORY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19ITEM_CATEGORY_INGREDIENTS\x10\x01\x12\x16\n" +
	"\x12ITEM_CATEGORY_MEAT\x10\x02\x12\x1c\n" +
	"\x18ITEM_CATEGORY_VEGETABLES\x10\x03\x12\x18\n" +
	"\x14ITEM_CATEGORY_FRUITS\x10\x04\x12\x17\n" +
	"\x13ITEM_CATEGORY_DAIRY\x10\x05\x12\x1b\n" +
	"\x17ITEM_CATEGORY_BEVERAGES\x10\x06\x12\x18\n" +
	"\x14ITEM_CATEGORY_SPICES\x10\a\x12\x18\n" +
	"\x14ITEM_CATEGORY_BAKERY\x10\b\x12\x18\n" +
	"\x14ITEM_CATEGORY_FROZEN\x10\t\x12\x1a\n" +
	"\x16ITEM_CATEGORY_CLEANING\x10\n" +
	"\x12\x1b\n" +
	"\x17ITEM_CATEGORY_PACKAGING\x10\v\x12\x1b\n" +
	"\x17ITEM_CATEGORY_EQUIPMENT\x10\f\x12\x17\n" +
	"\x13ITEM_CATEGORY_OTHER\x10\r*\xb5\x02\n" +
	"\x0fMeasurementUnit\x12 \n" +
	"\x1cMEASUREMENT_UNIT_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16MEASUREMENT_UNIT_PIECE\x10\x01\x12\x1d\n" +
	"\x19MEASUREMENT_UNIT_KILOGRAM\x10\x02\x12\x19\n" +
	"\x15MEASUREMENT_UNIT_GRAM\x10\x03\x12\x1a\n" +
	"\x16MEASUREMENT_UNIT_LITER\x10\x04\x12\x1f\n" +
	"\x1bMEASUREMENT_UNIT_MILLILITER\x10\x05\x12\x1c\n" +
	"\x18MEASUREMENT_UNIT_PACKAGE\x10\x06\x12\x18\n" +
	"\x14MEASUREMENT_UNIT_BOX\x10\a\x12\x1b\n" +
	"\x17MEASUREMENT_UNIT_BOTTLE\x10\b\x12\x18\n" +
	"\x14MEASUREMENT_UNIT_CAN\x10\t*\xb4\x01\n" +
	"\n" +
	"ItemStatus\x12\x1b\n" +
	"\x17ITEM_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15ITEM_STATUS_AVAILABLE\x10\x01\x12\x19\n" +
	"\x15ITEM_STATUS_LOW_STOCK\x10\x02\x12\x1c\n" +
	"\x18ITEM_STATUS_OUT_OF_STOCK\x10\x03\x12\x1c\n" +
	"\x18ITEM_STATUS_DISCONTINUED\x10\x04\x12\x17\n" +
	"\x13ITEM_STATUS_EXPIRED\x10\x05*\xcb\x01\n" +
	"\fMovementType\x12\x1d\n" +
	"\x19MOVEMENT_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MOVEMENT_TYPE_IN\x10\x01\x12\x15\n" +
	"\x11MOVEMENT_TYPE_OUT\x10\x02\x12\x1c\n" +
	"\x18MOVEMENT_TYPE_ADJUSTMENT\x10\x03\x12\x1a\n" +
	"\x16MOVEMENT_TYPE_TRANSFER\x10\x04\x12\x18\n" +
	"\x14MOVEMENT_TYPE_RETURN\x10\x05\x12\x1b\n" +
	"\x17MOVEMENT_TYPE_WRITE_OFF\x10\x06*\x95\x03\n" +
	"\x0eMovementReason\x12\x1f\n" +
	"\x1bMOVEMENT_REASON_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18MOVEMENT_REASON_PURCHASE\x10\x01\x12\x18\n" +
	"\x14MOVEMENT_REASON_SALE\x10\x02\x12\x1e\n" +
	"\x1aMOVEMENT_REASON_PRODUCTION\x10\x03\x12\x1d\n" +
	"\x19MOVEMENT_REASON_INVENTORY\x10\x04\x12\x1b\n" +
	"\x17MOVEMENT_REASON_DAMAGED\x10\x05\x12\x1b\n" +
	"\x17MOVEMENT_REASON_EXPIRED\x10\x06\x12\x19\n" +
	"\x15MOVEMENT_REASON_THEFT\x10\a\x12\x18\n" +
	"\x14MOVEMENT_REASON_LOSS\x10\b\x12&\n" +
	"\"MOVEMENT_REASON_RETURN_TO_SUPPLIER\x10\t\x12\x1d\n" +
	"\x19MOVEMENT_REASON_PROMOTION\x10\n" +
	"\x12\x1a\n" +
	"\x16MOVEMENT_REASON_SAMPLE\x10\v\x12\x19\n" +
	"\x15MOVEMENT_REASON_OTHER\x10\f*\xbb\x02\n" +
	"\x13PurchaseOrderStatus\x12%\n" +
	"!PURCHASE_ORDER_STATUS_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bPURCHASE_ORDER_STATUS_DRAFT\x10\x01\x12\x1e\n" +
	"\x1aPURCHASE_ORDER_STATUS_SENT\x10\x02\x12#\n" +
	"\x1fPURCHASE_ORDER_STATUS_CONFIRMED\x10\x03\x12,\n" +
	"(PURCHASE_ORDER_STATUS_PARTIALLY_RECEIVED\x10\x04\x12\"\n" +
	"\x1ePURCHASE_ORDER_STATUS_RECEIVED\x10\x05\x12#\n" +
	"\x1fPURCHASE_ORDER_STATUS_CANCELLED\x10\x06\x12 \n" +
	"\x1cPURCHASE_ORDER_STATUS_CLOSED\x10\a*\xaa\x01\n" +
	"\x0eAdjustmentType\x12\x1f\n" +
	"\x1bADJUSTMENT_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19ADJUSTMENT_TYPE_INVENTORY\x10\x01\x12\x1d\n" +
	"\x19ADJUSTMENT_TYPE_WRITE_OFF\x10\x02\x12\x19\n" +
	"\x15ADJUSTMENT_TYPE_FOUND\x10\x03\x12\x1e\n" +
	"\x1aADJUSTMENT_TYPE_CORRECTION\x10\x04B\xd7\x01\n" +
	"\x1ccom.com.gastroflow.inventoryB\vModelsProtoP\x01Z(github.com/gastroflow/proto-go/inventory\xa2\x02\x03CGI\xaa\x02\x18Com.Gastroflow.Inventory\xca\x02\x18Com\\Gastroflow\\Inventory\xe2\x02$Com\\Gastroflow\\Inventory\\GPBMetadata\xea\x02\x1aCom::Gastroflow::Inventoryb\x06proto3"

var (
	file_inventory_models_proto_rawDescOnce sync.Once
	file_inventory_models_proto_rawDescData []byte
)

func file_inventory_models_proto_rawDescGZIP() []byte {
	file_inventory_models_proto_rawDescOnce.Do(func() {
		file_inventory_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inventory_models_proto_rawDesc), len(file_inventory_models_proto_rawDesc)))
	})
	return file_inventory_models_proto_rawDescData
}

var file_inventory_models_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_inventory_models_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_inventory_models_proto_goTypes = []any{
	(ItemCategory)(0),             // 0: com.gastroflow.inventory.ItemCategory
	(MeasurementUnit)(0),          // 1: com.gastroflow.inventory.MeasurementUnit
	(ItemStatus)(0),               // 2: com.gastroflow.inventory.ItemStatus
	(MovementType)(0),             // 3: com.gastroflow.inventory.MovementType
	(MovementReason)(0),           // 4: com.gastroflow.inventory.MovementReason
	(PurchaseOrderStatus)(0),      // 5: com.gastroflow.inventory.PurchaseOrderStatus
	(AdjustmentType)(0),           // 6: com.gastroflow.inventory.AdjustmentType
	(*InventoryItem)(nil),         // 7: com.gastroflow.inventory.InventoryItem
	(*Supplier)(nil),              // 8: com.gastroflow.inventory.Supplier
	(*StockMovement)(nil),         // 9: com.gastroflow.inventory.StockMovement
	(*PurchaseOrder)(nil),         // 10: com.gastroflow.inventory.PurchaseOrder
	(*PurchaseOrderItem)(nil),     // 11: com.gastroflow.inventory.PurchaseOrderItem
	(*StockAdjustment)(nil),       // 12: com.gastroflow.inventory.StockAdjustment
	(*StockAdjustmentItem)(nil),   // 13: com.gastroflow.inventory.StockAdjustmentItem
	(*common.UUID)(nil),           // 14: com.gastroflow.common.UUID
	(*common.Money)(nil),          // 15: com.gastroflow.common.Money
	(*common.AuditInfo)(nil),      // 16: com.gastroflow.common.AuditInfo
	(*common.ContactInfo)(nil),    // 17: com.gastroflow.common.ContactInfo
	(*common.Address)(nil),        // 18: com.gastroflow.common.Address
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
}
var file_inventory_models_proto_depIdxs = []int32{
	14, // 0: com.gastroflow.inventory.InventoryItem.id:type_name -> com.gastroflow.common.UUID
	0,  // 1: com.gastroflow.inventory.InventoryItem.category:type_name -> com.gastroflow.inventory.ItemCategory
	1,  // 2: com.gastroflow.inventory.InventoryItem.measurement_unit:type_name -> com.gastroflow.inventory.MeasurementUnit
	15, // 3: com.gastroflow.inventory.InventoryItem.cost_per_unit:type_name -> com.gastroflow.common.Money
	15, // 4: com.gastroflow.inventory.InventoryItem.price_per_unit:type_name -> com.gastroflow.common.Money
	8,  // 5: com.gastroflow.inventory.InventoryItem.supplier:type_name -> com.gastroflow.inventory.Supplier
	14, // 6: com.gastroflow.inventory.InventoryItem.restaurant_id:type_name -> com.gastroflow.common.UUID
	14, // 7: com.gastroflow.inventory.InventoryItem.branch_id:type_name -> com.gastroflow.common.UUID
	2,  // 8: com.gastroflow.inventory.InventoryItem.status:type_name -> com.gastroflow.inventory.ItemStatus
	16, // 9: com.gastroflow.inventory.InventoryItem.audit_info:type_name -> com.gastroflow.common.AuditInfo
	14, // 10: com.gastroflow.inventory.Supplier.id:type_name -> com.gastroflow.common.UUID
	17, // 11: com.gastroflow.inventory.Supplier.contact_info:type_name -> com.gastroflow.common.ContactInfo
	18, // 12: com.gastroflow.inventory.Supplier.address:type_name -> com.gastroflow.common.Address
	16, // 13: com.gastroflow.inventory.Supplier.audit_info:type_name -> com.gastroflow.common.AuditInfo
	14, // 14: com.gastroflow.inventory.StockMovement.id:type_name -> com.gastroflow.common.UUID
	14, // 15: com.gastroflow.inventory.StockMovement.item_id:type_name -> com.gastroflow.common.UUID
	3,  // 16: com.gastroflow.inventory.StockMovement.movement_type:type_name -> com.gastroflow.inventory.MovementType
	4,  // 17: com.gastroflow.inventory.StockMovement.reason:type_name -> com.gastroflow.inventory.MovementReason
	15, // 18: com.gastroflow.inventory.StockMovement.cost:type_name -> com.gastroflow.common.Money
	14, // 19: com.gastroflow.inventory.StockMovement.order_id:type_name -> com.gastroflow.common.UUID
	14, // 20: com.gastroflow.inventory.StockMovement.restaurant_id:type_name -> com.gastroflow.common.UUID
	14, // 21: com.gastroflow.inventory.StockMovement.branch_id:type_name -> com.gastroflow.common.UUID
	19, // 22: com.gastroflow.inventory.StockMovement.movement_date:type_name -> google.protobuf.Timestamp
	16, // 23: com.gastroflow.inventory.StockMovement.audit_info:type_name -> com.gastroflow.common.AuditInfo
	14, // 24: com.gastroflow.inventory.PurchaseOrder.id:type_name -> com.gastroflow.common.UUID
	14, // 25: com.gastroflow.inventory.PurchaseOrder.supplier_id:type_name -> com.gastroflow.common.UUID
	14, // 26: com.gastroflow.inventory.PurchaseOrder.restaurant_id:type_name -> com.gastroflow.common.UUID
	14, // 27: com.gastroflow.inventory.PurchaseOrder.branch_id:type_name -> com.gastroflow.common.UUID
	11, // 28: com.gastroflow.inventory.PurchaseOrder.items:type_name -> com.gastroflow.inventory.PurchaseOrderItem
	5,  // 29: com.gastroflow.inventory.PurchaseOrder.status:type_name -> com.gastroflow.inventory.PurchaseOrderStatus
	15, // 30: com.gastroflow.inventory.PurchaseOrder.total_amount:type_name -> com.gastroflow.common.Money
	19, // 31: com.gastroflow.inventory.PurchaseOrder.order_date:type_name -> google.protobuf.Timestamp
	19, // 32: com.gastroflow.inventory.PurchaseOrder.expected_delivery_date:type_name -> google.protobuf.Timestamp
	19, // 33: com.gastroflow.inventory.PurchaseOrder.actual_delivery_date:type_name -> google.protobuf.Timestamp
	16, // 34: com.gastroflow.inventory.PurchaseOrder.audit_info:type_name -> com.gastroflow.common.AuditInfo
	14, // 35: com.gastroflow.inventory.PurchaseOrderItem.item_id:type_name -> com.gastroflow.common.UUID
	15, // 36: com.gastroflow.inventory.PurchaseOrderItem.unit_price:type_name -> com.gastroflow.common.Money
	15, // 37: com.gastroflow.inventory.PurchaseOrderItem.total_price:type_name -> com.gastroflow.common.Money
	14, // 38: com.gastroflow.inventory.StockAdjustment.id:type_name -> com.gastroflow.common.UUID
	14, // 39: com.gastroflow.inventory.StockAdjustment.restaurant_id:type_name -> com.gastroflow.common.UUID
	14, // 40: com.gastroflow.inventory.StockAdjustment.branch_id:type_name -> com.gastroflow.common.UUID
	6,  // 41: com.gastroflow.inventory.StockAdjustment.adjustment_type:type_name -> com.gastroflow.inventory.AdjustmentType
	13, // 42: com.gastroflow.inventory.StockAdjustment.items:type_name -> com.gastroflow.inventory.StockAdjustmentItem
	19, // 43: com.gastroflow.inventory.StockAdjustment.adjustment_date:type_name -> google.protobuf.Timestamp
	16, // 44: com.gastroflow.inventory.StockAdjustment.audit_info:type_name -> com.gastroflow.common.AuditInfo
	14, // 45: com.gastroflow.inventory.StockAdjustmentItem.item_id:type_name -> com.gastroflow.common.UUID
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_inventory_models_proto_init() }
func file_inventory_models_proto_init() {
	if File_inventory_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inventory_models_proto_rawDesc), len(file_inventory_models_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inventory_models_proto_goTypes,
		DependencyIndexes: file_inventory_models_proto_depIdxs,
		EnumInfos:         file_inventory_models_proto_enumTypes,
		MessageInfos:      file_inventory_models_proto_msgTypes,
	}.Build()
	File_inventory_models_proto = out.File
	file_inventory_models_proto_goTypes = nil
	file_inventory_models_proto_depIdxs = nil
}
