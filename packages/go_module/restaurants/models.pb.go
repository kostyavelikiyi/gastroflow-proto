// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: restaurants/models.proto

package restaurants

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/gastroflow/proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CuisineType - тип кухни
type CuisineType int32

const (
	CuisineType_CUISINE_TYPE_UNSPECIFIED   CuisineType = 0
	CuisineType_CUISINE_TYPE_ITALIAN       CuisineType = 1  // Итальянская
	CuisineType_CUISINE_TYPE_JAPANESE      CuisineType = 2  // Японская
	CuisineType_CUISINE_TYPE_CHINESE       CuisineType = 3  // Китайская
	CuisineType_CUISINE_TYPE_MEXICAN       CuisineType = 4  // Мексиканская
	CuisineType_CUISINE_TYPE_INDIAN        CuisineType = 5  // Индийская
	CuisineType_CUISINE_TYPE_FRENCH        CuisineType = 6  // Французская
	CuisineType_CUISINE_TYPE_AMERICAN      CuisineType = 7  // Американская
	CuisineType_CUISINE_TYPE_MEDITERRANEAN CuisineType = 8  // Средиземноморская
	CuisineType_CUISINE_TYPE_THAI          CuisineType = 9  // Тайская
	CuisineType_CUISINE_TYPE_KOREAN        CuisineType = 10 // Корейская
	CuisineType_CUISINE_TYPE_RUSSIAN       CuisineType = 11 // Русская
	CuisineType_CUISINE_TYPE_UZBEK         CuisineType = 12 // Узбекская
	CuisineType_CUISINE_TYPE_GEORGIAN      CuisineType = 13 // Грузинская
	CuisineType_CUISINE_TYPE_TURKISH       CuisineType = 14 // Турецкая
	CuisineType_CUISINE_TYPE_FAST_FOOD     CuisineType = 15 // Фаст-фуд
	CuisineType_CUISINE_TYPE_PIZZA         CuisineType = 16 // Пицца
	CuisineType_CUISINE_TYPE_BURGER        CuisineType = 17 // Бургеры
	CuisineType_CUISINE_TYPE_SUSHI         CuisineType = 18 // Суши
	CuisineType_CUISINE_TYPE_GRILL         CuisineType = 19 // Гриль
	CuisineType_CUISINE_TYPE_SEAFOOD       CuisineType = 20 // Морепродукты
	CuisineType_CUISINE_TYPE_VEGETARIAN    CuisineType = 21 // Вегетарианская
	CuisineType_CUISINE_TYPE_VEGAN         CuisineType = 22 // Веганская
	CuisineType_CUISINE_TYPE_DESSERTS      CuisineType = 23 // Десерты
	CuisineType_CUISINE_TYPE_COFFEE        CuisineType = 24 // Кофе и напитки
)

// Enum value maps for CuisineType.
var (
	CuisineType_name = map[int32]string{
		0:  "CUISINE_TYPE_UNSPECIFIED",
		1:  "CUISINE_TYPE_ITALIAN",
		2:  "CUISINE_TYPE_JAPANESE",
		3:  "CUISINE_TYPE_CHINESE",
		4:  "CUISINE_TYPE_MEXICAN",
		5:  "CUISINE_TYPE_INDIAN",
		6:  "CUISINE_TYPE_FRENCH",
		7:  "CUISINE_TYPE_AMERICAN",
		8:  "CUISINE_TYPE_MEDITERRANEAN",
		9:  "CUISINE_TYPE_THAI",
		10: "CUISINE_TYPE_KOREAN",
		11: "CUISINE_TYPE_RUSSIAN",
		12: "CUISINE_TYPE_UZBEK",
		13: "CUISINE_TYPE_GEORGIAN",
		14: "CUISINE_TYPE_TURKISH",
		15: "CUISINE_TYPE_FAST_FOOD",
		16: "CUISINE_TYPE_PIZZA",
		17: "CUISINE_TYPE_BURGER",
		18: "CUISINE_TYPE_SUSHI",
		19: "CUISINE_TYPE_GRILL",
		20: "CUISINE_TYPE_SEAFOOD",
		21: "CUISINE_TYPE_VEGETARIAN",
		22: "CUISINE_TYPE_VEGAN",
		23: "CUISINE_TYPE_DESSERTS",
		24: "CUISINE_TYPE_COFFEE",
	}
	CuisineType_value = map[string]int32{
		"CUISINE_TYPE_UNSPECIFIED":   0,
		"CUISINE_TYPE_ITALIAN":       1,
		"CUISINE_TYPE_JAPANESE":      2,
		"CUISINE_TYPE_CHINESE":       3,
		"CUISINE_TYPE_MEXICAN":       4,
		"CUISINE_TYPE_INDIAN":        5,
		"CUISINE_TYPE_FRENCH":        6,
		"CUISINE_TYPE_AMERICAN":      7,
		"CUISINE_TYPE_MEDITERRANEAN": 8,
		"CUISINE_TYPE_THAI":          9,
		"CUISINE_TYPE_KOREAN":        10,
		"CUISINE_TYPE_RUSSIAN":       11,
		"CUISINE_TYPE_UZBEK":         12,
		"CUISINE_TYPE_GEORGIAN":      13,
		"CUISINE_TYPE_TURKISH":       14,
		"CUISINE_TYPE_FAST_FOOD":     15,
		"CUISINE_TYPE_PIZZA":         16,
		"CUISINE_TYPE_BURGER":        17,
		"CUISINE_TYPE_SUSHI":         18,
		"CUISINE_TYPE_GRILL":         19,
		"CUISINE_TYPE_SEAFOOD":       20,
		"CUISINE_TYPE_VEGETARIAN":    21,
		"CUISINE_TYPE_VEGAN":         22,
		"CUISINE_TYPE_DESSERTS":      23,
		"CUISINE_TYPE_COFFEE":        24,
	}
)

func (x CuisineType) Enum() *CuisineType {
	p := new(CuisineType)
	*p = x
	return p
}

func (x CuisineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CuisineType) Descriptor() protoreflect.EnumDescriptor {
	return file_restaurants_models_proto_enumTypes[0].Descriptor()
}

func (CuisineType) Type() protoreflect.EnumType {
	return &file_restaurants_models_proto_enumTypes[0]
}

func (x CuisineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CuisineType.Descriptor instead.
func (CuisineType) EnumDescriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{0}
}

// IntervalType - тип временного интервала
type IntervalType int32

const (
	IntervalType_INTERVAL_TYPE_UNSPECIFIED IntervalType = 0
	IntervalType_INTERVAL_TYPE_WORKING     IntervalType = 1 // Рабочие часы
	IntervalType_INTERVAL_TYPE_BREAK       IntervalType = 2 // Перерыв
	IntervalType_INTERVAL_TYPE_CLEANING    IntervalType = 3 // Санитарный час
	IntervalType_INTERVAL_TYPE_SPECIAL     IntervalType = 4 // Специальные часы
)

// Enum value maps for IntervalType.
var (
	IntervalType_name = map[int32]string{
		0: "INTERVAL_TYPE_UNSPECIFIED",
		1: "INTERVAL_TYPE_WORKING",
		2: "INTERVAL_TYPE_BREAK",
		3: "INTERVAL_TYPE_CLEANING",
		4: "INTERVAL_TYPE_SPECIAL",
	}
	IntervalType_value = map[string]int32{
		"INTERVAL_TYPE_UNSPECIFIED": 0,
		"INTERVAL_TYPE_WORKING":     1,
		"INTERVAL_TYPE_BREAK":       2,
		"INTERVAL_TYPE_CLEANING":    3,
		"INTERVAL_TYPE_SPECIAL":     4,
	}
)

func (x IntervalType) Enum() *IntervalType {
	p := new(IntervalType)
	*p = x
	return p
}

func (x IntervalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntervalType) Descriptor() protoreflect.EnumDescriptor {
	return file_restaurants_models_proto_enumTypes[1].Descriptor()
}

func (IntervalType) Type() protoreflect.EnumType {
	return &file_restaurants_models_proto_enumTypes[1]
}

func (x IntervalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntervalType.Descriptor instead.
func (IntervalType) EnumDescriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{1}
}

// NotificationChannel - канал уведомлений
type NotificationChannel int32

const (
	NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED NotificationChannel = 0
	NotificationChannel_NOTIFICATION_CHANNEL_EMAIL       NotificationChannel = 1 // Email
	NotificationChannel_NOTIFICATION_CHANNEL_SMS         NotificationChannel = 2 // SMS
	NotificationChannel_NOTIFICATION_CHANNEL_PUSH        NotificationChannel = 3 // Push уведомления
	NotificationChannel_NOTIFICATION_CHANNEL_TELEGRAM    NotificationChannel = 4 // Telegram
	NotificationChannel_NOTIFICATION_CHANNEL_WHATSAPP    NotificationChannel = 5 // WhatsApp
	NotificationChannel_NOTIFICATION_CHANNEL_WEBHOOK     NotificationChannel = 6 // Webhook
)

// Enum value maps for NotificationChannel.
var (
	NotificationChannel_name = map[int32]string{
		0: "NOTIFICATION_CHANNEL_UNSPECIFIED",
		1: "NOTIFICATION_CHANNEL_EMAIL",
		2: "NOTIFICATION_CHANNEL_SMS",
		3: "NOTIFICATION_CHANNEL_PUSH",
		4: "NOTIFICATION_CHANNEL_TELEGRAM",
		5: "NOTIFICATION_CHANNEL_WHATSAPP",
		6: "NOTIFICATION_CHANNEL_WEBHOOK",
	}
	NotificationChannel_value = map[string]int32{
		"NOTIFICATION_CHANNEL_UNSPECIFIED": 0,
		"NOTIFICATION_CHANNEL_EMAIL":       1,
		"NOTIFICATION_CHANNEL_SMS":         2,
		"NOTIFICATION_CHANNEL_PUSH":        3,
		"NOTIFICATION_CHANNEL_TELEGRAM":    4,
		"NOTIFICATION_CHANNEL_WHATSAPP":    5,
		"NOTIFICATION_CHANNEL_WEBHOOK":     6,
	}
)

func (x NotificationChannel) Enum() *NotificationChannel {
	p := new(NotificationChannel)
	*p = x
	return p
}

func (x NotificationChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_restaurants_models_proto_enumTypes[2].Descriptor()
}

func (NotificationChannel) Type() protoreflect.EnumType {
	return &file_restaurants_models_proto_enumTypes[2]
}

func (x NotificationChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationChannel.Descriptor instead.
func (NotificationChannel) EnumDescriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{2}
}

// Restaurant - основная сущность ресторана
type Restaurant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор ресторана
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название ресторана
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Описание ресторана
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Тип кухни
	CuisineTypes []CuisineType `protobuf:"varint,4,rep,packed,name=cuisine_types,json=cuisineTypes,proto3,enum=com.gastroflow.restaurants.CuisineType" json:"cuisine_types,omitempty"`
	// Основная контактная информация
	ContactInfo *common.ContactInfo `protobuf:"bytes,5,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	// Основной адрес ресторана
	Address *common.Address `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	// Текущий статус работы
	Status common.RestaurantStatus `protobuf:"varint,7,opt,name=status,proto3,enum=com.gastroflow.common.RestaurantStatus" json:"status,omitempty"`
	// Настройки ресторана
	Settings *RestaurantSettings `protobuf:"bytes,8,opt,name=settings,proto3" json:"settings,omitempty"`
	// График работы
	WorkingHours []*WorkingHours `protobuf:"bytes,9,rep,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	// Филиалы ресторана
	Branches []*Branch `protobuf:"bytes,10,rep,name=branches,proto3" json:"branches,omitempty"`
	// Логотип ресторана
	LogoUrl string `protobuf:"bytes,11,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	// Фотографии ресторана
	Images []string `protobuf:"bytes,12,rep,name=images,proto3" json:"images,omitempty"`
	// Рейтинг ресторана (1-5)
	Rating float64 `protobuf:"fixed64,13,opt,name=rating,proto3" json:"rating,omitempty"`
	// Количество отзывов
	ReviewCount int32 `protobuf:"varint,14,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`
	// Средняя стоимость заказа
	AverageOrderValue *common.Money `protobuf:"bytes,15,opt,name=average_order_value,json=averageOrderValue,proto3" json:"average_order_value,omitempty"`
	// Время доставки (мин/макс в минутах)
	DeliveryTimeRange *DeliveryTimeRange `protobuf:"bytes,16,opt,name=delivery_time_range,json=deliveryTimeRange,proto3" json:"delivery_time_range,omitempty"`
	// Зона доставки
	DeliveryZone *DeliveryZone `protobuf:"bytes,17,opt,name=delivery_zone,json=deliveryZone,proto3" json:"delivery_zone,omitempty"`
	// Владелец ресторана
	OwnerId *common.UUID `protobuf:"bytes,18,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Активность ресторана
	IsActive bool `protobuf:"varint,19,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,20,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Restaurant) Reset() {
	*x = Restaurant{}
	mi := &file_restaurants_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Restaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restaurant) ProtoMessage() {}

func (x *Restaurant) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restaurant.ProtoReflect.Descriptor instead.
func (*Restaurant) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{0}
}

func (x *Restaurant) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Restaurant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Restaurant) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Restaurant) GetCuisineTypes() []CuisineType {
	if x != nil {
		return x.CuisineTypes
	}
	return nil
}

func (x *Restaurant) GetContactInfo() *common.ContactInfo {
	if x != nil {
		return x.ContactInfo
	}
	return nil
}

func (x *Restaurant) GetAddress() *common.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Restaurant) GetStatus() common.RestaurantStatus {
	if x != nil {
		return x.Status
	}
	return common.RestaurantStatus(0)
}

func (x *Restaurant) GetSettings() *RestaurantSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Restaurant) GetWorkingHours() []*WorkingHours {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

func (x *Restaurant) GetBranches() []*Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *Restaurant) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Restaurant) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Restaurant) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Restaurant) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *Restaurant) GetAverageOrderValue() *common.Money {
	if x != nil {
		return x.AverageOrderValue
	}
	return nil
}

func (x *Restaurant) GetDeliveryTimeRange() *DeliveryTimeRange {
	if x != nil {
		return x.DeliveryTimeRange
	}
	return nil
}

func (x *Restaurant) GetDeliveryZone() *DeliveryZone {
	if x != nil {
		return x.DeliveryZone
	}
	return nil
}

func (x *Restaurant) GetOwnerId() *common.UUID {
	if x != nil {
		return x.OwnerId
	}
	return nil
}

func (x *Restaurant) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Restaurant) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// Branch - филиал ресторана
type Branch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор филиала
	Id *common.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название филиала
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Адрес филиала
	Address *common.Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Контактная информация филиала
	ContactInfo *common.ContactInfo `protobuf:"bytes,4,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	// Статус филиала
	Status common.RestaurantStatus `protobuf:"varint,5,opt,name=status,proto3,enum=com.gastroflow.common.RestaurantStatus" json:"status,omitempty"`
	// График работы филиала
	WorkingHours []*WorkingHours `protobuf:"bytes,6,rep,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	// Настройки филиала (могут переопределять настройки ресторана)
	Settings *RestaurantSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	// Менеджер филиала
	ManagerId *common.UUID `protobuf:"bytes,8,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
	// Активность филиала
	IsActive bool `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Информация об аудите
	AuditInfo     *common.AuditInfo `protobuf:"bytes,10,opt,name=audit_info,json=auditInfo,proto3" json:"audit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Branch) Reset() {
	*x = Branch{}
	mi := &file_restaurants_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{1}
}

func (x *Branch) GetId() *common.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetAddress() *common.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Branch) GetContactInfo() *common.ContactInfo {
	if x != nil {
		return x.ContactInfo
	}
	return nil
}

func (x *Branch) GetStatus() common.RestaurantStatus {
	if x != nil {
		return x.Status
	}
	return common.RestaurantStatus(0)
}

func (x *Branch) GetWorkingHours() []*WorkingHours {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

func (x *Branch) GetSettings() *RestaurantSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Branch) GetManagerId() *common.UUID {
	if x != nil {
		return x.ManagerId
	}
	return nil
}

func (x *Branch) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Branch) GetAuditInfo() *common.AuditInfo {
	if x != nil {
		return x.AuditInfo
	}
	return nil
}

// RestaurantSettings - настройки ресторана
type RestaurantSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Принимает ли заказы на вынос
	AcceptsTakeaway bool `protobuf:"varint,1,opt,name=accepts_takeaway,json=acceptsTakeaway,proto3" json:"accepts_takeaway,omitempty"`
	// Принимает ли заказы с доставкой
	AcceptsDelivery bool `protobuf:"varint,2,opt,name=accepts_delivery,json=acceptsDelivery,proto3" json:"accepts_delivery,omitempty"`
	// Принимает ли заказы в зале
	AcceptsDineIn bool `protobuf:"varint,3,opt,name=accepts_dine_in,json=acceptsDineIn,proto3" json:"accepts_dine_in,omitempty"`
	// Принимает ли заказы через внешние платформы (Яндекс.Еда и т.д.)
	AcceptsExternalOrders bool `protobuf:"varint,4,opt,name=accepts_external_orders,json=acceptsExternalOrders,proto3" json:"accepts_external_orders,omitempty"`
	// Автоматически принимает заказы без подтверждения
	AutoAcceptOrders bool `protobuf:"varint,5,opt,name=auto_accept_orders,json=autoAcceptOrders,proto3" json:"auto_accept_orders,omitempty"`
	// Минимальная сумма заказа для доставки
	MinimumDeliveryOrder *common.Money `protobuf:"bytes,6,opt,name=minimum_delivery_order,json=minimumDeliveryOrder,proto3" json:"minimum_delivery_order,omitempty"`
	// Стоимость доставки
	DeliveryFee *common.Money `protobuf:"bytes,7,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	// Бесплатная доставка от суммы
	FreeDeliveryThreshold *common.Money `protobuf:"bytes,8,opt,name=free_delivery_threshold,json=freeDeliveryThreshold,proto3" json:"free_delivery_threshold,omitempty"`
	// Максимальное время приготовления (минуты)
	MaxPreparationTime int32 `protobuf:"varint,9,opt,name=max_preparation_time,json=maxPreparationTime,proto3" json:"max_preparation_time,omitempty"`
	// Предварительное время приготовления по умолчанию
	DefaultPreparationTime int32 `protobuf:"varint,10,opt,name=default_preparation_time,json=defaultPreparationTime,proto3" json:"default_preparation_time,omitempty"`
	// Принимаемые способы оплаты
	AcceptedPaymentMethods []common.PaymentMethod `protobuf:"varint,11,rep,packed,name=accepted_payment_methods,json=acceptedPaymentMethods,proto3,enum=com.gastroflow.common.PaymentMethod" json:"accepted_payment_methods,omitempty"`
	// Настройки уведомлений
	NotificationSettings *NotificationSettings `protobuf:"bytes,12,opt,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"`
	// Временная зона ресторана
	Timezone string `protobuf:"bytes,13,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Валюта ресторана
	Currency string `protobuf:"bytes,14,opt,name=currency,proto3" json:"currency,omitempty"`
	// Язык по умолчанию
	DefaultLanguage common.Language `protobuf:"varint,15,opt,name=default_language,json=defaultLanguage,proto3,enum=com.gastroflow.common.Language" json:"default_language,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RestaurantSettings) Reset() {
	*x = RestaurantSettings{}
	mi := &file_restaurants_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantSettings) ProtoMessage() {}

func (x *RestaurantSettings) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantSettings.ProtoReflect.Descriptor instead.
func (*RestaurantSettings) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{2}
}

func (x *RestaurantSettings) GetAcceptsTakeaway() bool {
	if x != nil {
		return x.AcceptsTakeaway
	}
	return false
}

func (x *RestaurantSettings) GetAcceptsDelivery() bool {
	if x != nil {
		return x.AcceptsDelivery
	}
	return false
}

func (x *RestaurantSettings) GetAcceptsDineIn() bool {
	if x != nil {
		return x.AcceptsDineIn
	}
	return false
}

func (x *RestaurantSettings) GetAcceptsExternalOrders() bool {
	if x != nil {
		return x.AcceptsExternalOrders
	}
	return false
}

func (x *RestaurantSettings) GetAutoAcceptOrders() bool {
	if x != nil {
		return x.AutoAcceptOrders
	}
	return false
}

func (x *RestaurantSettings) GetMinimumDeliveryOrder() *common.Money {
	if x != nil {
		return x.MinimumDeliveryOrder
	}
	return nil
}

func (x *RestaurantSettings) GetDeliveryFee() *common.Money {
	if x != nil {
		return x.DeliveryFee
	}
	return nil
}

func (x *RestaurantSettings) GetFreeDeliveryThreshold() *common.Money {
	if x != nil {
		return x.FreeDeliveryThreshold
	}
	return nil
}

func (x *RestaurantSettings) GetMaxPreparationTime() int32 {
	if x != nil {
		return x.MaxPreparationTime
	}
	return 0
}

func (x *RestaurantSettings) GetDefaultPreparationTime() int32 {
	if x != nil {
		return x.DefaultPreparationTime
	}
	return 0
}

func (x *RestaurantSettings) GetAcceptedPaymentMethods() []common.PaymentMethod {
	if x != nil {
		return x.AcceptedPaymentMethods
	}
	return nil
}

func (x *RestaurantSettings) GetNotificationSettings() *NotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

func (x *RestaurantSettings) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *RestaurantSettings) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *RestaurantSettings) GetDefaultLanguage() common.Language {
	if x != nil {
		return x.DefaultLanguage
	}
	return common.Language(0)
}

// WorkingHours - график работы
type WorkingHours struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// День недели
	Day common.WeekDay `protobuf:"varint,1,opt,name=day,proto3,enum=com.gastroflow.common.WeekDay" json:"day,omitempty"`
	// Работает ли в этот день
	IsWorking bool `protobuf:"varint,2,opt,name=is_working,json=isWorking,proto3" json:"is_working,omitempty"`
	// Временные интервалы работы в течение дня
	Intervals []*TimeInterval `protobuf:"bytes,3,rep,name=intervals,proto3" json:"intervals,omitempty"`
	// Специальные часы (например, для праздников)
	IsSpecialHours bool `protobuf:"varint,4,opt,name=is_special_hours,json=isSpecialHours,proto3" json:"is_special_hours,omitempty"`
	// Комментарий к графику (например, "Сокращенный день")
	Comment       string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkingHours) Reset() {
	*x = WorkingHours{}
	mi := &file_restaurants_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkingHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHours) ProtoMessage() {}

func (x *WorkingHours) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHours.ProtoReflect.Descriptor instead.
func (*WorkingHours) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{3}
}

func (x *WorkingHours) GetDay() common.WeekDay {
	if x != nil {
		return x.Day
	}
	return common.WeekDay(0)
}

func (x *WorkingHours) GetIsWorking() bool {
	if x != nil {
		return x.IsWorking
	}
	return false
}

func (x *WorkingHours) GetIntervals() []*TimeInterval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

func (x *WorkingHours) GetIsSpecialHours() bool {
	if x != nil {
		return x.IsSpecialHours
	}
	return false
}

func (x *WorkingHours) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// TimeInterval - временной интервал
type TimeInterval struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Время начала работы (HH:MM)
	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Время окончания работы (HH:MM)
	EndTime string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Тип интервала (основные часы, обеденный перерыв и т.д.)
	Type          IntervalType `protobuf:"varint,3,opt,name=type,proto3,enum=com.gastroflow.restaurants.IntervalType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeInterval) Reset() {
	*x = TimeInterval{}
	mi := &file_restaurants_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeInterval) ProtoMessage() {}

func (x *TimeInterval) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeInterval.ProtoReflect.Descriptor instead.
func (*TimeInterval) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{4}
}

func (x *TimeInterval) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TimeInterval) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TimeInterval) GetType() IntervalType {
	if x != nil {
		return x.Type
	}
	return IntervalType_INTERVAL_TYPE_UNSPECIFIED
}

// DeliveryTimeRange - диапазон времени доставки
type DeliveryTimeRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Минимальное время доставки (минуты)
	MinDeliveryTime int32 `protobuf:"varint,1,opt,name=min_delivery_time,json=minDeliveryTime,proto3" json:"min_delivery_time,omitempty"`
	// Максимальное время доставки (минуты)
	MaxDeliveryTime int32 `protobuf:"varint,2,opt,name=max_delivery_time,json=maxDeliveryTime,proto3" json:"max_delivery_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeliveryTimeRange) Reset() {
	*x = DeliveryTimeRange{}
	mi := &file_restaurants_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryTimeRange) ProtoMessage() {}

func (x *DeliveryTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryTimeRange.ProtoReflect.Descriptor instead.
func (*DeliveryTimeRange) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{5}
}

func (x *DeliveryTimeRange) GetMinDeliveryTime() int32 {
	if x != nil {
		return x.MinDeliveryTime
	}
	return 0
}

func (x *DeliveryTimeRange) GetMaxDeliveryTime() int32 {
	if x != nil {
		return x.MaxDeliveryTime
	}
	return 0
}

// DeliveryZone - зона доставки
type DeliveryZone struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Центральные координаты (ресторан)
	CenterLatitude  float64 `protobuf:"fixed64,1,opt,name=center_latitude,json=centerLatitude,proto3" json:"center_latitude,omitempty"`
	CenterLongitude float64 `protobuf:"fixed64,2,opt,name=center_longitude,json=centerLongitude,proto3" json:"center_longitude,omitempty"`
	// Радиус доставки в километрах
	RadiusKm float64 `protobuf:"fixed64,3,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"`
	// Полигональные зоны доставки (более точное определение)
	Polygons      []*DeliveryPolygon `protobuf:"bytes,4,rep,name=polygons,proto3" json:"polygons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeliveryZone) Reset() {
	*x = DeliveryZone{}
	mi := &file_restaurants_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryZone) ProtoMessage() {}

func (x *DeliveryZone) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryZone.ProtoReflect.Descriptor instead.
func (*DeliveryZone) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{6}
}

func (x *DeliveryZone) GetCenterLatitude() float64 {
	if x != nil {
		return x.CenterLatitude
	}
	return 0
}

func (x *DeliveryZone) GetCenterLongitude() float64 {
	if x != nil {
		return x.CenterLongitude
	}
	return 0
}

func (x *DeliveryZone) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

func (x *DeliveryZone) GetPolygons() []*DeliveryPolygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

// DeliveryPolygon - полигональная зона доставки
type DeliveryPolygon struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Точки полигона
	Points []*GeoPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// Дополнительная стоимость доставки в этой зоне
	AdditionalFee *common.Money `protobuf:"bytes,2,opt,name=additional_fee,json=additionalFee,proto3" json:"additional_fee,omitempty"`
	// Название зоны
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeliveryPolygon) Reset() {
	*x = DeliveryPolygon{}
	mi := &file_restaurants_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryPolygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryPolygon) ProtoMessage() {}

func (x *DeliveryPolygon) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryPolygon.ProtoReflect.Descriptor instead.
func (*DeliveryPolygon) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{7}
}

func (x *DeliveryPolygon) GetPoints() []*GeoPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *DeliveryPolygon) GetAdditionalFee() *common.Money {
	if x != nil {
		return x.AdditionalFee
	}
	return nil
}

func (x *DeliveryPolygon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GeoPoint - географическая точка
type GeoPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoPoint) Reset() {
	*x = GeoPoint{}
	mi := &file_restaurants_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPoint) ProtoMessage() {}

func (x *GeoPoint) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPoint.ProtoReflect.Descriptor instead.
func (*GeoPoint) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{8}
}

func (x *GeoPoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeoPoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// NotificationSettings - настройки уведомлений
type NotificationSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уведомлять о новых заказах
	NotifyNewOrders bool `protobuf:"varint,1,opt,name=notify_new_orders,json=notifyNewOrders,proto3" json:"notify_new_orders,omitempty"`
	// Уведомлять об отмене заказов
	NotifyCancelledOrders bool `protobuf:"varint,2,opt,name=notify_cancelled_orders,json=notifyCancelledOrders,proto3" json:"notify_cancelled_orders,omitempty"`
	// Уведомлять о готовности заказов
	NotifyReadyOrders bool `protobuf:"varint,3,opt,name=notify_ready_orders,json=notifyReadyOrders,proto3" json:"notify_ready_orders,omitempty"`
	// Уведомлять о проблемах с оплатой
	NotifyPaymentIssues bool `protobuf:"varint,4,opt,name=notify_payment_issues,json=notifyPaymentIssues,proto3" json:"notify_payment_issues,omitempty"`
	// Email для уведомлений
	NotificationEmail string `protobuf:"bytes,5,opt,name=notification_email,json=notificationEmail,proto3" json:"notification_email,omitempty"`
	// Телефон для SMS уведомлений
	NotificationPhone string `protobuf:"bytes,6,opt,name=notification_phone,json=notificationPhone,proto3" json:"notification_phone,omitempty"`
	// Способы уведомлений
	NotificationChannels []NotificationChannel `protobuf:"varint,7,rep,packed,name=notification_channels,json=notificationChannels,proto3,enum=com.gastroflow.restaurants.NotificationChannel" json:"notification_channels,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NotificationSettings) Reset() {
	*x = NotificationSettings{}
	mi := &file_restaurants_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettings) ProtoMessage() {}

func (x *NotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_restaurants_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettings.ProtoReflect.Descriptor instead.
func (*NotificationSettings) Descriptor() ([]byte, []int) {
	return file_restaurants_models_proto_rawDescGZIP(), []int{9}
}

func (x *NotificationSettings) GetNotifyNewOrders() bool {
	if x != nil {
		return x.NotifyNewOrders
	}
	return false
}

func (x *NotificationSettings) GetNotifyCancelledOrders() bool {
	if x != nil {
		return x.NotifyCancelledOrders
	}
	return false
}

func (x *NotificationSettings) GetNotifyReadyOrders() bool {
	if x != nil {
		return x.NotifyReadyOrders
	}
	return false
}

func (x *NotificationSettings) GetNotifyPaymentIssues() bool {
	if x != nil {
		return x.NotifyPaymentIssues
	}
	return false
}

func (x *NotificationSettings) GetNotificationEmail() string {
	if x != nil {
		return x.NotificationEmail
	}
	return ""
}

func (x *NotificationSettings) GetNotificationPhone() string {
	if x != nil {
		return x.NotificationPhone
	}
	return ""
}

func (x *NotificationSettings) GetNotificationChannels() []NotificationChannel {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

var File_restaurants_models_proto protoreflect.FileDescriptor

const file_restaurants_models_proto_rawDesc = "" +
	"\n" +
	"\x18restaurants/models.proto\x12\x1acom.gastroflow.restaurants\x1a\x1bbuf/validate/validate.proto\x1a\x12common/enums.proto\x1a\x12common/types.proto\"\x85\n" +
	"\n" +
	"\n" +
	"Restaurant\x123\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xc8\x01R\x04name\x12*\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xbaH\x05r\x03\x18\xd0\x0fR\vdescription\x12V\n" +
	"\rcuisine_types\x18\x04 \x03(\x0e2'.com.gastroflow.restaurants.CuisineTypeB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\fcuisineTypes\x12M\n" +
	"\fcontact_info\x18\x05 \x01(\v2\".com.gastroflow.common.ContactInfoB\x06\xbaH\x03\xc8\x01\x01R\vcontactInfo\x12@\n" +
	"\aaddress\x18\x06 \x01(\v2\x1e.com.gastroflow.common.AddressB\x06\xbaH\x03\xc8\x01\x01R\aaddress\x12I\n" +
	"\x06status\x18\a \x01(\x0e2'.com.gastroflow.common.RestaurantStatusB\b\xbaH\x05\x82\x01\x02 \x00R\x06status\x12R\n" +
	"\bsettings\x18\b \x01(\v2..com.gastroflow.restaurants.RestaurantSettingsB\x06\xbaH\x03\xc8\x01\x01R\bsettings\x12W\n" +
	"\rworking_hours\x18\t \x03(\v2(.com.gastroflow.restaurants.WorkingHoursB\b\xbaH\x05\x92\x01\x02\x10\aR\fworkingHours\x12H\n" +
	"\bbranches\x18\n" +
	" \x03(\v2\".com.gastroflow.restaurants.BranchB\b\xbaH\x05\x92\x01\x02\x10dR\bbranches\x12#\n" +
	"\blogo_url\x18\v \x01(\tB\b\xbaH\x05r\x03\x18\xf4\x03R\alogoUrl\x12'\n" +
	"\x06images\x18\f \x03(\tB\x0f\xbaH\f\x92\x01\t\x10\x14\"\x05r\x03\x18\xf4\x03R\x06images\x12/\n" +
	"\x06rating\x18\r \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\x14@)\x00\x00\x00\x00\x00\x00\xf0?R\x06rating\x12*\n" +
	"\freview_count\x18\x0e \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\vreviewCount\x12L\n" +
	"\x13average_order_value\x18\x0f \x01(\v2\x1c.com.gastroflow.common.MoneyR\x11averageOrderValue\x12]\n" +
	"\x13delivery_time_range\x18\x10 \x01(\v2-.com.gastroflow.restaurants.DeliveryTimeRangeR\x11deliveryTimeRange\x12M\n" +
	"\rdelivery_zone\x18\x11 \x01(\v2(.com.gastroflow.restaurants.DeliveryZoneR\fdeliveryZone\x12>\n" +
	"\bowner_id\x18\x12 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\aownerId\x12\x1b\n" +
	"\tis_active\x18\x13 \x01(\bR\bisActive\x12G\n" +
	"\n" +
	"audit_info\x18\x14 \x01(\v2 .com.gastroflow.common.AuditInfoB\x06\xbaH\x03\xc8\x01\x01R\tauditInfo\"\x80\x05\n" +
	"\x06Branch\x123\n" +
	"\x02id\x18\x01 \x01(\v2\x1b.com.gastroflow.common.UUIDB\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xc8\x01R\x04name\x12@\n" +
	"\aaddress\x18\x03 \x01(\v2\x1e.com.gastroflow.common.AddressB\x06\xbaH\x03\xc8\x01\x01R\aaddress\x12M\n" +
	"\fcontact_info\x18\x04 \x01(\v2\".com.gastroflow.common.ContactInfoB\x06\xbaH\x03\xc8\x01\x01R\vcontactInfo\x12I\n" +
	"\x06status\x18\x05 \x01(\x0e2'.com.gastroflow.common.RestaurantStatusB\b\xbaH\x05\x82\x01\x02 \x00R\x06status\x12W\n" +
	"\rworking_hours\x18\x06 \x03(\v2(.com.gastroflow.restaurants.WorkingHoursB\b\xbaH\x05\x92\x01\x02\x10\aR\fworkingHours\x12J\n" +
	"\bsettings\x18\a \x01(\v2..com.gastroflow.restaurants.RestaurantSettingsR\bsettings\x12:\n" +
	"\n" +
	"manager_id\x18\b \x01(\v2\x1b.com.gastroflow.common.UUIDR\tmanagerId\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\x12G\n" +
	"\n" +
	"audit_info\x18\n" +
	" \x01(\v2 .com.gastroflow.common.AuditInfoB\x06\xbaH\x03\xc8\x01\x01R\tauditInfo\"\xe2\a\n" +
	"\x12RestaurantSettings\x12)\n" +
	"\x10accepts_takeaway\x18\x01 \x01(\bR\x0facceptsTakeaway\x12)\n" +
	"\x10accepts_delivery\x18\x02 \x01(\bR\x0facceptsDelivery\x12&\n" +
	"\x0faccepts_dine_in\x18\x03 \x01(\bR\racceptsDineIn\x126\n" +
	"\x17accepts_external_orders\x18\x04 \x01(\bR\x15acceptsExternalOrders\x12,\n" +
	"\x12auto_accept_orders\x18\x05 \x01(\bR\x10autoAcceptOrders\x12R\n" +
	"\x16minimum_delivery_order\x18\x06 \x01(\v2\x1c.com.gastroflow.common.MoneyR\x14minimumDeliveryOrder\x12?\n" +
	"\fdelivery_fee\x18\a \x01(\v2\x1c.com.gastroflow.common.MoneyR\vdeliveryFee\x12T\n" +
	"\x17free_delivery_threshold\x18\b \x01(\v2\x1c.com.gastroflow.common.MoneyR\x15freeDeliveryThreshold\x12<\n" +
	"\x14max_preparation_time\x18\t \x01(\x05B\n" +
	"\xbaH\a\x1a\x05\x18\xe0\x03(\x01R\x12maxPreparationTime\x12D\n" +
	"\x18default_preparation_time\x18\n" +
	" \x01(\x05B\n" +
	"\xbaH\a\x1a\x05\x18\xe0\x03(\x01R\x16defaultPreparationTime\x12h\n" +
	"\x18accepted_payment_methods\x18\v \x03(\x0e2$.com.gastroflow.common.PaymentMethodB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\x16acceptedPaymentMethods\x12e\n" +
	"\x15notification_settings\x18\f \x01(\v20.com.gastroflow.restaurants.NotificationSettingsR\x14notificationSettings\x12#\n" +
	"\btimezone\x18\r \x01(\tB\a\xbaH\x04r\x02\x182R\btimezone\x12-\n" +
	"\bcurrency\x18\x0e \x01(\tB\x11\xbaH\x0er\f2\n" +
	"^[A-Z]{3}$R\bcurrency\x12T\n" +
	"\x10default_language\x18\x0f \x01(\x0e2\x1f.com.gastroflow.common.LanguageB\b\xbaH\x05\x82\x01\x02 \x00R\x0fdefaultLanguage\"\x89\x02\n" +
	"\fWorkingHours\x12:\n" +
	"\x03day\x18\x01 \x01(\x0e2\x1e.com.gastroflow.common.WeekDayB\b\xbaH\x05\x82\x01\x02 \x00R\x03day\x12\x1d\n" +
	"\n" +
	"is_working\x18\x02 \x01(\bR\tisWorking\x12P\n" +
	"\tintervals\x18\x03 \x03(\v2(.com.gastroflow.restaurants.TimeIntervalB\b\xbaH\x05\x92\x01\x02\x10\x05R\tintervals\x12(\n" +
	"\x10is_special_hours\x18\x04 \x01(\bR\x0eisSpecialHours\x12\"\n" +
	"\acomment\x18\x05 \x01(\tB\b\xbaH\x05r\x03\x18\xc8\x01R\acomment\"\xe2\x01\n" +
	"\fTimeInterval\x12F\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tB'\xbaH$r\"2 ^([01]?[0-9]|2[0-3]):[0-5][0-9]$R\tstartTime\x12B\n" +
	"\bend_time\x18\x02 \x01(\tB'\xbaH$r\"2 ^([01]?[0-9]|2[0-3]):[0-5][0-9]$R\aendTime\x12F\n" +
	"\x04type\x18\x03 \x01(\x0e2(.com.gastroflow.restaurants.IntervalTypeB\b\xbaH\x05\x82\x01\x02 \x00R\x04type\"\x83\x01\n" +
	"\x11DeliveryTimeRange\x126\n" +
	"\x11min_delivery_time\x18\x01 \x01(\x05B\n" +
	"\xbaH\a\x1a\x05\x18\xac\x02(\x05R\x0fminDeliveryTime\x126\n" +
	"\x11max_delivery_time\x18\x02 \x01(\x05B\n" +
	"\xbaH\a\x1a\x05\x18\xac\x02(\n" +
	"R\x0fmaxDeliveryTime\"\x9d\x02\n" +
	"\fDeliveryZone\x12@\n" +
	"\x0fcenter_latitude\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\x0ecenterLatitude\x12B\n" +
	"\x10center_longitude\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\x0fcenterLongitude\x124\n" +
	"\tradius_km\x18\x03 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00I@)\x00\x00\x00\x00\x00\x00\xe0?R\bradiusKm\x12Q\n" +
	"\bpolygons\x18\x04 \x03(\v2+.com.gastroflow.restaurants.DeliveryPolygonB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\bpolygons\"\xbd\x01\n" +
	"\x0fDeliveryPolygon\x12H\n" +
	"\x06points\x18\x01 \x03(\v2$.com.gastroflow.restaurants.GeoPointB\n" +
	"\xbaH\a\x92\x01\x04\b\x03\x10dR\x06points\x12C\n" +
	"\x0eadditional_fee\x18\x02 \x01(\v2\x1c.com.gastroflow.common.MoneyR\radditionalFee\x12\x1b\n" +
	"\x04name\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x18dR\x04name\"v\n" +
	"\bGeoPoint\x123\n" +
	"\blatitude\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\blatitude\x125\n" +
	"\tlongitude\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\tlongitude\"\x80\x04\n" +
	"\x14NotificationSettings\x12*\n" +
	"\x11notify_new_orders\x18\x01 \x01(\bR\x0fnotifyNewOrders\x126\n" +
	"\x17notify_cancelled_orders\x18\x02 \x01(\bR\x15notifyCancelledOrders\x12.\n" +
	"\x13notify_ready_orders\x18\x03 \x01(\bR\x11notifyReadyOrders\x122\n" +
	"\x15notify_payment_issues\x18\x04 \x01(\bR\x13notifyPaymentIssues\x12f\n" +
	"\x12notification_email\x18\x05 \x01(\tB7\xbaH4r220^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$R\x11notificationEmail\x12H\n" +
	"\x12notification_phone\x18\x06 \x01(\tB\x19\xbaH\x16r\x142\x12^\\+[1-9]\\d{10,14}$R\x11notificationPhone\x12n\n" +
	"\x15notification_channels\x18\a \x03(\x0e2/.com.gastroflow.restaurants.NotificationChannelB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\x14notificationChannels*\x98\x05\n" +
	"\vCuisineType\x12\x1c\n" +
	"\x18CUISINE_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14CUISINE_TYPE_ITALIAN\x10\x01\x12\x19\n" +
	"\x15CUISINE_TYPE_JAPANESE\x10\x02\x12\x18\n" +
	"\x14CUISINE_TYPE_CHINESE\x10\x03\x12\x18\n" +
	"\x14CUISINE_TYPE_MEXICAN\x10\x04\x12\x17\n" +
	"\x13CUISINE_TYPE_INDIAN\x10\x05\x12\x17\n" +
	"\x13CUISINE_TYPE_FRENCH\x10\x06\x12\x19\n" +
	"\x15CUISINE_TYPE_AMERICAN\x10\a\x12\x1e\n" +
	"\x1aCUISINE_TYPE_MEDITERRANEAN\x10\b\x12\x15\n" +
	"\x11CUISINE_TYPE_THAI\x10\t\x12\x17\n" +
	"\x13CUISINE_TYPE_KOREAN\x10\n" +
	"\x12\x18\n" +
	"\x14CUISINE_TYPE_RUSSIAN\x10\v\x12\x16\n" +
	"\x12CUISINE_TYPE_UZBEK\x10\f\x12\x19\n" +
	"\x15CUISINE_TYPE_GEORGIAN\x10\r\x12\x18\n" +
	"\x14CUISINE_TYPE_TURKISH\x10\x0e\x12\x1a\n" +
	"\x16CUISINE_TYPE_FAST_FOOD\x10\x0f\x12\x16\n" +
	"\x12CUISINE_TYPE_PIZZA\x10\x10\x12\x17\n" +
	"\x13CUISINE_TYPE_BURGER\x10\x11\x12\x16\n" +
	"\x12CUISINE_TYPE_SUSHI\x10\x12\x12\x16\n" +
	"\x12CUISINE_TYPE_GRILL\x10\x13\x12\x18\n" +
	"\x14CUISINE_TYPE_SEAFOOD\x10\x14\x12\x1b\n" +
	"\x17CUISINE_TYPE_VEGETARIAN\x10\x15\x12\x16\n" +
	"\x12CUISINE_TYPE_VEGAN\x10\x16\x12\x19\n" +
	"\x15CUISINE_TYPE_DESSERTS\x10\x17\x12\x17\n" +
	"\x13CUISINE_TYPE_COFFEE\x10\x18*\x98\x01\n" +
	"\fIntervalType\x12\x1d\n" +
	"\x19INTERVAL_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15INTERVAL_TYPE_WORKING\x10\x01\x12\x17\n" +
	"\x13INTERVAL_TYPE_BREAK\x10\x02\x12\x1a\n" +
	"\x16INTERVAL_TYPE_CLEANING\x10\x03\x12\x19\n" +
	"\x15INTERVAL_TYPE_SPECIAL\x10\x04*\x80\x02\n" +
	"\x13NotificationChannel\x12$\n" +
	" NOTIFICATION_CHANNEL_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aNOTIFICATION_CHANNEL_EMAIL\x10\x01\x12\x1c\n" +
	"\x18NOTIFICATION_CHANNEL_SMS\x10\x02\x12\x1d\n" +
	"\x19NOTIFICATION_CHANNEL_PUSH\x10\x03\x12!\n" +
	"\x1dNOTIFICATION_CHANNEL_TELEGRAM\x10\x04\x12!\n" +
	"\x1dNOTIFICATION_CHANNEL_WHATSAPP\x10\x05\x12 \n" +
	"\x1cNOTIFICATION_CHANNEL_WEBHOOK\x10\x06B\xe3\x01\n" +
	"\x1ecom.com.gastroflow.restaurantsB\vModelsProtoP\x01Z*github.com/gastroflow/proto-go/restaurants\xa2\x02\x03CGR\xaa\x02\x1aCom.Gastroflow.Restaurants\xca\x02\x1aCom\\Gastroflow\\Restaurants\xe2\x02&Com\\Gastroflow\\Restaurants\\GPBMetadata\xea\x02\x1cCom::Gastroflow::Restaurantsb\x06proto3"

var (
	file_restaurants_models_proto_rawDescOnce sync.Once
	file_restaurants_models_proto_rawDescData []byte
)

func file_restaurants_models_proto_rawDescGZIP() []byte {
	file_restaurants_models_proto_rawDescOnce.Do(func() {
		file_restaurants_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_restaurants_models_proto_rawDesc), len(file_restaurants_models_proto_rawDesc)))
	})
	return file_restaurants_models_proto_rawDescData
}

var file_restaurants_models_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_restaurants_models_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_restaurants_models_proto_goTypes = []any{
	(CuisineType)(0),             // 0: com.gastroflow.restaurants.CuisineType
	(IntervalType)(0),            // 1: com.gastroflow.restaurants.IntervalType
	(NotificationChannel)(0),     // 2: com.gastroflow.restaurants.NotificationChannel
	(*Restaurant)(nil),           // 3: com.gastroflow.restaurants.Restaurant
	(*Branch)(nil),               // 4: com.gastroflow.restaurants.Branch
	(*RestaurantSettings)(nil),   // 5: com.gastroflow.restaurants.RestaurantSettings
	(*WorkingHours)(nil),         // 6: com.gastroflow.restaurants.WorkingHours
	(*TimeInterval)(nil),         // 7: com.gastroflow.restaurants.TimeInterval
	(*DeliveryTimeRange)(nil),    // 8: com.gastroflow.restaurants.DeliveryTimeRange
	(*DeliveryZone)(nil),         // 9: com.gastroflow.restaurants.DeliveryZone
	(*DeliveryPolygon)(nil),      // 10: com.gastroflow.restaurants.DeliveryPolygon
	(*GeoPoint)(nil),             // 11: com.gastroflow.restaurants.GeoPoint
	(*NotificationSettings)(nil), // 12: com.gastroflow.restaurants.NotificationSettings
	(*common.UUID)(nil),          // 13: com.gastroflow.common.UUID
	(*common.ContactInfo)(nil),   // 14: com.gastroflow.common.ContactInfo
	(*common.Address)(nil),       // 15: com.gastroflow.common.Address
	(common.RestaurantStatus)(0), // 16: com.gastroflow.common.RestaurantStatus
	(*common.Money)(nil),         // 17: com.gastroflow.common.Money
	(*common.AuditInfo)(nil),     // 18: com.gastroflow.common.AuditInfo
	(common.PaymentMethod)(0),    // 19: com.gastroflow.common.PaymentMethod
	(common.Language)(0),         // 20: com.gastroflow.common.Language
	(common.WeekDay)(0),          // 21: com.gastroflow.common.WeekDay
}
var file_restaurants_models_proto_depIdxs = []int32{
	13, // 0: com.gastroflow.restaurants.Restaurant.id:type_name -> com.gastroflow.common.UUID
	0,  // 1: com.gastroflow.restaurants.Restaurant.cuisine_types:type_name -> com.gastroflow.restaurants.CuisineType
	14, // 2: com.gastroflow.restaurants.Restaurant.contact_info:type_name -> com.gastroflow.common.ContactInfo
	15, // 3: com.gastroflow.restaurants.Restaurant.address:type_name -> com.gastroflow.common.Address
	16, // 4: com.gastroflow.restaurants.Restaurant.status:type_name -> com.gastroflow.common.RestaurantStatus
	5,  // 5: com.gastroflow.restaurants.Restaurant.settings:type_name -> com.gastroflow.restaurants.RestaurantSettings
	6,  // 6: com.gastroflow.restaurants.Restaurant.working_hours:type_name -> com.gastroflow.restaurants.WorkingHours
	4,  // 7: com.gastroflow.restaurants.Restaurant.branches:type_name -> com.gastroflow.restaurants.Branch
	17, // 8: com.gastroflow.restaurants.Restaurant.average_order_value:type_name -> com.gastroflow.common.Money
	8,  // 9: com.gastroflow.restaurants.Restaurant.delivery_time_range:type_name -> com.gastroflow.restaurants.DeliveryTimeRange
	9,  // 10: com.gastroflow.restaurants.Restaurant.delivery_zone:type_name -> com.gastroflow.restaurants.DeliveryZone
	13, // 11: com.gastroflow.restaurants.Restaurant.owner_id:type_name -> com.gastroflow.common.UUID
	18, // 12: com.gastroflow.restaurants.Restaurant.audit_info:type_name -> com.gastroflow.common.AuditInfo
	13, // 13: com.gastroflow.restaurants.Branch.id:type_name -> com.gastroflow.common.UUID
	15, // 14: com.gastroflow.restaurants.Branch.address:type_name -> com.gastroflow.common.Address
	14, // 15: com.gastroflow.restaurants.Branch.contact_info:type_name -> com.gastroflow.common.ContactInfo
	16, // 16: com.gastroflow.restaurants.Branch.status:type_name -> com.gastroflow.common.RestaurantStatus
	6,  // 17: com.gastroflow.restaurants.Branch.working_hours:type_name -> com.gastroflow.restaurants.WorkingHours
	5,  // 18: com.gastroflow.restaurants.Branch.settings:type_name -> com.gastroflow.restaurants.RestaurantSettings
	13, // 19: com.gastroflow.restaurants.Branch.manager_id:type_name -> com.gastroflow.common.UUID
	18, // 20: com.gastroflow.restaurants.Branch.audit_info:type_name -> com.gastroflow.common.AuditInfo
	17, // 21: com.gastroflow.restaurants.RestaurantSettings.minimum_delivery_order:type_name -> com.gastroflow.common.Money
	17, // 22: com.gastroflow.restaurants.RestaurantSettings.delivery_fee:type_name -> com.gastroflow.common.Money
	17, // 23: com.gastroflow.restaurants.RestaurantSettings.free_delivery_threshold:type_name -> com.gastroflow.common.Money
	19, // 24: com.gastroflow.restaurants.RestaurantSettings.accepted_payment_methods:type_name -> com.gastroflow.common.PaymentMethod
	12, // 25: com.gastroflow.restaurants.RestaurantSettings.notification_settings:type_name -> com.gastroflow.restaurants.NotificationSettings
	20, // 26: com.gastroflow.restaurants.RestaurantSettings.default_language:type_name -> com.gastroflow.common.Language
	21, // 27: com.gastroflow.restaurants.WorkingHours.day:type_name -> com.gastroflow.common.WeekDay
	7,  // 28: com.gastroflow.restaurants.WorkingHours.intervals:type_name -> com.gastroflow.restaurants.TimeInterval
	1,  // 29: com.gastroflow.restaurants.TimeInterval.type:type_name -> com.gastroflow.restaurants.IntervalType
	10, // 30: com.gastroflow.restaurants.DeliveryZone.polygons:type_name -> com.gastroflow.restaurants.DeliveryPolygon
	11, // 31: com.gastroflow.restaurants.DeliveryPolygon.points:type_name -> com.gastroflow.restaurants.GeoPoint
	17, // 32: com.gastroflow.restaurants.DeliveryPolygon.additional_fee:type_name -> com.gastroflow.common.Money
	2,  // 33: com.gastroflow.restaurants.NotificationSettings.notification_channels:type_name -> com.gastroflow.restaurants.NotificationChannel
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_restaurants_models_proto_init() }
func file_restaurants_models_proto_init() {
	if File_restaurants_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_restaurants_models_proto_rawDesc), len(file_restaurants_models_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_restaurants_models_proto_goTypes,
		DependencyIndexes: file_restaurants_models_proto_depIdxs,
		EnumInfos:         file_restaurants_models_proto_enumTypes,
		MessageInfos:      file_restaurants_models_proto_msgTypes,
	}.Build()
	File_restaurants_models_proto = out.File
	file_restaurants_models_proto_goTypes = nil
	file_restaurants_models_proto_depIdxs = nil
}
